parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"fxsm":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=["average","big","colossal","fat","giant","gigantic","great","huge","immense","large","little","long","mammoth","massive","miniature","petite","puny","short","small","tall","tiny","boiling","breezy","broken","bumpy","chilly","cold","cool","creepy","crooked","cuddly","curly","damaged","damp","dirty","dry","dusty","filthy","flaky","fluffy","wet","broad","chubby","crooked","curved","deep","flat","high","hollow","low","narrow","round","shallow","skinny","square","steep","straight","wide","ancient","brief","early","fast","late","long","modern","old","quick","rapid","short","slow","swift","young","abundant","empty","few","heavy","light","many","numerous","Sound","cooing","deafening","faint","harsh","hissing","hushed","husky","loud","melodic","moaning","mute","noisy","purring","quiet","raspy","resonant","screeching","shrill","silent","soft","squealing","thundering","voiceless","whispering","bitter","delicious","fresh","juicy","ripe","rotten","salty","sour","spicy","stale","sticky","strong","sweet","tasteless","tasty","thirsty","fluttering","fuzzy","greasy","grubby","hard","hot","icy","loose","melted","plastic","prickly","rainy","rough","scattered","shaggy","shaky","sharp","shivering","silky","slimy","slippery","smooth","soft","solid","steady","sticky","tender","tight","uneven","weak","wet","wooden","afraid","angry","annoyed","anxious","arrogant","ashamed","awful","bad","bewildered","bored","combative","condemned","confused","creepy","cruel","dangerous","defeated","defiant","depressed","disgusted","disturbed","eerie","embarrassed","envious","evil","fierce","foolish","frantic","frightened","grieving","helpless","homeless","hungry","hurt","ill","jealous","lonely","mysterious","naughty","nervous","obnoxious","outrageous","panicky","repulsive","scary","scornful","selfish","sore","tense","terrible","thoughtless","tired","troubled","upset","uptight","weary","wicked","worried","agreeable","amused","brave","calm","charming","cheerful","comfortable","cooperative","courageous","delightful","determined","eager","elated","enchanting","encouraging","energetic","enthusiastic","excited","exuberant","fair","faithful","fantastic","fine","friendly","funny","gentle","glorious","good","happy","healthy","helpful","hilarious","jolly","joyous","kind","lively","lovely","lucky","obedient","perfect","pleasant","proud","relieved","silly","smiling","splendid","successful","thoughtful","victorious","vivacious","witty","wonderful","zealous","zany","other","good","new","old","great","high","small","different","large","local","social","important","long","young","national","british","right","early","possible","big","little","political","able","late","general","full","far","low","public","available","bad","main","sure","clear","major","economic","only","likely","real","black","particular","international","special","difficult","certain","open","whole","white","free","short","easy","strong","european","central","similar","human","common","necessary","single","personal","hard","private","poor","financial","wide","foreign","simple","recent","concerned","american","various","close","fine","english","wrong","present","royal","natural","individual","nice","french","following","current","modern","labour","legal","happy","final","red","normal","serious","previous","total","prime","significant","industrial","sorry","dead","specific","appropriate","top","soviet","basic","military","original","successful","aware","hon","popular","heavy","professional","direct","dark","cold","ready","green","useful","effective","western","traditional","scottish","german","independent","deep","interesting","considerable","involved","physical","left","hot","existing","responsible","complete","medical","blue","extra","past","male","interested","fair","essential","beautiful","civil","primary","obvious","future","environmental","positive","senior","nuclear","annual","relevant","huge","rich","commercial","safe","regional","practical","official","separate","key","chief","regular","due","additional","active","powerful","complex","standard","impossible","light","warm","middle","fresh","sexual","front","domestic","actual","united","technical","ordinary","cheap","strange","internal","excellent","quiet","soft","potential","northern","religious","quick","very","famous","cultural","proper","broad","joint","formal","limited","conservative","lovely","usual","ltd","unable","rural","initial","substantial","christian","bright","average","leading","reasonable","immediate","suitable","equal","detailed","working","overall","female","afraid","democratic","growing","sufficient","scientific","eastern","correct","inc","irish","expensive","educational","mental","dangerous","critical","increased","familiar","unlikely","double","perfect","slow","tiny","dry","historical","thin","daily","southern","increasing","wild","alone","urban","empty","married","narrow","liberal","supposed","upper","apparent","tall","busy","bloody","prepared","russian","moral","careful","clean","attractive","japanese","vital","thick","alternative","fast","ancient","elderly","rare","external","capable","brief","wonderful","grand","typical","entire","grey","constant","vast","surprised","ideal","terrible","academic","funny","minor","pleased","severe","ill","corporate","negative","permanent","weak","brown","fundamental","odd","crucial","inner","used","criminal","contemporary","sharp","sick","near","roman","massive","unique","secondary","parliamentary","african","unknown","subsequent","angry","alive","guilty","lucky","enormous","well","communist","yellow","unusual","net","tough","dear","extensive","glad","remaining","agricultural","alright","healthy","italian","principal","tired","efficient","comfortable","chinese","relative","friendly","conventional","willing","sudden","proposed","voluntary","slight","valuable","dramatic","golden","temporary","federal","keen","flat","silent","indian","worried","pale","statutory","welsh","dependent","firm","wet","competitive","armed","radical","outside","acceptable","sensitive","living","pure","global","emotional","sad","secret","rapid","adequate","fixed","sweet","administrative","wooden","remarkable","comprehensive","surprising","solid","rough","mere","mass","brilliant","maximum","absolute","tory","electronic","visual","electric","cool","spanish","literary","continuing","supreme","chemical","genuine","exciting","written","stupid","advanced","extreme","classical","fit","favourite","socialist","widespread","confident","straight","catholic","proud","numerous","opposite","distinct","mad","helpful","given","disabled","consistent","anxious","nervous","awful","stable","constitutional","satisfied","conscious","developing","strategic","holy","smooth","dominant","remote","theoretical","outstanding","pink","pretty","clinical","minimum","honest","impressive","related","residential","extraordinary","plain","visible","accurate","distant","still","greek","complicated","musical","precise","gentle","broken","live","silly","fat","tight","monetary","round","psychological","violent","unemployed","inevitable","junior","sensible","grateful","pleasant","dirty","structural","welcome","deaf","above","continuous","blind","overseas","mean","entitled","delighted","loose","occasional","evident","desperate","fellow","universal","square","steady","classic","equivalent","intellectual","victorian","level","ultimate","creative","lost","medieval","clever","linguistic","convinced","judicial","raw","sophisticated","asleep","vulnerable","illegal","outer","revolutionary","bitter","changing","australian","native","imperial","strict","wise","informal","flexible","collective","frequent","experimental","spiritual","intense","rational","ethnic","generous","inadequate","prominent","logical","bare","historic","modest","dutch","acute","electrical","valid","weekly","gross","automatic","loud","reliable","mutual","liable","multiple","ruling","curious","arab","sole","jewish","managing","pregnant","latin","nearby","exact","underlying","identical","satisfactory","marginal","distinctive","electoral","urgent","presidential","controversial","oral","everyday","encouraging","organic","continued","expected","statistical","desirable","innocent","improved","exclusive","marked","experienced","unexpected","superb","sheer","disappointed","frightened","gastric","capitalist","romantic","naked","reluctant","magnificent","convenient","established","closed","uncertain","artificial","diplomatic","tremendous","marine","mechanical","retail","institutional","mixed","required","biological","known","functional","straightforward","superior","digital","spectacular","unhappy","confused","unfair","aggressive","spare","painful","abstract","asian","associated","legislative","monthly","intelligent","hungry","explicit","nasty","just","faint","coloured","ridiculous","amazing","comparable","successive","realistic","back","decent","unnecessary","flying","random","influential","dull","genetic","neat","marvellous","crazy","damp","giant","secure","bottom","skilled","subtle","elegant","brave","lesser","parallel","steep","intensive","casual","tropical","lonely","partial","preliminary","concrete","alleged","assistant","vertical","upset","delicate","mild","occupational","excessive","progressive","iraqi","exceptional","integrated","striking","continental","okay","harsh","combined","fierce","handsome","characteristic","chronic","compulsory","interim","objective","splendid","magic","systematic","obliged","payable","fun","horrible","primitive","fascinating","ideological","metropolitan","surrounding","estimated","peaceful","premier","operational","technological","kind","advisory","hostile","precious","gay","accessible","determined","excited","impressed","provincial","smart","endless","isolated","drunk","geographical","like","dynamic","boring","forthcoming","unfortunate","definite","super","notable","indirect","stiff","wealthy","awkward","lively","neutral","artistic","content","mature","colonial","ambitious","evil","magnetic","verbal","legitimate","sympathetic","empirical","head","shallow","vague","naval","depressed","shared","added","shocked","mid","worthwhile","qualified","missing","blank","absent","favourable","polish","israeli","developed","profound","representative","enthusiastic","dreadful","rigid","reduced","cruel","coastal","peculiar","racial","ugly","swiss","crude","extended","selected","eager","feminist","canadian","bold","relaxed","corresponding","running","planned","applicable","immense","allied","comparative","uncomfortable","conservation","productive","beneficial","bored","charming","minimal","mobile","turkish","orange","rear","passive","suspicious","overwhelming","fatal","resulting","symbolic","registered","neighbouring","calm","irrelevant","patient","compact","profitable","rival","loyal","moderate","distinguished","interior","noble","insufficient","eligible","mysterious","varying","managerial","molecular","olympic","linear","prospective","printed","parental","diverse","elaborate","furious","fiscal","burning","useless","semantic","embarrassed","inherent","philosophical","deliberate","awake","variable","promising","unpleasant","varied","sacred","selective","inclined","tender","hidden","worthy","intermediate","sound","protective","fortunate","slim","islamic","defensive","divine","stuck","driving","invisible","misleading","circular","mathematical","inappropriate","liquid","persistent","solar","doubtful","manual","architectural","intact","incredible","devoted","prior","tragic","respectable","optimistic","convincing","unacceptable","decisive","competent","spatial","respective","binding","relieved","nursing","toxic","select","redundant","integral","then","probable","amateur","fond","passing","specified","territorial","horizontal","inland","cognitive","regulatory","miserable","resident","polite","scared","marxist","gothic","civilian","instant","lengthy","adverse","korean","unconscious","anonymous","aesthetic","orthodox","static","unaware","costly","fantastic","foolish","fashionable","causal","compatible","wee","implicit","dual","ok","cheerful","subjective","forward","surviving","exotic","purple","cautious","visiting","aggregate","ethical","protestant","teenage","dying","disastrous","delicious","confidential","underground","thorough","grim","autonomous","atomic","frozen","colourful","injured","uniform","ashamed","glorious","wicked","coherent","rising","shy","novel","balanced","delightful","arbitrary","adjacent","psychiatric","worrying","weird","unchanged","rolling","evolutionary","intimate","sporting","disciplinary","formidable","lexical","noisy","gradual","accused","homeless","supporting","coming","renewed","excess","retired","rubber","chosen","outdoor","embarrassing","preferred","bizarre","appalling","agreed","imaginative","governing","accepted","vocational","palestinian","mighty","puzzled","worldwide","handicapped","organisational","sunny","eldest","eventual","spontaneous","vivid","rude","faithful","ministerial","innovative","controlled","conceptual","unwilling","civic","meaningful","disturbing","alive","brainy","breakable","busy","careful","cautious","clever","concerned","crazy","curious","dead","different","difficult","doubtful","easy","famous","fragile","helpful","helpless","important","impossible","innocent","inquisitive","modern","open","outstanding","poor","powerful","puzzled","real","rich","shy","sleepy","stupid","super","tame","uninterested","wandering","wild","wrong","adorable","alert","average","beautiful","blonde","bloody","blushing","bright","clean","clear","cloudy","colorful","crowded","cute","dark","drab","distinct","dull","elegant","fancy","filthy","glamorous","gleaming","graceful","grotesque","homely","light","misty","motionless","muddy","plain","poised","quaint","shiny","smoggy","sparkling","spotless","stormy","strange","ugly","unsightly","unusual","bad","better","beautiful","big","black","blue","bright","clumsy","crazy","dizzy","dull","fat","frail","friendly","funny","great","green","gigantic","gorgeous","grumpy","handsome","happy","horrible","itchy","jittery","jolly","kind","long","lazy","magnificent","magenta","many","mighty","mushy","nasty","new","nice","nosy","nutty","nutritious","odd","orange","ordinary","pretty","precious","prickly","purple","quaint","quiet","quick","quickest","rainy","rare","ratty","red","roasted","robust","round","sad","scary","scrawny","short","silly","stingy","strange","striped","spotty","tart","tall","tame","tan","tender","testy","tricky","tough","ugly","ugliest","vast","watery","wasteful","wonderful","yellow","yummy","zany"];
},{}],"TAQU":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=["amaranth","amber","amethyst","apricot","aqua","aquamarine","azure","beige","black","blue","blush","bronze","brown","chocolate","coffee","copper","coral","crimson","cyan","emerald","fuchsia","gold","gray","green","harlequin","indigo","ivory","jade","lavender","lime","magenta","maroon","moccasin","olive","orange","peach","pink","plum","purple","red","rose","salmon","sapphire","scarlet","silver","tan","teal","tomato","turquoise","violet","white","yellow"];
},{}],"ch1d":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=["canidae","felidae","cat","cattle","dog","donkey","goat","horse","pig","rabbit","aardvark","aardwolf","albatross","alligator","alpaca","amphibian","anaconda","angelfish","anglerfish","ant","anteater","antelope","antlion","ape","aphid","armadillo","asp","baboon","badger","bandicoot","barnacle","barracuda","basilisk","bass","bat","bear","beaver","bedbug","bee","beetle","bird","bison","blackbird","boa","boar","bobcat","bobolink","bonobo","booby","bovid","bug","butterfly","buzzard","camel","canid","capybara","cardinal","caribou","carp","cat","catshark","caterpillar","catfish","cattle","centipede","cephalopod","chameleon","cheetah","chickadee","chicken","chimpanzee","chinchilla","chipmunk","clam","clownfish","cobra","cockroach","cod","condor","constrictor","coral","cougar","cow","coyote","crab","crane","crawdad","crayfish","cricket","crocodile","crow","cuckoo","cicada","damselfly","deer","dingo","dinosaur","dog","dolphin","donkey","dormouse","dove","dragonfly","dragon","duck","eagle","earthworm","earwig","echidna","eel","egret","elephant","elk","emu","ermine","falcon","ferret","finch","firefly","fish","flamingo","flea","fly","flyingfish","fowl","fox","frog","gamefowl","galliform","gazelle","gecko","gerbil","gibbon","giraffe","goat","goldfish","goose","gopher","gorilla","grasshopper","grouse","guan","guanaco","guineafowl","gull","guppy","haddock","halibut","hamster","hare","harrier","hawk","hedgehog","heron","herring","hippopotamus","hookworm","hornet","horse","hoverfly","hummingbird","hyena","iguana","impala","jackal","jaguar","jay","jellyfish","junglefowl","kangaroo","kingfisher","kite","kiwi","koala","koi","krill","ladybug","lamprey","landfowl","lark","leech","lemming","lemur","leopard","leopon","limpet","lion","lizard","llama","lobster","locust","loon","louse","lungfish","lynx","macaw","mackerel","magpie","mammal","manatee","mandrill","marlin","marmoset","marmot","marsupial","marten","mastodon","meadowlark","meerkat","mink","minnow","mite","mockingbird","mole","mollusk","mongoose","monkey","moose","mosquito","moth","mouse","mule","muskox","narwhal","newt","nightingale","ocelot","octopus","opossum","orangutan","orca","ostrich","otter","owl","ox","panda","panther","parakeet","parrot","parrotfish","partridge","peacock","peafowl","pelican","penguin","perch","pheasant","pig","pigeon","pike","pinniped","piranha","planarian","platypus","pony","porcupine","porpoise","possum","prawn","primate","ptarmigan","puffin","puma","python","quail","quelea","quokka","rabbit","raccoon","rat","rattlesnake","raven","reindeer","reptile","rhinoceros","roadrunner","rodent","rook","rooster","roundworm","sailfish","salamander","salmon","sawfish","scallop","scorpion","seahorse","shark","sheep","shrew","shrimp","silkworm","silverfish","skink","skunk","sloth","slug","smelt","snail","snake","snipe","sole","sparrow","spider","spoonbill","squid","squirrel","starfish","stingray","stoat","stork","sturgeon","swallow","swan","swift","swordfish","swordtail","tahr","takin","tapir","tarantula","tarsier","termite","tern","thrush","tick","tiger","tiglon","toad","tortoise","toucan","trout","tuna","turkey","turtle","tyrannosaurus","urial","vicuna","viper","vole","vulture","wallaby","walrus","wasp","warbler","weasel","whale","whippet","whitefish","wildcat","wildebeest","wildfowl","wolf","wolverine","wombat","woodpecker","worm","wren","xerinae","yak","zebra","alpaca","cat","cattle","chicken","dog","donkey","ferret","gayal","goldfish","guppy","horse","koi","llama","sheep","yak"];
},{}],"m78u":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=function(){function e(e){var t=e.length,i=e.separator,r=e.dictionaries,n=e.style;this.dictionaries=r,this.separator=i,this.length=t,this.style=n}return e.prototype.generate=function(){var e=this;if(!this.dictionaries)throw new Error('Cannot find any dictionary. Please provide at least one, or leave the "dictionary" field empty in the config object');if(this.length<=0)throw new Error("Invalid length provided");if(this.length>this.dictionaries.length)throw new Error("The length cannot be bigger than the number of dictionaries.\nLength provided: "+this.length+". Number of dictionaries provided: "+this.dictionaries.length);return this.dictionaries.slice(0,this.length).reduce(function(t,i){var r=i[Math.floor(Math.random()*i.length)]||"";if("lowerCase"===e.style)r=r.toLowerCase();else if("capital"===e.style){var n=r.split(""),o=n[0],s=n.slice(1);r=o.toUpperCase()+s.join("")}else"upperCase"===e.style&&(r=r.toUpperCase());return t?""+t+e.separator+r:""+r},"")},e}();exports.UniqueNamesGenerator=e;
},{}],"oOYt":[function(require,module,exports) {
"use strict";var e=this&&this.__assign||function(){return(e=Object.assign||function(e){for(var r,t=1,i=arguments.length;t<i;t++)for(var n in r=arguments[t])Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n]);return e}).apply(this,arguments)},r=this&&this.__spreadArrays||function(){for(var e=0,r=0,t=arguments.length;r<t;r++)e+=arguments[r].length;var i=Array(e),n=0;for(r=0;r<t;r++)for(var a=arguments[r],s=0,o=a.length;s<o;s++,n++)i[n]=a[s];return i},t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});var i=t(require("./dictionaries/adjectives")),n=t(require("./dictionaries/colors")),a=t(require("./dictionaries/animals")),s=require("./unique-names-generator"),o={separator:"_",length:3,dictionaries:[i.default,n.default,a.default]};exports.uniqueNamesGenerator=function(t){void 0===t&&(t={});var i=e(e(e({},o),t),{dictionaries:r(t&&t.dictionaries||o.dictionaries)});return new s.UniqueNamesGenerator(i).generate()};
},{"./dictionaries/adjectives":"fxsm","./dictionaries/colors":"TAQU","./dictionaries/animals":"ch1d","./unique-names-generator":"m78u"}],"LC55":[function(require,module,exports) {
"use strict";var e=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});var r=e(require("./adjectives"));exports.adjectives=r.default;var t=e(require("./animals"));exports.animals=t.default;var a=e(require("./colors"));exports.colors=a.default;
},{"./adjectives":"fxsm","./animals":"ch1d","./colors":"TAQU"}],"Qz33":[function(require,module,exports) {
"use strict";function e(e){for(var r in e)exports.hasOwnProperty(r)||(exports[r]=e[r])}Object.defineProperty(exports,"__esModule",{value:!0}),e(require("./lib/index")),e(require("./lib/dictionaries/index"));
},{"./lib/index":"oOYt","./lib/dictionaries/index":"LC55"}],"EjGt":[function(require,module,exports) {
"use strict";function _slicedToArray(r,t){return _arrayWithHoles(r)||_iterableToArrayLimit(r,t)||_unsupportedIterableToArray(r,t)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(r,t){if(r){if("string"==typeof r)return _arrayLikeToArray(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);return"Object"===e&&r.constructor&&(e=r.constructor.name),"Map"===e||"Set"===e?Array.from(r):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?_arrayLikeToArray(r,t):void 0}}function _arrayLikeToArray(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,o=new Array(t);e<t;e++)o[e]=r[e];return o}function _iterableToArrayLimit(r,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r)){var e=[],o=!0,n=!1,a=void 0;try{for(var i,s=r[Symbol.iterator]();!(o=(i=s.next()).done)&&(e.push(i.value),!t||e.length!==t);o=!0);}catch(l){n=!0,a=l}finally{try{o||null==s.return||s.return()}finally{if(n)throw a}}return e}}function _arrayWithHoles(r){if(Array.isArray(r))return r}function capitalize(r){return r.substr(0,1).toUpperCase()+r.substr(1)}function randomDigitStringId(r){return(Array(r).join("0")+Math.random()).slice(-r)}function _last(r){return r[r.length-1]}function _round(r){return+r.toFixed(2)}function _flatten(r){for(var t=[],e=0;e<r.length;e++){var o=r[e];o instanceof Array?t=t.concat(o):t.push(o)}return t}function _find(r,t,e){if(!(null==r?void 0:r.length)||!t)return[];for(var o="function"==typeof t?t:function(r){for(var e in t)if(t[e]!==r[e])return!1;return!0},n=0;n<r.length;n++){var a=r[n];if(o(a))return e?n:a}}function _findIndex(r,t){return _find(r,t,!0)}function _uniqBy(r,t){var e={},o="string"==typeof t?function(r){return r[t]}:t;return r.filter(function(r){var t=o(r);return!e[t]&&(e[t]=!0,!0)})}function template(r,t){return(r||"").toString().replace(/{{\s*([a-z0-9]+)\s*}}/gi,function(r,e){return t[e]||""})}function detectBrowser(){var r={Opera:"opera",Chrome:"chrome",Safari:"safari",Firefox:"firefox",MSIE:"ie"};for(var t in r)if(navigator.userAgent.indexOf(t)>-1)return r[t];return null}function detectPlatform(){return{isWindows:navigator.platform.indexOf("Win")>-1,isMac:navigator.platform.indexOf("Mac")>-1}}function getFromLocalStorage(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",e=t;try{null===(e=JSON.parse(localStorage.getItem(r)))&&(e=t)}catch(o){}return e}function setToLocalStorage(r,t){localStorage.setItem(r,JSON.stringify(t))}function isWebImage(r){return["image/jpg","image/jpeg","image/png","image/gif"].includes(r.toLowerCase())}function isWebVideo(r){return"video/mp4"===r.toLowerCase().trim()}function getUserFullName(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:" ";return[((null==r?void 0:r.firstName)||"").trim(),((null==r?void 0:r.lastName)||"").trim()].filter(function(r){return r}).join(t)}function parseFullName(r){var t=_slicedToArray((r||"").trim().replace(/\s+/,"◆◆◆").split("◆◆◆"),2);return{firstName:t[0]||"",lastName:t[1]||""}}function trimEachRow(r){return r.split(/\n/).map(function(r){return r.trim()}).join("\n")}function extractSerializedData(r,t){var e={};for(var o in t)e[o]=(null==r?void 0:r[o])||t[o];return e}function normalizeErrorStack(r,t){return(r||"").trim().replace(/^Error\n\s*/,"").split(/\n/).map(function(r){return r.trim()}).filter(function(r){return r}).slice(0,t||void 0).join("\n")}function hashCode(r){for(var t=0,e=0;e<r.length;e++){t=(t<<5)-t+r.charCodeAt(e),t&=t}return t}Object.defineProperty(exports,"__esModule",{value:!0}),exports.hashCode=exports.normalizeErrorStack=exports.extractSerializedData=exports.trimEachRow=exports.parseFullName=exports.getUserFullName=exports.isWebVideo=exports.isWebImage=exports.setToLocalStorage=exports.getFromLocalStorage=exports.detectPlatform=exports.detectBrowser=exports.template=exports._uniqBy=exports._findIndex=exports._find=exports._flatten=exports._round=exports._last=exports.randomDigitStringId=exports.capitalize=void 0,exports.capitalize=capitalize,exports.randomDigitStringId=randomDigitStringId,exports._last=_last,exports._round=_round,exports._flatten=_flatten,exports._find=_find,exports._findIndex=_findIndex,exports._uniqBy=_uniqBy,exports.template=template,exports.detectBrowser=detectBrowser,exports.detectPlatform=detectPlatform,exports.getFromLocalStorage=getFromLocalStorage,exports.setToLocalStorage=setToLocalStorage,exports.isWebImage=isWebImage,exports.isWebVideo=isWebVideo,exports.getUserFullName=getUserFullName,exports.parseFullName=parseFullName,exports.trimEachRow=trimEachRow,exports.extractSerializedData=extractSerializedData,exports.normalizeErrorStack=normalizeErrorStack,exports.hashCode=hashCode;
},{}],"fvSB":[function(require,module,exports) {
"use strict";function _classCallCheck(r,e){if(!(r instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(r,e){for(var t=0;t<e.length;t++){var n=e[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(r,n.key,n)}}function _createClass(r,e,t){return e&&_defineProperties(r.prototype,e),t&&_defineProperties(r,t),r}Object.defineProperty(exports,"__esModule",{value:!0}),exports.extractErrorMessage=exports.parseGraphQLMethodFromQuery=exports.insertGraphQlFragments=exports.gql=exports.simplifyGraphQLJSON=exports.GraphQLClient=void 0;var r=function(){function GraphQLClient(){var r=this;_classCallCheck(this,GraphQLClient),this.headers={Accept:"application/json"},this.initialize=function(e){var t=e.url,n=e.token;r.url=t,r.token=n,r.token&&(r.headers.Authorization="Bearer ".concat(r.token))}}return _createClass(GraphQLClient,[{key:"query",value:function query(r,e,t){var n,a;return e=e||{},t?(a=this.makeFormData(r,e,t),n=this.headers):(a=JSON.stringify({query:r,variables:e}),n=Object.assign(Object.assign({},this.headers),{"Content-Type":"application/json"})),fetch(this.url,{method:"POST",headers:n,body:a}).then(function(r){return r.json()}).then(function(r){if(r.errors||!r.data)throw r;return r.data})}},{key:"makeFormData",value:function makeFormData(r,e,t){var n=new FormData;for(var a in n.append("query",r),n.append("variables",JSON.stringify(e)),t)n.append(a,t[a]);return n}}]),GraphQLClient}();function simplifyGraphQLJSON(r){var e;return(null===(e=null==r?void 0:r.edges)||void 0===e?void 0:e.length)?r.edges.map(function(r){return Object.assign(Object.assign({},r.node),{cursor:r.cursor})}):[]}function gql(r){for(var e="",t=0;t<r.length;t++)e+=r[t]+((t+1<1||arguments.length<=t+1?void 0:arguments[t+1])||"");return e}function insertGraphQlFragments(r){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t="";for(var n in e)t+=e[n];return r+t}function parseGraphQLMethodFromQuery(r){try{return r.trim().replace(/(\([^\)]*\))/gi,"").replace(/([a-z]+)?\s*/i,"").replace(/^\{\s*|\s*\}$/gi,"").split(/\s*\{/)[0]}catch(e){return""}}function extractErrorMessage(r){if(r){if(r.errors&&r.errors.length)return r.errors.map(function(r){var e="\n  - "+r.message;return r.path&&r.path.length&&(e+=" in "+r.path.join(", ")),e}).join("");if(r instanceof Error)return r.toString()}return(null==r?void 0:r.message)||"Unknown error"}exports.GraphQLClient=r,exports.simplifyGraphQLJSON=simplifyGraphQLJSON,exports.gql=gql,exports.insertGraphQlFragments=insertGraphQlFragments,exports.parseGraphQLMethodFromQuery=parseGraphQLMethodFromQuery,exports.extractErrorMessage=extractErrorMessage;
},{}],"sQAQ":[function(require,module,exports) {
"use strict";function _templateObject(){var e=_taggedTemplateLiteral(["\n  fragment fragmentFile on File {\n    id\n    url\n    name\n    bytesSize\n    height\n    width\n    contentType\n    duration\n    thumbnails {\n      id\n      url\n      name\n      bytesSize\n      height\n      width\n      contentType\n      thumbType\n    }\n  }\n"]);return _templateObject=function _templateObject(){return e},e}function _taggedTemplateLiteral(e,i){return i||(i=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(i)}}))}Object.defineProperty(exports,"__esModule",{value:!0}),exports.serializeFile=exports.serializeFileUrl=exports.fragmentFile=void 0;var e=require("../GraphQLClient"),i=require("../../utilsCommon");function serializeFileUrl(e,i){var t=i.config.apiUrl.replace(/\/$/,"")+"/";return e?/^uploads/i.test(e)?t+e:e:""}function serializeFile(e,t){var r,l=e||{},n=l.url,a=l.thumbnails,s=serializeFileUrl(n,t),u=serializeFileUrl(null===(r=null==a?void 0:a[0])||void 0===r?void 0:r.url,t),o={url:serializeFileUrl(u||s,t)};return Object.assign(Object.assign({},i.extractSerializedData(e,{id:null,name:"",bytesSize:0,height:0,width:0,duration:0,contentType:"",isScreenshot:!1})),{thumbnails:[o],url:serializeFileUrl(s||u,t)})}exports.fragmentFile=e.gql(_templateObject()),exports.serializeFileUrl=serializeFileUrl,exports.serializeFile=serializeFile;
},{"../GraphQLClient":"fvSB","../../utilsCommon":"EjGt"}],"lqyB":[function(require,module,exports) {
"use strict";function _templateObject(){var e=_taggedTemplateLiteral(["\n  fragment fragmentUser on Account {\n    __typename\n    id\n    firstName\n    lastName\n    avatar {\n      thumbnails { url }\n    }\n\n    ... on Client {\n      foreignId\n    }\n  }\n"]);return _templateObject=function _templateObject(){return e},e}function _taggedTemplateLiteral(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}Object.defineProperty(exports,"__esModule",{value:!0}),exports.serializeUser=exports.fragmentUser=void 0;var e=require("../GraphQLClient"),t=require("../../utilsCommon"),r=require("./serializeFile");function serializeUser(e,n){var i=(null==e?void 0:e.foreignId)||null,a="Employee"===(null==e?void 0:e.__typename),l="Bot"===(null==e?void 0:e.__typename),s="Client"===(null==e?void 0:e.__typename),o=i===n.client.id;return Object.assign(Object.assign({},t.extractSerializedData(e,{id:null,firstName:"",lastName:""})),{avatar:r.serializeFile(null==e?void 0:e.avatar,n),clientId:i,isBot:l,isClient:s,isOperator:a,isCurrentClient:o})}exports.fragmentUser=e.gql(_templateObject()),exports.serializeUser=serializeUser;
},{"../GraphQLClient":"fvSB","../../utilsCommon":"EjGt","./serializeFile":"sQAQ"}],"vCxL":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.__extends=e,exports.__rest=n,exports.__decorate=o,exports.__param=a,exports.__metadata=u,exports.__awaiter=i,exports.__generator=c,exports.__exportStar=f,exports.__values=l,exports.__read=s,exports.__spread=p,exports.__spreadArrays=y,exports.__await=_,exports.__asyncGenerator=h,exports.__asyncDelegator=v,exports.__asyncValues=b,exports.__makeTemplateObject=d,exports.__importStar=x,exports.__importDefault=w,exports.__assign=void 0;var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(e,r)};function e(e,r){function n(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}var r=function(){return exports.__assign=r=Object.assign||function(t){for(var e,r=1,n=arguments.length;r<n;r++)for(var o in e=arguments[r])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t},r.apply(this,arguments)};function n(t,e){var r={};for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&e.indexOf(n)<0&&(r[n]=t[n]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(n=Object.getOwnPropertySymbols(t);o<n.length;o++)e.indexOf(n[o])<0&&Object.prototype.propertyIsEnumerable.call(t,n[o])&&(r[n[o]]=t[n[o]])}return r}function o(t,e,r,n){var o,a=arguments.length,u=a<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)u=Reflect.decorate(t,e,r,n);else for(var i=t.length-1;i>=0;i--)(o=t[i])&&(u=(a<3?o(u):a>3?o(e,r,u):o(e,r))||u);return a>3&&u&&Object.defineProperty(e,r,u),u}function a(t,e){return function(r,n){e(r,n,t)}}function u(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)}function i(t,e,r,n){return new(r||(r=Promise))(function(o,a){function u(t){try{c(n.next(t))}catch(e){a(e)}}function i(t){try{c(n.throw(t))}catch(e){a(e)}}function c(t){t.done?o(t.value):new r(function(e){e(t.value)}).then(u,i)}c((n=n.apply(t,e||[])).next())})}function c(t,e){var r,n,o,a,u={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function i(a){return function(i){return function(a){if(r)throw new TypeError("Generator is already executing.");for(;u;)try{if(r=1,n&&(o=2&a[0]?n.return:a[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,a[1])).done)return o;switch(n=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return u.label++,{value:a[1],done:!1};case 5:u.label++,n=a[1],a=[0];continue;case 7:a=u.ops.pop(),u.trys.pop();continue;default:if(!(o=(o=u.trys).length>0&&o[o.length-1])&&(6===a[0]||2===a[0])){u=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){u.label=a[1];break}if(6===a[0]&&u.label<o[1]){u.label=o[1],o=a;break}if(o&&u.label<o[2]){u.label=o[2],u.ops.push(a);break}o[2]&&u.ops.pop(),u.trys.pop();continue}a=e.call(t,u)}catch(i){a=[6,i],n=0}finally{r=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,i])}}}function f(t,e){for(var r in t)e.hasOwnProperty(r)||(e[r]=t[r])}function l(t){var e="function"==typeof Symbol&&t[Symbol.iterator],r=0;return e?e.call(t):{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}}}function s(t,e){var r="function"==typeof Symbol&&t[Symbol.iterator];if(!r)return t;var n,o,a=r.call(t),u=[];try{for(;(void 0===e||e-- >0)&&!(n=a.next()).done;)u.push(n.value)}catch(i){o={error:i}}finally{try{n&&!n.done&&(r=a.return)&&r.call(a)}finally{if(o)throw o.error}}return u}function p(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(s(arguments[e]));return t}function y(){for(var t=0,e=0,r=arguments.length;e<r;e++)t+=arguments[e].length;var n=Array(t),o=0;for(e=0;e<r;e++)for(var a=arguments[e],u=0,i=a.length;u<i;u++,o++)n[o]=a[u];return n}function _(t){return this instanceof _?(this.v=t,this):new _(t)}function h(t,e,r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var n,o=r.apply(t,e||[]),a=[];return n={},u("next"),u("throw"),u("return"),n[Symbol.asyncIterator]=function(){return this},n;function u(t){o[t]&&(n[t]=function(e){return new Promise(function(r,n){a.push([t,e,r,n])>1||i(t,e)})})}function i(t,e){try{(r=o[t](e)).value instanceof _?Promise.resolve(r.value.v).then(c,f):l(a[0][2],r)}catch(n){l(a[0][3],n)}var r}function c(t){i("next",t)}function f(t){i("throw",t)}function l(t,e){t(e),a.shift(),a.length&&i(a[0][0],a[0][1])}}function v(t){var e,r;return e={},n("next"),n("throw",function(t){throw t}),n("return"),e[Symbol.iterator]=function(){return this},e;function n(n,o){e[n]=t[n]?function(e){return(r=!r)?{value:_(t[n](e)),done:"return"===n}:o?o(e):e}:o}}function b(t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e,r=t[Symbol.asyncIterator];return r?r.call(t):(t="function"==typeof l?l(t):t[Symbol.iterator](),e={},n("next"),n("throw"),n("return"),e[Symbol.asyncIterator]=function(){return this},e);function n(r){e[r]=t[r]&&function(e){return new Promise(function(n,o){(function(t,e,r,n){Promise.resolve(n).then(function(e){t({value:e,done:r})},e)})(n,o,(e=t[r](e)).done,e.value)})}}}function d(t,e){return Object.defineProperty?Object.defineProperty(t,"raw",{value:e}):t.raw=e,t}function x(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var r in t)Object.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e.default=t,e}function w(t){return t&&t.__esModule?t:{default:t}}exports.__assign=r;
},{}],"Pro7":[function(require,module,exports) {
"use strict";var e;Object.defineProperty(exports,"__esModule",{value:!0}),exports.LogLevel=void 0,exports.LogLevel=e,function(e){e[e.None=0]="None",e[e.Error=1]="Error",e[e.Debug=2]="Debug",e[e.Verbose=3]="Verbose"}(e||(exports.LogLevel=e={}));
},{}],"glSR":[function(require,module,exports) {
"use strict";var r;Object.defineProperty(exports,"__esModule",{value:!0}),exports.Severity=void 0,exports.Severity=r,function(r){r.Fatal="fatal",r.Error="error",r.Warning="warning",r.Log="log",r.Info="info",r.Debug="debug",r.Critical="critical"}(r||(exports.Severity=r={})),function(r){r.fromString=function(e){switch(e){case"debug":return r.Debug;case"info":return r.Info;case"warn":case"warning":return r.Warning;case"error":return r.Error;case"fatal":return r.Fatal;case"critical":return r.Critical;case"log":default:return r.Log}}}(r||(exports.Severity=r={}));
},{}],"PQXu":[function(require,module,exports) {
"use strict";var t;Object.defineProperty(exports,"__esModule",{value:!0}),exports.Status=void 0,exports.Status=t,function(t){t.Unknown="unknown",t.Skipped="skipped",t.Success="success",t.RateLimit="rate_limit",t.Invalid="invalid",t.Failed="failed"}(t||(exports.Status=t={})),function(t){t.fromHttpCode=function(e){return e>=200&&e<300?t.Success:429===e?t.RateLimit:e>=400&&e<500?t.Invalid:e>=500?t.Failed:t.Unknown}}(t||(exports.Status=t={}));
},{}],"vYhp":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"LogLevel",{enumerable:!0,get:function(){return e.LogLevel}}),Object.defineProperty(exports,"Severity",{enumerable:!0,get:function(){return r.Severity}}),Object.defineProperty(exports,"Status",{enumerable:!0,get:function(){return t.Status}});var e=require("./loglevel"),r=require("./severity"),t=require("./status");
},{"./loglevel":"Pro7","./severity":"glSR","./status":"PQXu"}],"PHfu":[function(require,module,exports) {
"use strict";function e(e){e.then(null,function(e){console.error(e)})}Object.defineProperty(exports,"__esModule",{value:!0}),exports.forget=e;
},{}],"RzbR":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.setPrototypeOf=void 0;var t=Object.setPrototypeOf||({__proto__:[]}instanceof Array?e:r);function e(t,e){return t.__proto__=e,t}function r(t,e){for(var r in e)t.hasOwnProperty(r)||(t[r]=e[r]);return t}exports.setPrototypeOf=t;
},{}],"IhUY":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SentryError=void 0;var r=require("tslib"),e=require("./polyfill"),t=function(t){function o(r){var o=this.constructor,s=t.call(this,r)||this;return s.message=r,s.name=o.prototype.constructor.name,(0,e.setPrototypeOf)(s,o.prototype),s}return(0,r.__extends)(o,t),o}(Error);exports.SentryError=t;
},{"tslib":"vCxL","./polyfill":"RzbR"}],"cixp":[function(require,module,exports) {
"use strict";function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(e)}function e(t){switch(Object.prototype.toString.call(t)){case"[object Error]":case"[object Exception]":case"[object DOMException]":return!0;default:return y(t,Error)}}function o(t){return"[object ErrorEvent]"===Object.prototype.toString.call(t)}function n(t){return"[object DOMError]"===Object.prototype.toString.call(t)}function r(t){return"[object DOMException]"===Object.prototype.toString.call(t)}function c(t){return"[object String]"===Object.prototype.toString.call(t)}function i(e){return null===e||"object"!==t(e)&&"function"!=typeof e}function p(t){return"[object Object]"===Object.prototype.toString.call(t)}function u(t){return"undefined"!=typeof Event&&y(t,Event)}function s(t){return"undefined"!=typeof Element&&y(t,Element)}function f(t){return"[object RegExp]"===Object.prototype.toString.call(t)}function l(t){return Boolean(t&&t.then&&"function"==typeof t.then)}function b(t){return p(t)&&"nativeEvent"in t&&"preventDefault"in t&&"stopPropagation"in t}function y(t,e){try{return t instanceof e}catch(o){return!1}}Object.defineProperty(exports,"__esModule",{value:!0}),exports.isError=e,exports.isErrorEvent=o,exports.isDOMError=n,exports.isDOMException=r,exports.isString=c,exports.isPrimitive=i,exports.isPlainObject=p,exports.isEvent=u,exports.isElement=s,exports.isRegExp=f,exports.isThenable=l,exports.isSyntheticEvent=b,exports.isInstanceOf=y;
},{}],"EomM":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.truncate=t,exports.snipLine=e,exports.safeJoin=n,exports.isMatchingPattern=i;var r=require("./is");function t(r,t){return void 0===t&&(t=0),"string"!=typeof r||0===t?r:r.length<=t?r:r.substr(0,t)+"..."}function e(r,t){var e=r,n=e.length;if(n<=150)return e;t>n&&(t=n);var i=Math.max(t-60,0);i<5&&(i=0);var s=Math.min(i+140,n);return s>n-5&&(s=n),s===n&&(i=Math.max(s-140,0)),e=e.slice(i,s),i>0&&(e="'{snip} "+e),s<n&&(e+=" {snip}"),e}function n(r,t){if(!Array.isArray(r))return"";for(var e=[],n=0;n<r.length;n++){var i=r[n];try{e.push(String(i))}catch(s){e.push("[value cannot be serialized]")}}return e.join(t)}function i(t,e){return!!(0,r.isString)(t)&&((0,r.isRegExp)(e)?e.test(t):"string"==typeof e&&-1!==t.indexOf(e))}
},{"./is":"cixp"}],"pBGv":[function(require,module,exports) {

var t,e,n=module.exports={};function r(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function i(e){if(t===setTimeout)return setTimeout(e,0);if((t===r||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(n){try{return t.call(null,e,0)}catch(n){return t.call(this,e,0)}}}function u(t){if(e===clearTimeout)return clearTimeout(t);if((e===o||!e)&&clearTimeout)return e=clearTimeout,clearTimeout(t);try{return e(t)}catch(n){try{return e.call(null,t)}catch(n){return e.call(this,t)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:r}catch(n){t=r}try{e="function"==typeof clearTimeout?clearTimeout:o}catch(n){e=o}}();var c,s=[],l=!1,a=-1;function f(){l&&c&&(l=!1,c.length?s=c.concat(s):a=-1,s.length&&h())}function h(){if(!l){var t=i(f);l=!0;for(var e=s.length;e;){for(c=s,s=[];++a<e;)c&&c[a].run();a=-1,e=s.length}c=null,l=!1,u(t)}}function m(t,e){this.fun=t,this.array=e}function p(){}n.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];s.push(new m(t,e)),1!==s.length||l||i(h)},m.prototype.run=function(){this.fun.apply(null,this.array)},n.title="browser",n.env={},n.argv=[],n.version="",n.versions={},n.on=p,n.addListener=p,n.once=p,n.off=p,n.removeListener=p,n.removeAllListeners=p,n.emit=p,n.prependListener=p,n.prependOnceListener=p,n.listeners=function(t){return[]},n.binding=function(t){throw new Error("process.binding is not supported")},n.cwd=function(){return"/"},n.chdir=function(t){throw new Error("process.chdir is not supported")},n.umask=function(){return 0};
},{}],"CNBN":[function(require,module,exports) {
var process = require("process");
var global = arguments[3];
var e=require("process"),t=arguments[3];Object.defineProperty(exports,"__esModule",{value:!0}),exports.dynamicRequire=o,exports.isNodeEnv=i,exports.getGlobalObject=u,exports.uuid4=s,exports.parseUrl=c,exports.getEventDescription=p,exports.consoleSandbox=x,exports.addExceptionTypeValue=l,exports.addExceptionMechanism=v,exports.getLocationHref=f,exports.htmlTreeAsString=m,exports.timestampWithMs=N,exports.parseSemver=b,exports.parseRetryAfterHeader=j,exports.getFunctionName=O,exports.addContextToFrame=E,exports.crossPlatformPerformance=void 0;var n=require("./is"),r=require("./string");function o(e,t){return e.require(t)}function i(){return"[object process]"===Object.prototype.toString.call(void 0!==e?e:0)}var a={};function u(){return i()?t:"undefined"!=typeof window?window:"undefined"!=typeof self?self:a}function s(){var e=u(),t=e.crypto||e.msCrypto;if(void 0!==t&&t.getRandomValues){var n=new Uint16Array(8);t.getRandomValues(n),n[3]=4095&n[3]|16384,n[4]=16383&n[4]|32768;var r=function(e){for(var t=e.toString(16);t.length<4;)t="0"+t;return t};return r(n[0])+r(n[1])+r(n[2])+r(n[3])+r(n[4])+r(n[5])+r(n[6])+r(n[7])}return"xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx".replace(/[xy]/g,function(e){var t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)})}function c(e){if(!e)return{};var t=e.match(/^(([^:/?#]+):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/);if(!t)return{};var n=t[6]||"",r=t[8]||"";return{host:t[4],path:t[5],protocol:t[2],relative:t[5]+n+r}}function p(e){if(e.message)return e.message;if(e.exception&&e.exception.values&&e.exception.values[0]){var t=e.exception.values[0];return t.type&&t.value?t.type+": "+t.value:t.type||t.value||e.event_id||"<unknown>"}return e.event_id||"<unknown>"}function x(e){var t=u();if(!("console"in t))return e();var n=t.console,r={};["debug","info","warn","error","log","assert"].forEach(function(e){e in t.console&&n[e].__sentry_original__&&(r[e]=n[e],n[e]=n[e].__sentry_original__)});var o=e();return Object.keys(r).forEach(function(e){n[e]=r[e]}),o}function l(e,t,n){e.exception=e.exception||{},e.exception.values=e.exception.values||[],e.exception.values[0]=e.exception.values[0]||{},e.exception.values[0].value=e.exception.values[0].value||t||"",e.exception.values[0].type=e.exception.values[0].type||n||"Error"}function v(e,t){void 0===t&&(t={});try{e.exception.values[0].mechanism=e.exception.values[0].mechanism||{},Object.keys(t).forEach(function(n){e.exception.values[0].mechanism[n]=t[n]})}catch(n){}}function f(){try{return document.location.href}catch(e){return""}}function m(e){try{for(var t=e,n=[],r=0,o=0,i=" > ".length,a=void 0;t&&r++<5&&!("html"===(a=d(t))||r>1&&o+n.length*i+a.length>=80);)n.push(a),o+=a.length,t=t.parentNode;return n.reverse().join(" > ")}catch(u){return"<unknown>"}}function d(e){var t,r,o,i,a,u=e,s=[];if(!u||!u.tagName)return"";if(s.push(u.tagName.toLowerCase()),u.id&&s.push("#"+u.id),(t=u.className)&&(0,n.isString)(t))for(r=t.split(/\s+/),a=0;a<r.length;a++)s.push("."+r[a]);var c=["type","name","title","alt"];for(a=0;a<c.length;a++)o=c[a],(i=u.getAttribute(o))&&s.push("["+o+'="'+i+'"]');return s.join("")}var h=Date.now(),g=0,y={now:function(){var e=Date.now()-h;return e<g&&(e=g),g=e,e},timeOrigin:h},_=function(){if(i())try{return o(module,"perf_hooks").performance}catch(t){return y}var e=u().performance;return e&&e.now?(void 0===e.timeOrigin&&(e.timeOrigin=e.timing&&e.timing.navigationStart||h),e):y}();function N(){return(_.timeOrigin+_.now())/1e3}exports.crossPlatformPerformance=_;var w=/^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/;function b(e){var t=e.match(w)||[],n=parseInt(t[1],10),r=parseInt(t[2],10),o=parseInt(t[3],10);return{buildmetadata:t[5],major:isNaN(n)?void 0:n,minor:isNaN(r)?void 0:r,patch:isNaN(o)?void 0:o,prerelease:t[4]}}var A=6e4;function j(e,t){if(!t)return A;var n=parseInt(""+t,10);if(!isNaN(n))return 1e3*n;var r=Date.parse(""+t);return isNaN(r)?A:r-e}var M="<anonymous>";function O(e){try{return e&&"function"==typeof e&&e.name||M}catch(t){return M}}function E(e,t,n){void 0===n&&(n=5);var o=t.lineno||0,i=e.length,a=Math.max(Math.min(i,o-1),0);t.pre_context=e.slice(Math.max(0,a-n),a).map(function(e){return(0,r.snipLine)(e,0)}),t.context_line=(0,r.snipLine)(e[Math.min(i-1,a)],t.colno||0),t.post_context=e.slice(Math.min(a+1,i),a+1+n).map(function(e){return(0,r.snipLine)(e,0)})}
},{"./is":"cixp","./string":"EomM","process":"pBGv"}],"ZYOL":[function(require,module,exports) {

"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.logger=void 0;var o=require("./misc"),e=(0,o.getGlobalObject)(),n="Sentry Logger ",r=function(){function r(){this._enabled=!1}return r.prototype.disable=function(){this._enabled=!1},r.prototype.enable=function(){this._enabled=!0},r.prototype.log=function(){for(var r=[],t=0;t<arguments.length;t++)r[t]=arguments[t];this._enabled&&(0,o.consoleSandbox)(function(){e.console.log(n+"[Log]: "+r.join(" "))})},r.prototype.warn=function(){for(var r=[],t=0;t<arguments.length;t++)r[t]=arguments[t];this._enabled&&(0,o.consoleSandbox)(function(){e.console.warn(n+"[Warn]: "+r.join(" "))})},r.prototype.error=function(){for(var r=[],t=0;t<arguments.length;t++)r[t]=arguments[t];this._enabled&&(0,o.consoleSandbox)(function(){e.console.error(n+"[Error]: "+r.join(" "))})},r}();e.__SENTRY__=e.__SENTRY__||{};var t=e.__SENTRY__.logger||(e.__SENTRY__.logger=new r);exports.logger=t;
},{"./misc":"CNBN"}],"dPzZ":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Memo=void 0;var e=function(){function e(){this._hasWeakSet="function"==typeof WeakSet,this._inner=this._hasWeakSet?new WeakSet:[]}return e.prototype.memoize=function(e){if(this._hasWeakSet)return!!this._inner.has(e)||(this._inner.add(e),!1);for(var t=0;t<this._inner.length;t++){if(this._inner[t]===e)return!0}return this._inner.push(e),!1},e.prototype.unmemoize=function(e){if(this._hasWeakSet)this._inner.delete(e);else for(var t=0;t<this._inner.length;t++)if(this._inner[t]===e){this._inner.splice(t,1);break}},e}();exports.Memo=e;
},{}],"f2BT":[function(require,module,exports) {
var global = arguments[3];
var t=arguments[3];Object.defineProperty(exports,"__esModule",{value:!0}),exports.fill=u,exports.urlEncode=c,exports.normalizeToSize=y,exports.walk=v,exports.normalize=d,exports.extractExceptionKeysForMessage=g,exports.dropUndefinedKeys=b;var e=require("tslib"),r=require("./is"),n=require("./memo"),o=require("./misc"),i=require("./string");function a(t){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function u(t,e,r){if(e in t){var n=t[e],o=r(n);if("function"==typeof o)try{o.prototype=o.prototype||{},Object.defineProperties(o,{__sentry_original__:{enumerable:!1,value:n}})}catch(i){}t[e]=o}}function c(t){return Object.keys(t).map(function(e){return encodeURIComponent(e)+"="+encodeURIComponent(t[e])}).join("&")}function f(t){if((0,r.isError)(t)){var e=t,n={message:e.message,name:e.name,stack:e.stack};for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(n[i]=e[i]);return n}if((0,r.isEvent)(t)){var a=t,u={};u.type=a.type;try{u.target=(0,r.isElement)(a.target)?(0,o.htmlTreeAsString)(a.target):Object.prototype.toString.call(a.target)}catch(c){u.target="<unknown>"}try{u.currentTarget=(0,r.isElement)(a.currentTarget)?(0,o.htmlTreeAsString)(a.currentTarget):Object.prototype.toString.call(a.currentTarget)}catch(c){u.currentTarget="<unknown>"}for(var i in"undefined"!=typeof CustomEvent&&(0,r.isInstanceOf)(t,CustomEvent)&&(u.detail=a.detail),a)Object.prototype.hasOwnProperty.call(a,i)&&(u[i]=a);return u}return t}function s(t){return~-encodeURI(t).split(/%..|./).length}function l(t){return s(JSON.stringify(t))}function y(t,e,r){void 0===e&&(e=3),void 0===r&&(r=102400);var n=d(t,e);return l(n)>r?y(t,e-1,r):n}function p(t){var e=Object.prototype.toString.call(t);if("string"==typeof t)return t;if("[object Object]"===e)return"[Object]";if("[object Array]"===e)return"[Array]";var n=m(t);return(0,r.isPrimitive)(n)?n:e}function m(e,n){return"domain"===n&&e&&"object"===a(e)&&e._events?"[Domain]":"domainEmitter"===n?"[DomainEmitter]":void 0!==t&&e===t?"[Global]":"undefined"!=typeof window&&e===window?"[Window]":"undefined"!=typeof document&&e===document?"[Document]":(0,r.isSyntheticEvent)(e)?"[SyntheticEvent]":"number"==typeof e&&e!=e?"[NaN]":void 0===e?"[undefined]":"function"==typeof e?"[Function: "+(0,o.getFunctionName)(e)+"]":e}function v(t,e,o,i){if(void 0===o&&(o=1/0),void 0===i&&(i=new n.Memo),0===o)return p(e);if(null!=e&&"function"==typeof e.toJSON)return e.toJSON();var a=m(e,t);if((0,r.isPrimitive)(a))return a;var u=f(e),c=Array.isArray(e)?[]:{};if(i.memoize(e))return"[Circular ~]";for(var s in u)Object.prototype.hasOwnProperty.call(u,s)&&(c[s]=v(s,u[s],o-1,i));return i.unmemoize(e),c}function d(t,e){try{return JSON.parse(JSON.stringify(t,function(t,r){return v(t,r,e)}))}catch(r){return"**non-serializable**"}}function g(t,e){void 0===e&&(e=40);var r=Object.keys(f(t));if(r.sort(),!r.length)return"[object has no keys]";if(r[0].length>=e)return(0,i.truncate)(r[0],e);for(var n=r.length;n>0;n--){var o=r.slice(0,n).join(", ");if(!(o.length>e))return n===r.length?o:(0,i.truncate)(o,e)}return""}function b(t){var n,o;if((0,r.isPlainObject)(t)){var i=t,a={};try{for(var u=(0,e.__values)(Object.keys(i)),c=u.next();!c.done;c=u.next()){var f=c.value;void 0!==i[f]&&(a[f]=b(i[f]))}}catch(s){n={error:s}}finally{try{c&&!c.done&&(o=u.return)&&o.call(u)}finally{if(n)throw n.error}}return a}return Array.isArray(t)?t.map(b):t}
},{"tslib":"vCxL","./is":"cixp","./memo":"dPzZ","./misc":"CNBN","./string":"EomM"}],"bF34":[function(require,module,exports) {
"use strict";function r(r,t){for(var e=0,n=r.length-1;n>=0;n--){var o=r[n];"."===o?r.splice(n,1):".."===o?(r.splice(n,1),e++):e&&(r.splice(n,1),e--)}if(t)for(;e--;e)r.unshift("..");return r}Object.defineProperty(exports,"__esModule",{value:!0}),exports.resolve=n,exports.relative=s,exports.normalizePath=i,exports.isAbsolute=u,exports.join=l,exports.dirname=a,exports.basename=f;var t=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^/]+?|)(\.[^./]*|))(?:[/]*)$/;function e(r){var e=t.exec(r);return e?e.slice(1):[]}function n(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];for(var n="",o=!1,s=t.length-1;s>=-1&&!o;s--){var i=s>=0?t[s]:"/";i&&(n=i+"/"+n,o="/"===i.charAt(0))}return(o?"/":"")+(n=r(n.split("/").filter(function(r){return!!r}),!o).join("/"))||"."}function o(r){for(var t=0;t<r.length&&""===r[t];t++);for(var e=r.length-1;e>=0&&""===r[e];e--);return t>e?[]:r.slice(t,e-t+1)}function s(r,t){r=n(r).substr(1),t=n(t).substr(1);for(var e=o(r.split("/")),s=o(t.split("/")),i=Math.min(e.length,s.length),u=i,l=0;l<i;l++)if(e[l]!==s[l]){u=l;break}var a=[];for(l=u;l<e.length;l++)a.push("..");return(a=a.concat(s.slice(u))).join("/")}function i(t){var e=u(t),n="/"===t.substr(-1),o=r(t.split("/").filter(function(r){return!!r}),!e).join("/");return o||e||(o="."),o&&n&&(o+="/"),(e?"/":"")+o}function u(r){return"/"===r.charAt(0)}function l(){for(var r=[],t=0;t<arguments.length;t++)r[t]=arguments[t];return i(r.join("/"))}function a(r){var t=e(r),n=t[0],o=t[1];return n||o?(o&&(o=o.substr(0,o.length-1)),n+o):"."}function f(r,t){var n=e(r)[2];return t&&n.substr(-1*t.length)===t&&(n=n.substr(0,n.length-t.length)),n}
},{}],"EwT2":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SyncPromise=void 0;var e,t=require("./is");!function(e){e.PENDING="PENDING",e.RESOLVED="RESOLVED",e.REJECTED="REJECTED"}(e||(e={}));var n=function(){function n(n){var r=this;this._state=e.PENDING,this._handlers=[],this._resolve=function(t){r._setResult(e.RESOLVED,t)},this._reject=function(t){r._setResult(e.REJECTED,t)},this._setResult=function(n,i){r._state===e.PENDING&&((0,t.isThenable)(i)?i.then(r._resolve,r._reject):(r._state=n,r._value=i,r._executeHandlers()))},this._attachHandler=function(e){r._handlers=r._handlers.concat(e),r._executeHandlers()},this._executeHandlers=function(){if(r._state!==e.PENDING){var t=r._handlers.slice();r._handlers=[],t.forEach(function(t){t.done||(r._state===e.RESOLVED&&t.onfulfilled&&t.onfulfilled(r._value),r._state===e.REJECTED&&t.onrejected&&t.onrejected(r._value),t.done=!0)})}};try{n(this._resolve,this._reject)}catch(i){this._reject(i)}}return n.resolve=function(e){return new n(function(t){t(e)})},n.reject=function(e){return new n(function(t,n){n(e)})},n.all=function(e){return new n(function(t,r){if(Array.isArray(e))if(0!==e.length){var i=e.length,o=[];e.forEach(function(e,u){n.resolve(e).then(function(e){o[u]=e,0===(i-=1)&&t(o)}).then(null,r)})}else t([]);else r(new TypeError("Promise.all requires an array as input."))})},n.prototype.then=function(e,t){var r=this;return new n(function(n,i){r._attachHandler({done:!1,onfulfilled:function(t){if(e)try{return void n(e(t))}catch(r){return void i(r)}else n(t)},onrejected:function(e){if(t)try{return void n(t(e))}catch(r){return void i(r)}else i(e)}})})},n.prototype.catch=function(e){return this.then(function(e){return e},e)},n.prototype.finally=function(e){var t=this;return new n(function(n,r){var i,o;return t.then(function(t){o=!1,i=t,e&&e()},function(t){o=!0,i=t,e&&e()}).then(function(){o?r(i):n(i)})})},n.prototype.toString=function(){return"[object SyncPromise]"},n}();exports.SyncPromise=n;
},{"./is":"cixp"}],"WUuT":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PromiseBuffer=void 0;var e=require("./error"),t=require("./syncpromise"),r=function(){function r(e){this._limit=e,this._buffer=[]}return r.prototype.isReady=function(){return void 0===this._limit||this.length()<this._limit},r.prototype.add=function(r){var n=this;return this.isReady()?(-1===this._buffer.indexOf(r)&&this._buffer.push(r),r.then(function(){return n.remove(r)}).then(null,function(){return n.remove(r).then(null,function(){})}),r):t.SyncPromise.reject(new e.SentryError("Not adding Promise due to buffer limit reached."))},r.prototype.remove=function(e){return this._buffer.splice(this._buffer.indexOf(e),1)[0]},r.prototype.length=function(){return this._buffer.length},r.prototype.drain=function(e){var r=this;return new t.SyncPromise(function(n){var i=setTimeout(function(){e&&e>0&&n(!1)},e);t.SyncPromise.all(r._buffer).then(function(){clearTimeout(i),n(!0)}).then(null,function(){n(!0)})})},r}();exports.PromiseBuffer=r;
},{"./error":"IhUY","./syncpromise":"EwT2"}],"shUJ":[function(require,module,exports) {
var global = arguments[3];
var e=arguments[3];Object.defineProperty(exports,"__esModule",{value:!0}),exports.supportsErrorEvent=n,exports.supportsDOMError=o,exports.supportsDOMException=c,exports.supportsFetch=i,exports.supportsNativeFetch=s,exports.supportsReportingObserver=p,exports.supportsReferrerPolicy=a,exports.supportsHistory=f;var r=require("./logger"),t=require("./misc");function n(){try{return new ErrorEvent(""),!0}catch(e){return!1}}function o(){try{return new DOMError(""),!0}catch(e){return!1}}function c(){try{return new DOMException(""),!0}catch(e){return!1}}function i(){if(!("fetch"in(0,t.getGlobalObject)()))return!1;try{return new Headers,new Request(""),new Response,!0}catch(e){return!1}}function u(e){return e&&/^function fetch\(\)\s+\{\s+\[native code\]\s+\}$/.test(e.toString())}function s(){if(!i())return!1;var e=(0,t.getGlobalObject)();if(u(e.fetch))return!0;var n=!1,o=e.document;if(o&&"function"==typeof o.createElement)try{var c=o.createElement("iframe");c.hidden=!0,o.head.appendChild(c),c.contentWindow&&c.contentWindow.fetch&&(n=u(c.contentWindow.fetch)),o.head.removeChild(c)}catch(s){r.logger.warn("Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ",s)}return n}function p(){return"ReportingObserver"in(0,t.getGlobalObject)()}function a(){if(!i())return!1;try{return new Request("_",{referrerPolicy:"origin"}),!0}catch(e){return!1}}function f(){var e=(0,t.getGlobalObject)(),r=e.chrome,n=r&&r.app&&r.app.runtime,o="history"in e&&!!e.history.pushState&&!!e.history.replaceState;return!n&&o}
},{"./logger":"ZYOL","./misc":"CNBN"}],"Sn6H":[function(require,module,exports) {

"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.addInstrumentationHandler=f;var t,e=require("tslib"),n=require("./is"),r=require("./logger"),o=require("./misc"),i=require("./object"),a=require("./supports"),s=(0,o.getGlobalObject)(),u={},c={};function l(t){if(!c[t])switch(c[t]=!0,t){case"console":p();break;case"dom":g();break;case"xhr":m();break;case"fetch":d();break;case"history":_();break;case"error":S();break;case"unhandledrejection":j();break;default:r.logger.warn("unknown instrumentation type:",t)}}function f(t){t&&"string"==typeof t.type&&"function"==typeof t.callback&&(u[t.type]=u[t.type]||[],u[t.type].push(t.callback),l(t.type))}function h(t,n){var i,a;if(t&&u[t])try{for(var s=(0,e.__values)(u[t]||[]),c=s.next();!c.done;c=s.next()){var l=c.value;try{l(n)}catch(f){r.logger.error("Error while triggering instrumentation handler.\nType: "+t+"\nName: "+(0,o.getFunctionName)(l)+"\nError: "+f)}}}catch(h){i={error:h}}finally{try{c&&!c.done&&(a=s.return)&&a.call(s)}finally{if(i)throw i.error}}}function p(){"console"in s&&["debug","info","warn","error","log","assert"].forEach(function(t){t in s.console&&(0,i.fill)(s.console,t,function(e){return function(){for(var n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];h("console",{args:n,level:t}),e&&Function.prototype.apply.call(e,s.console,n)}})})}function d(){(0,a.supportsNativeFetch)()&&(0,i.fill)(s,"fetch",function(t){return function(){for(var n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];var o={args:n,fetchData:{method:y(n),url:v(n)},startTimestamp:Date.now()};return h("fetch",(0,e.__assign)({},o)),t.apply(s,n).then(function(t){return h("fetch",(0,e.__assign)((0,e.__assign)({},o),{endTimestamp:Date.now(),response:t})),t},function(t){throw h("fetch",(0,e.__assign)((0,e.__assign)({},o),{endTimestamp:Date.now(),error:t})),t})}})}function y(t){return void 0===t&&(t=[]),"Request"in s&&(0,n.isInstanceOf)(t[0],Request)&&t[0].method?String(t[0].method).toUpperCase():t[1]&&t[1].method?String(t[1].method).toUpperCase():"GET"}function v(t){return void 0===t&&(t=[]),"string"==typeof t[0]?t[0]:"Request"in s&&(0,n.isInstanceOf)(t[0],Request)?t[0].url:String(t[0])}function m(){if("XMLHttpRequest"in s){var t=XMLHttpRequest.prototype;(0,i.fill)(t,"open",function(t){return function(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];var o=this,a=e[1];o.__sentry_xhr__={method:(0,n.isString)(e[0])?e[0].toUpperCase():e[0],url:e[1]},(0,n.isString)(a)&&"POST"===o.__sentry_xhr__.method&&a.match(/sentry_key/)&&(o.__sentry_own_request__=!0);var s=function(){if(4===o.readyState){try{o.__sentry_xhr__&&(o.__sentry_xhr__.status_code=o.status)}catch(t){}h("xhr",{args:e,endTimestamp:Date.now(),startTimestamp:Date.now(),xhr:o})}};return"onreadystatechange"in o&&"function"==typeof o.onreadystatechange?(0,i.fill)(o,"onreadystatechange",function(t){return function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return s(),t.apply(o,e)}}):o.addEventListener("readystatechange",s),t.apply(o,e)}}),(0,i.fill)(t,"send",function(t){return function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return h("xhr",{args:e,startTimestamp:Date.now(),xhr:this}),t.apply(this,e)}})}}function _(){if((0,a.supportsHistory)()){var e=s.onpopstate;s.onpopstate=function(){for(var n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];var o=s.location.href,i=t;if(t=o,h("history",{from:i,to:o}),e)return e.apply(this,n)},(0,i.fill)(s.history,"pushState",n),(0,i.fill)(s.history,"replaceState",n)}function n(e){return function(){for(var n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];var o=n.length>2?n[2]:void 0;if(o){var i=t,a=String(o);t=a,h("history",{from:i,to:a})}return e.apply(this,n)}}}function g(){"document"in s&&(s.document.addEventListener("click",T("click",h.bind(null,"dom")),!1),s.document.addEventListener("keypress",q(h.bind(null,"dom")),!1),["EventTarget","Node"].forEach(function(t){var e=s[t]&&s[t].prototype;e&&e.hasOwnProperty&&e.hasOwnProperty("addEventListener")&&((0,i.fill)(e,"addEventListener",function(t){return function(e,n,r){return n&&n.handleEvent?("click"===e&&(0,i.fill)(n,"handleEvent",function(t){return function(e){return T("click",h.bind(null,"dom"))(e),t.call(this,e)}}),"keypress"===e&&(0,i.fill)(n,"handleEvent",function(t){return function(e){return q(h.bind(null,"dom"))(e),t.call(this,e)}})):("click"===e&&T("click",h.bind(null,"dom"),!0)(this),"keypress"===e&&q(h.bind(null,"dom"))(this)),t.call(this,e,n,r)}}),(0,i.fill)(e,"removeEventListener",function(t){return function(e,n,r){try{t.call(this,e,n.__sentry_wrapped__,r)}catch(o){}return t.call(this,e,n,r)}}))}))}var b,k,E=1e3,w=0;function T(t,e,n){return void 0===n&&(n=!1),function(r){b=void 0,r&&k!==r&&(k=r,w&&clearTimeout(w),n?w=setTimeout(function(){e({event:r,name:t})}):e({event:r,name:t}))}}function q(t){return function(e){var n;try{n=e.target}catch(o){return}var r=n&&n.tagName;r&&("INPUT"===r||"TEXTAREA"===r||n.isContentEditable)&&(b||T("input",t)(e),clearTimeout(b),b=setTimeout(function(){b=void 0},E))}}var x=null;function S(){x=s.onerror,s.onerror=function(t,e,n,r,o){return h("error",{column:r,error:o,line:n,msg:t,url:e}),!!x&&x.apply(this,arguments)}}var L=null;function j(){L=s.onunhandledrejection,s.onunhandledrejection=function(t){return h("unhandledrejection",t),!L||L.apply(this,arguments)}}
},{"tslib":"vCxL","./is":"cixp","./logger":"ZYOL","./misc":"CNBN","./object":"f2BT","./supports":"shUJ"}],"au1D":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Dsn=void 0;var t=require("tslib"),o=require("./error"),r=/^(?:(\w+):)\/\/(?:(\w+)(?::(\w+))?@)([\w.-]+)(?::(\d+))?\/(.+)/,s="Invalid Dsn",i=function(){function i(t){"string"==typeof t?this._fromString(t):this._fromComponents(t),this._validate()}return i.prototype.toString=function(t){void 0===t&&(t=!1);var o=this,r=o.host,s=o.path,i=o.pass,e=o.port,p=o.projectId;return o.protocol+"://"+o.user+(t&&i?":"+i:"")+"@"+r+(e?":"+e:"")+"/"+(s?s+"/":s)+p},i.prototype._fromString=function(i){var e=r.exec(i);if(!e)throw new o.SentryError(s);var p=(0,t.__read)(e.slice(1),6),n=p[0],h=p[1],c=p[2],a=void 0===c?"":c,d=p[3],l=p[4],f=void 0===l?"":l,u="",v=p[5],w=v.split("/");if(w.length>1&&(u=w.slice(0,-1).join("/"),v=w.pop()),v){var I=v.match(/^\d+/);I&&(v=I[0])}this._fromComponents({host:d,pass:a,path:u,projectId:v,port:f,protocol:n,user:h})},i.prototype._fromComponents=function(t){this.protocol=t.protocol,this.user=t.user,this.pass=t.pass||"",this.host=t.host,this.port=t.port||"",this.path=t.path||"",this.projectId=t.projectId},i.prototype._validate=function(){var t=this;if(["protocol","user","host","projectId"].forEach(function(r){if(!t[r])throw new o.SentryError(s+": "+r+" missing")}),!this.projectId.match(/^\d+$/))throw new o.SentryError(s+": Invalid projectId "+this.projectId);if("http"!==this.protocol&&"https"!==this.protocol)throw new o.SentryError(s+": Invalid protocol "+this.protocol);if(this.port&&isNaN(parseInt(this.port,10)))throw new o.SentryError(s+": Invalid port "+this.port)},i}();exports.Dsn=i;
},{"tslib":"vCxL","./error":"IhUY"}],"vnUD":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("./async");Object.keys(e).forEach(function(r){"default"!==r&&"__esModule"!==r&&Object.defineProperty(exports,r,{enumerable:!0,get:function(){return e[r]}})});var r=require("./error");Object.keys(r).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(exports,e,{enumerable:!0,get:function(){return r[e]}})});var t=require("./is");Object.keys(t).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(exports,e,{enumerable:!0,get:function(){return t[e]}})});var n=require("./logger");Object.keys(n).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(exports,e,{enumerable:!0,get:function(){return n[e]}})});var u=require("./memo");Object.keys(u).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(exports,e,{enumerable:!0,get:function(){return u[e]}})});var o=require("./misc");Object.keys(o).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(exports,e,{enumerable:!0,get:function(){return o[e]}})});var c=require("./object");Object.keys(c).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(exports,e,{enumerable:!0,get:function(){return c[e]}})});var f=require("./path");Object.keys(f).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(exports,e,{enumerable:!0,get:function(){return f[e]}})});var i=require("./promisebuffer");Object.keys(i).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(exports,e,{enumerable:!0,get:function(){return i[e]}})});var a=require("./string");Object.keys(a).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(exports,e,{enumerable:!0,get:function(){return a[e]}})});var s=require("./supports");Object.keys(s).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(exports,e,{enumerable:!0,get:function(){return s[e]}})});var b=require("./syncpromise");Object.keys(b).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(exports,e,{enumerable:!0,get:function(){return b[e]}})});var d=require("./instrument");Object.keys(d).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(exports,e,{enumerable:!0,get:function(){return d[e]}})});var l=require("./dsn");Object.keys(l).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(exports,e,{enumerable:!0,get:function(){return l[e]}})});
},{"./async":"PHfu","./error":"IhUY","./is":"cixp","./logger":"ZYOL","./memo":"dPzZ","./misc":"CNBN","./object":"f2BT","./path":"bF34","./promisebuffer":"WUuT","./string":"EomM","./supports":"shUJ","./syncpromise":"EwT2","./instrument":"Sn6H","./dsn":"au1D"}],"RFfS":[function(require,module,exports) {
var global = arguments[3];
var t=arguments[3];Object.defineProperty(exports,"__esModule",{value:!0}),exports.addGlobalEventProcessor=r,exports.Scope=void 0;var s=require("tslib"),e=require("@sentry/utils"),n=function(){function t(){this._notifyingListeners=!1,this._scopeListeners=[],this._eventProcessors=[],this._breadcrumbs=[],this._user={},this._tags={},this._extra={},this._contexts={}}return t.clone=function(e){var n=new t;return e&&(n._breadcrumbs=(0,s.__spread)(e._breadcrumbs),n._tags=(0,s.__assign)({},e._tags),n._extra=(0,s.__assign)({},e._extra),n._contexts=(0,s.__assign)({},e._contexts),n._user=e._user,n._level=e._level,n._span=e._span,n._transactionName=e._transactionName,n._fingerprint=e._fingerprint,n._eventProcessors=(0,s.__spread)(e._eventProcessors)),n},t.prototype.addScopeListener=function(t){this._scopeListeners.push(t)},t.prototype.addEventProcessor=function(t){return this._eventProcessors.push(t),this},t.prototype.setUser=function(t){return this._user=t||{},this._notifyScopeListeners(),this},t.prototype.setTags=function(t){return this._tags=(0,s.__assign)((0,s.__assign)({},this._tags),t),this._notifyScopeListeners(),this},t.prototype.setTag=function(t,e){var n;return this._tags=(0,s.__assign)((0,s.__assign)({},this._tags),((n={})[t]=e,n)),this._notifyScopeListeners(),this},t.prototype.setExtras=function(t){return this._extra=(0,s.__assign)((0,s.__assign)({},this._extra),t),this._notifyScopeListeners(),this},t.prototype.setExtra=function(t,e){var n;return this._extra=(0,s.__assign)((0,s.__assign)({},this._extra),((n={})[t]=e,n)),this._notifyScopeListeners(),this},t.prototype.setFingerprint=function(t){return this._fingerprint=t,this._notifyScopeListeners(),this},t.prototype.setLevel=function(t){return this._level=t,this._notifyScopeListeners(),this},t.prototype.setTransactionName=function(t){return this._transactionName=t,this._notifyScopeListeners(),this},t.prototype.setTransaction=function(t){return this.setTransactionName(t)},t.prototype.setContext=function(t,e){var n;return this._contexts=(0,s.__assign)((0,s.__assign)({},this._contexts),((n={})[t]=e,n)),this._notifyScopeListeners(),this},t.prototype.setSpan=function(t){return this._span=t,this._notifyScopeListeners(),this},t.prototype.getSpan=function(){return this._span},t.prototype.getTransaction=function(){var t=this.getSpan();if(t&&t.spanRecorder&&t.spanRecorder.spans[0])return t.spanRecorder.spans[0]},t.prototype.update=function(n){if(!n)return this;if("function"==typeof n){var i=n(this);return i instanceof t?i:this}return n instanceof t?(this._tags=(0,s.__assign)((0,s.__assign)({},this._tags),n._tags),this._extra=(0,s.__assign)((0,s.__assign)({},this._extra),n._extra),this._contexts=(0,s.__assign)((0,s.__assign)({},this._contexts),n._contexts),n._user&&(this._user=n._user),n._level&&(this._level=n._level),n._fingerprint&&(this._fingerprint=n._fingerprint)):(0,e.isPlainObject)(n)&&(n=n,this._tags=(0,s.__assign)((0,s.__assign)({},this._tags),n.tags),this._extra=(0,s.__assign)((0,s.__assign)({},this._extra),n.extra),this._contexts=(0,s.__assign)((0,s.__assign)({},this._contexts),n.contexts),n.user&&(this._user=n.user),n.level&&(this._level=n.level),n.fingerprint&&(this._fingerprint=n.fingerprint)),this},t.prototype.clear=function(){return this._breadcrumbs=[],this._tags={},this._extra={},this._user={},this._contexts={},this._level=void 0,this._transactionName=void 0,this._fingerprint=void 0,this._span=void 0,this._notifyScopeListeners(),this},t.prototype.addBreadcrumb=function(t,n){var i=(0,s.__assign)({timestamp:(0,e.timestampWithMs)()},t);return this._breadcrumbs=void 0!==n&&n>=0?(0,s.__spread)(this._breadcrumbs,[i]).slice(-n):(0,s.__spread)(this._breadcrumbs,[i]),this._notifyScopeListeners(),this},t.prototype.clearBreadcrumbs=function(){return this._breadcrumbs=[],this._notifyScopeListeners(),this},t.prototype.applyToEvent=function(t,e){return this._extra&&Object.keys(this._extra).length&&(t.extra=(0,s.__assign)((0,s.__assign)({},this._extra),t.extra)),this._tags&&Object.keys(this._tags).length&&(t.tags=(0,s.__assign)((0,s.__assign)({},this._tags),t.tags)),this._user&&Object.keys(this._user).length&&(t.user=(0,s.__assign)((0,s.__assign)({},this._user),t.user)),this._contexts&&Object.keys(this._contexts).length&&(t.contexts=(0,s.__assign)((0,s.__assign)({},this._contexts),t.contexts)),this._level&&(t.level=this._level),this._transactionName&&(t.transaction=this._transactionName),this._span&&(t.contexts=(0,s.__assign)({trace:this._span.getTraceContext()},t.contexts)),this._applyFingerprint(t),t.breadcrumbs=(0,s.__spread)(t.breadcrumbs||[],this._breadcrumbs),t.breadcrumbs=t.breadcrumbs.length>0?t.breadcrumbs:void 0,this._notifyEventProcessors((0,s.__spread)(i(),this._eventProcessors),t,e)},t.prototype._notifyEventProcessors=function(t,n,i,r){var _=this;return void 0===r&&(r=0),new e.SyncPromise(function(o,a){var c=t[r];if(null===n||"function"!=typeof c)o(n);else{var h=c((0,s.__assign)({},n),i);(0,e.isThenable)(h)?h.then(function(s){return _._notifyEventProcessors(t,s,i,r+1).then(o)}).then(null,a):_._notifyEventProcessors(t,h,i,r+1).then(o).then(null,a)}})},t.prototype._notifyScopeListeners=function(){var t=this;this._notifyingListeners||(this._notifyingListeners=!0,setTimeout(function(){t._scopeListeners.forEach(function(s){s(t)}),t._notifyingListeners=!1}))},t.prototype._applyFingerprint=function(t){t.fingerprint=t.fingerprint?Array.isArray(t.fingerprint)?t.fingerprint:[t.fingerprint]:[],this._fingerprint&&(t.fingerprint=t.fingerprint.concat(this._fingerprint)),t.fingerprint&&!t.fingerprint.length&&delete t.fingerprint},t}();function i(){var t=(0,e.getGlobalObject)();return t.__SENTRY__=t.__SENTRY__||{},t.__SENTRY__.globalEventProcessors=t.__SENTRY__.globalEventProcessors||[],t.__SENTRY__.globalEventProcessors}function r(t){i().push(t)}exports.Scope=n;
},{"tslib":"vCxL","@sentry/utils":"vnUD"}],"R95U":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getMainCarrier=c,exports.makeMain=p,exports.getCurrentHub=a,exports.getHubFromCarrier=h,exports.setHubOnCarrier=l,exports.Hub=exports.API_VERSION=void 0;var t=require("tslib"),e=require("@sentry/utils"),n=require("./scope"),o=3;exports.API_VERSION=o;var r=100,i=100,s=function(){function s(t,e,r){void 0===e&&(e=new n.Scope),void 0===r&&(r=o),this._version=r,this._stack=[],this._stack.push({client:t,scope:e}),this.bindClient(t)}return s.prototype.isOlderThan=function(t){return this._version<t},s.prototype.bindClient=function(t){this.getStackTop().client=t,t&&t.setupIntegrations&&t.setupIntegrations()},s.prototype.pushScope=function(){var t=this.getStack(),e=t.length>0?t[t.length-1].scope:void 0,o=n.Scope.clone(e);return this.getStack().push({client:this.getClient(),scope:o}),o},s.prototype.popScope=function(){return void 0!==this.getStack().pop()},s.prototype.withScope=function(t){var e=this.pushScope();try{t(e)}finally{this.popScope()}},s.prototype.getClient=function(){return this.getStackTop().client},s.prototype.getScope=function(){return this.getStackTop().scope},s.prototype.getStack=function(){return this._stack},s.prototype.getStackTop=function(){return this._stack[this._stack.length-1]},s.prototype.captureException=function(n,o){var r=this._lastEventId=(0,e.uuid4)(),i=o;if(!o){var s=void 0;try{throw new Error("Sentry syntheticException")}catch(n){s=n}i={originalException:n,syntheticException:s}}return this._invokeClient("captureException",n,(0,t.__assign)((0,t.__assign)({},i),{event_id:r})),r},s.prototype.captureMessage=function(n,o,r){var i=this._lastEventId=(0,e.uuid4)(),s=r;if(!r){var c=void 0;try{throw new Error(n)}catch(p){c=p}s={originalException:n,syntheticException:c}}return this._invokeClient("captureMessage",n,o,(0,t.__assign)((0,t.__assign)({},s),{event_id:i})),i},s.prototype.captureEvent=function(n,o){var r=this._lastEventId=(0,e.uuid4)();return this._invokeClient("captureEvent",n,(0,t.__assign)((0,t.__assign)({},o),{event_id:r})),r},s.prototype.lastEventId=function(){return this._lastEventId},s.prototype.addBreadcrumb=function(n,o){var s=this.getStackTop();if(s.scope&&s.client){var c=s.client.getOptions&&s.client.getOptions()||{},p=c.beforeBreadcrumb,a=void 0===p?null:p,u=c.maxBreadcrumbs,_=void 0===u?r:u;if(!(_<=0)){var h=(0,e.timestampWithMs)(),l=(0,t.__assign)({timestamp:h},n),g=a?(0,e.consoleSandbox)(function(){return a(l,o)}):l;null!==g&&s.scope.addBreadcrumb(g,Math.min(_,i))}}},s.prototype.setUser=function(t){var e=this.getStackTop();e.scope&&e.scope.setUser(t)},s.prototype.setTags=function(t){var e=this.getStackTop();e.scope&&e.scope.setTags(t)},s.prototype.setExtras=function(t){var e=this.getStackTop();e.scope&&e.scope.setExtras(t)},s.prototype.setTag=function(t,e){var n=this.getStackTop();n.scope&&n.scope.setTag(t,e)},s.prototype.setExtra=function(t,e){var n=this.getStackTop();n.scope&&n.scope.setExtra(t,e)},s.prototype.setContext=function(t,e){var n=this.getStackTop();n.scope&&n.scope.setContext(t,e)},s.prototype.configureScope=function(t){var e=this.getStackTop();e.scope&&e.client&&t(e.scope)},s.prototype.run=function(t){var e=p(this);try{t(this)}finally{p(e)}},s.prototype.getIntegration=function(t){var n=this.getClient();if(!n)return null;try{return n.getIntegration(t)}catch(o){return e.logger.warn("Cannot retrieve integration "+t.id+" from the current Hub"),null}},s.prototype.startSpan=function(t){return this._callExtensionMethod("startSpan",t)},s.prototype.startTransaction=function(t){return this._callExtensionMethod("startTransaction",t)},s.prototype.traceHeaders=function(){return this._callExtensionMethod("traceHeaders")},s.prototype._invokeClient=function(e){for(var n,o=[],r=1;r<arguments.length;r++)o[r-1]=arguments[r];var i=this.getStackTop();i&&i.client&&i.client[e]&&(n=i.client)[e].apply(n,(0,t.__spread)(o,[i.scope]))},s.prototype._callExtensionMethod=function(t){for(var n=[],o=1;o<arguments.length;o++)n[o-1]=arguments[o];var r=c().__SENTRY__;if(r&&r.extensions&&"function"==typeof r.extensions[t])return r.extensions[t].apply(this,n);e.logger.warn("Extension method "+t+" couldn't be found, doing nothing.")},s}();function c(){var t=(0,e.getGlobalObject)();return t.__SENTRY__=t.__SENTRY__||{extensions:{},hub:void 0},t}function p(t){var e=c(),n=h(e);return l(e,t),n}function a(){var t=c();return _(t)&&!h(t).isOlderThan(o)||l(t,new s),(0,e.isNodeEnv)()?u(t):h(t)}function u(t){try{var e=c().__SENTRY__;if(!e||!e.extensions||!e.extensions.domain)return h(t);var r=e.extensions.domain.active;if(!r)return h(t);if(!_(r)||h(r).isOlderThan(o)){var i=h(t).getStackTop();l(r,new s(i.client,n.Scope.clone(i.scope)))}return h(r)}catch(p){return h(t)}}function _(t){return!!(t&&t.__SENTRY__&&t.__SENTRY__.hub)}function h(t){return t&&t.__SENTRY__&&t.__SENTRY__.hub?t.__SENTRY__.hub:(t.__SENTRY__=t.__SENTRY__||{},t.__SENTRY__.hub=new s,t.__SENTRY__.hub)}function l(t,e){return!!t&&(t.__SENTRY__=t.__SENTRY__||{},t.__SENTRY__.hub=e,!0)}exports.Hub=s;
},{"tslib":"vCxL","@sentry/utils":"vnUD","./scope":"RFfS"}],"U9M5":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"addGlobalEventProcessor",{enumerable:!0,get:function(){return e.addGlobalEventProcessor}}),Object.defineProperty(exports,"Scope",{enumerable:!0,get:function(){return e.Scope}}),Object.defineProperty(exports,"getCurrentHub",{enumerable:!0,get:function(){return r.getCurrentHub}}),Object.defineProperty(exports,"getHubFromCarrier",{enumerable:!0,get:function(){return r.getHubFromCarrier}}),Object.defineProperty(exports,"getMainCarrier",{enumerable:!0,get:function(){return r.getMainCarrier}}),Object.defineProperty(exports,"Hub",{enumerable:!0,get:function(){return r.Hub}}),Object.defineProperty(exports,"makeMain",{enumerable:!0,get:function(){return r.makeMain}}),Object.defineProperty(exports,"setHubOnCarrier",{enumerable:!0,get:function(){return r.setHubOnCarrier}});var e=require("./scope"),r=require("./hub");
},{"./scope":"RFfS","./hub":"R95U"}],"uQ1D":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.captureException=n,exports.captureMessage=o,exports.captureEvent=s,exports.configureScope=i,exports.addBreadcrumb=a,exports.setContext=c,exports.setExtras=p,exports.setTags=u,exports.setExtra=x,exports.setTag=f,exports.setUser=g,exports.withScope=d,exports._callOnClient=h,exports.startTransaction=E;var t=require("tslib"),e=require("@sentry/hub");function r(r){for(var n=[],o=1;o<arguments.length;o++)n[o-1]=arguments[o];var s=(0,e.getCurrentHub)();if(s&&s[r])return s[r].apply(s,(0,t.__spread)(n));throw new Error("No hub defined or "+r+" was not found on the hub, please open a bug report.")}function n(t,e){var n;try{throw new Error("Sentry syntheticException")}catch(t){n=t}return r("captureException",t,{captureContext:e,originalException:t,syntheticException:n})}function o(e,n){var o;try{throw new Error(e)}catch(i){o=i}var s="string"!=typeof n?{captureContext:n}:void 0;return r("captureMessage",e,"string"==typeof n?n:void 0,(0,t.__assign)({originalException:e,syntheticException:o},s))}function s(t){return r("captureEvent",t)}function i(t){r("configureScope",t)}function a(t){r("addBreadcrumb",t)}function c(t,e){r("setContext",t,e)}function p(t){r("setExtras",t)}function u(t){r("setTags",t)}function x(t,e){r("setExtra",t,e)}function f(t,e){r("setTag",t,e)}function g(t){r("setUser",t)}function d(t){r("withScope",t)}function h(e){for(var n=[],o=1;o<arguments.length;o++)n[o-1]=arguments[o];r.apply(void 0,(0,t.__spread)(["_invokeClient",e],n))}function E(e){return r("startTransaction",(0,t.__assign)({},e))}
},{"tslib":"vCxL","@sentry/hub":"U9M5"}],"DsIj":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.API=void 0;var t=require("@sentry/utils"),e="7",n=function(){function n(e){this.dsn=e,this._dsnObject=new t.Dsn(e)}return n.prototype.getDsn=function(){return this._dsnObject},n.prototype.getBaseApiEndpoint=function(){var t=this._dsnObject,e=t.protocol?t.protocol+":":"",n=t.port?":"+t.port:"";return e+"//"+t.host+n+(t.path?"/"+t.path:"")+"/api/"},n.prototype.getStoreEndpoint=function(){return this._getIngestEndpoint("store")},n.prototype.getStoreEndpointWithUrlEncodedAuth=function(){return this.getStoreEndpoint()+"?"+this._encodedAuth()},n.prototype.getEnvelopeEndpointWithUrlEncodedAuth=function(){return this._getEnvelopeEndpoint()+"?"+this._encodedAuth()},n.prototype.getStoreEndpointPath=function(){var t=this._dsnObject;return(t.path?"/"+t.path:"")+"/api/"+t.projectId+"/store/"},n.prototype.getRequestHeaders=function(t,n){var o=this._dsnObject,r=["Sentry sentry_version="+e];return r.push("sentry_client="+t+"/"+n),r.push("sentry_key="+o.user),o.pass&&r.push("sentry_secret="+o.pass),{"Content-Type":"application/json","X-Sentry-Auth":r.join(", ")}},n.prototype.getReportDialogEndpoint=function(t){void 0===t&&(t={});var e=this._dsnObject,n=this.getBaseApiEndpoint()+"embed/error-page/",o=[];for(var r in o.push("dsn="+e.toString()),t)if("user"===r){if(!t.user)continue;t.user.name&&o.push("name="+encodeURIComponent(t.user.name)),t.user.email&&o.push("email="+encodeURIComponent(t.user.email))}else o.push(encodeURIComponent(r)+"="+encodeURIComponent(t[r]));return o.length?n+"?"+o.join("&"):n},n.prototype._getEnvelopeEndpoint=function(){return this._getIngestEndpoint("envelope")},n.prototype._getIngestEndpoint=function(t){return""+this.getBaseApiEndpoint()+this._dsnObject.projectId+"/"+t+"/"},n.prototype._encodedAuth=function(){var n={sentry_key:this._dsnObject.user,sentry_version:e};return(0,t.urlEncode)(n)},n}();exports.API=n;
},{"@sentry/utils":"vnUD"}],"am9d":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getIntegrationsToSetup=a,exports.setupIntegration=s,exports.setupIntegrations=i,exports.installedIntegrations=void 0;var e=require("tslib"),n=require("@sentry/hub"),t=require("@sentry/utils"),r=[];function a(n){var t=n.defaultIntegrations&&(0,e.__spread)(n.defaultIntegrations)||[],r=n.integrations,a=[];if(Array.isArray(r)){var s=r.map(function(e){return e.name}),i=[];t.forEach(function(e){-1===s.indexOf(e.name)&&-1===i.indexOf(e.name)&&(a.push(e),i.push(e.name))}),r.forEach(function(e){-1===i.indexOf(e.name)&&(a.push(e),i.push(e.name))})}else"function"==typeof r?(a=r(t),a=Array.isArray(a)?a:[a]):a=(0,e.__spread)(t);var o=a.map(function(e){return e.name});return-1!==o.indexOf("Debug")&&a.push.apply(a,(0,e.__spread)(a.splice(o.indexOf("Debug"),1))),a}function s(e){-1===r.indexOf(e.name)&&(e.setupOnce(n.addGlobalEventProcessor,n.getCurrentHub),r.push(e.name),t.logger.log("Integration installed: "+e.name))}function i(e){var n={};return a(e).forEach(function(e){n[e.name]=e,s(e)}),n}exports.installedIntegrations=r;
},{"tslib":"vCxL","@sentry/hub":"U9M5","@sentry/utils":"vnUD"}],"AQrL":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BaseClient=void 0;var e=require("tslib"),t=require("@sentry/hub"),n=require("@sentry/utils"),r=require("./integration"),i=function(){function i(e,t){this._integrations={},this._processing=!1,this._backend=new e(t),this._options=t,t.dsn&&(this._dsn=new n.Dsn(t.dsn))}return i.prototype.captureException=function(e,t,n){var r=this,i=t&&t.event_id;return this._processing=!0,this._getBackend().eventFromException(e,t).then(function(e){i=r.captureEvent(e,t,n)}),i},i.prototype.captureMessage=function(e,t,r,i){var s=this,o=r&&r.event_id;return this._processing=!0,((0,n.isPrimitive)(e)?this._getBackend().eventFromMessage(""+e,t,r):this._getBackend().eventFromException(e,r)).then(function(e){o=s.captureEvent(e,r,i)}),o},i.prototype.captureEvent=function(e,t,r){var i=this,s=t&&t.event_id;return this._processing=!0,this._processEvent(e,t,r).then(function(e){s=e&&e.event_id,i._processing=!1}).then(null,function(e){n.logger.error(e),i._processing=!1}),s},i.prototype.getDsn=function(){return this._dsn},i.prototype.getOptions=function(){return this._options},i.prototype.flush=function(e){var t=this;return this._isClientProcessing(e).then(function(n){return clearInterval(n.interval),t._getBackend().getTransport().close(e).then(function(e){return n.ready&&e})})},i.prototype.close=function(e){var t=this;return this.flush(e).then(function(e){return t.getOptions().enabled=!1,e})},i.prototype.setupIntegrations=function(){this._isEnabled()&&(this._integrations=(0,r.setupIntegrations)(this._options))},i.prototype.getIntegration=function(e){try{return this._integrations[e.id]||null}catch(t){return n.logger.warn("Cannot retrieve integration "+e.id+" from the current Client"),null}},i.prototype._isClientProcessing=function(e){var t=this;return new n.SyncPromise(function(n){var r=0,i=0;clearInterval(i),i=setInterval(function(){t._processing?(r+=1,e&&r>=e&&n({interval:i,ready:!1})):n({interval:i,ready:!0})},1)})},i.prototype._getBackend=function(){return this._backend},i.prototype._isEnabled=function(){return!1!==this.getOptions().enabled&&void 0!==this._dsn},i.prototype._prepareEvent=function(r,i,s){var o=this,a=this.getOptions().normalizeDepth,u=void 0===a?3:a,l=(0,e.__assign)((0,e.__assign)({},r),{event_id:r.event_id||(s&&s.event_id?s.event_id:(0,n.uuid4)()),timestamp:r.timestamp||(0,n.timestampWithMs)()});this._applyClientOptions(l),this._applyIntegrationsMetadata(l);var c=i;s&&s.captureContext&&(c=t.Scope.clone(c).update(s.captureContext));var p=n.SyncPromise.resolve(l);return c&&(p=c.applyToEvent(l,s)),p.then(function(e){return"number"==typeof u&&u>0?o._normalizeEvent(e,u):e})},i.prototype._normalizeEvent=function(t,r){if(!t)return null;var i=(0,e.__assign)((0,e.__assign)((0,e.__assign)((0,e.__assign)((0,e.__assign)({},t),t.breadcrumbs&&{breadcrumbs:t.breadcrumbs.map(function(t){return(0,e.__assign)((0,e.__assign)({},t),t.data&&{data:(0,n.normalize)(t.data,r)})})}),t.user&&{user:(0,n.normalize)(t.user,r)}),t.contexts&&{contexts:(0,n.normalize)(t.contexts,r)}),t.extra&&{extra:(0,n.normalize)(t.extra,r)});return t.contexts&&t.contexts.trace&&(i.contexts.trace=t.contexts.trace),i},i.prototype._applyClientOptions=function(e){var t=this.getOptions(),r=t.environment,i=t.release,s=t.dist,o=t.maxValueLength,a=void 0===o?250:o;void 0===e.environment&&void 0!==r&&(e.environment=r),void 0===e.release&&void 0!==i&&(e.release=i),void 0===e.dist&&void 0!==s&&(e.dist=s),e.message&&(e.message=(0,n.truncate)(e.message,a));var u=e.exception&&e.exception.values&&e.exception.values[0];u&&u.value&&(u.value=(0,n.truncate)(u.value,a));var l=e.request;l&&l.url&&(l.url=(0,n.truncate)(l.url,a))},i.prototype._applyIntegrationsMetadata=function(e){var t=e.sdk,n=Object.keys(this._integrations);t&&n.length>0&&(t.integrations=n)},i.prototype._sendEvent=function(e){this._getBackend().sendEvent(e)},i.prototype._processEvent=function(e,t,r){var i=this,s=this.getOptions(),o=s.beforeSend,a=s.sampleRate;if(!this._isEnabled())return n.SyncPromise.reject("SDK not enabled, will not send event.");var u="transaction"===e.type;return!u&&"number"==typeof a&&Math.random()>a?n.SyncPromise.reject("This event has been sampled, will not send event."):new n.SyncPromise(function(s,a){i._prepareEvent(e,r,t).then(function(e){if(null!==e){var r=e;if(t&&t.data&&!0===t.data.__sentry__||!o||u)return i._sendEvent(r),void s(r);var l=o(e,t);if(void 0===l)n.logger.error("`beforeSend` method has to return `null` or a valid event.");else if((0,n.isThenable)(l))i._handleAsyncBeforeSend(l,s,a);else{if(null===(r=l))return n.logger.log("`beforeSend` returned `null`, will not send event."),void s(null);i._sendEvent(r),s(r)}}else a("An event processor returned null, will not send event.")}).then(null,function(e){i.captureException(e,{data:{__sentry__:!0},originalException:e}),a("Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\nReason: "+e)})})},i.prototype._handleAsyncBeforeSend=function(e,t,n){var r=this;e.then(function(e){null!==e?(r._sendEvent(e),t(e)):n("`beforeSend` returned `null`, will not send event.")}).then(null,function(e){n("beforeSend rejected with "+e)})},i}();exports.BaseClient=i;
},{"tslib":"vCxL","@sentry/hub":"U9M5","@sentry/utils":"vnUD","./integration":"am9d"}],"fec3":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.NoopTransport=void 0;var e=require("@sentry/types"),r=require("@sentry/utils"),o=function(){function o(){}return o.prototype.sendEvent=function(o){return r.SyncPromise.resolve({reason:"NoopTransport: Event has been skipped because no Dsn is configured.",status:e.Status.Skipped})},o.prototype.close=function(e){return r.SyncPromise.resolve(!0)},o}();exports.NoopTransport=o;
},{"@sentry/types":"vYhp","@sentry/utils":"vnUD"}],"BMjl":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BaseBackend=void 0;var t=require("@sentry/utils"),e=require("./transports/noop"),n=function(){function n(e){this._options=e,this._options.dsn||t.logger.warn("No DSN provided, backend will not do anything."),this._transport=this._setupTransport()}return n.prototype.eventFromException=function(e,n){throw new t.SentryError("Backend has to implement `eventFromException` method")},n.prototype.eventFromMessage=function(e,n,r){throw new t.SentryError("Backend has to implement `eventFromMessage` method")},n.prototype.sendEvent=function(e){this._transport.sendEvent(e).then(null,function(e){t.logger.error("Error while sending event: "+e)})},n.prototype.getTransport=function(){return this._transport},n.prototype._setupTransport=function(){return new e.NoopTransport},n}();exports.BaseBackend=n;
},{"@sentry/utils":"vnUD","./transports/noop":"fec3"}],"dMBM":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.eventToSentryRequest=e;var t=require("@sentry/utils");function e(e,n){var r="transaction"===e.type,i={body:JSON.stringify(e),url:r?n.getEnvelopeEndpointWithUrlEncodedAuth():n.getStoreEndpointWithUrlEncodedAuth()};if(r){var o=JSON.stringify({event_id:e.event_id,sent_at:new Date(1e3*(0,t.timestampWithMs)()).toISOString()})+"\n"+JSON.stringify({type:e.type})+"\n"+i.body;i.body=o}return i}
},{"@sentry/utils":"vnUD"}],"Bvms":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.initAndBind=t;var e=require("@sentry/hub"),r=require("@sentry/utils");function t(t,n){!0===n.debug&&r.logger.enable();var i=(0,e.getCurrentHub)(),u=new t(n);i.bindClient(u)}
},{"@sentry/hub":"U9M5","@sentry/utils":"vnUD"}],"ON5N":[function(require,module,exports) {
"use strict";var t;Object.defineProperty(exports,"__esModule",{value:!0}),exports.FunctionToString=void 0;var n=function(){function n(){this.name=n.id}return n.prototype.setupOnce=function(){t=Function.prototype.toString,Function.prototype.toString=function(){for(var n=[],o=0;o<arguments.length;o++)n[o]=arguments[o];var r=this.__sentry_original__||this;return t.apply(r,n)}},n.id="FunctionToString",n}();exports.FunctionToString=n;
},{}],"PwYX":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.InboundFilters=void 0;var e=require("tslib"),r=require("@sentry/hub"),t=require("@sentry/utils"),n=[/^Script error\.?$/,/^Javascript error: Script error\.? on line 0$/],o=function(){function o(e){void 0===e&&(e={}),this._options=e,this.name=o.id}return o.prototype.setupOnce=function(){(0,r.addGlobalEventProcessor)(function(e){var t=(0,r.getCurrentHub)();if(!t)return e;var n=t.getIntegration(o);if(n){var i=t.getClient(),s=i?i.getOptions():{},l=n._mergeOptions(s);if(n._shouldDropEvent(e,l))return null}return e})},o.prototype._shouldDropEvent=function(e,r){return this._isSentryError(e,r)?(t.logger.warn("Event dropped due to being internal Sentry Error.\nEvent: "+(0,t.getEventDescription)(e)),!0):this._isIgnoredError(e,r)?(t.logger.warn("Event dropped due to being matched by `ignoreErrors` option.\nEvent: "+(0,t.getEventDescription)(e)),!0):this._isDeniedUrl(e,r)?(t.logger.warn("Event dropped due to being matched by `denyUrls` option.\nEvent: "+(0,t.getEventDescription)(e)+".\nUrl: "+this._getEventFilterUrl(e)),!0):!this._isAllowedUrl(e,r)&&(t.logger.warn("Event dropped due to not being matched by `allowUrls` option.\nEvent: "+(0,t.getEventDescription)(e)+".\nUrl: "+this._getEventFilterUrl(e)),!0)},o.prototype._isSentryError=function(e,r){if(!r.ignoreInternal)return!1;try{return e&&e.exception&&e.exception.values&&e.exception.values[0]&&"SentryError"===e.exception.values[0].type||!1}catch(t){return!1}},o.prototype._isIgnoredError=function(e,r){return!(!r.ignoreErrors||!r.ignoreErrors.length)&&this._getPossibleEventMessages(e).some(function(e){return r.ignoreErrors.some(function(r){return(0,t.isMatchingPattern)(e,r)})})},o.prototype._isDeniedUrl=function(e,r){if(!r.denyUrls||!r.denyUrls.length)return!1;var n=this._getEventFilterUrl(e);return!!n&&r.denyUrls.some(function(e){return(0,t.isMatchingPattern)(n,e)})},o.prototype._isAllowedUrl=function(e,r){if(!r.allowUrls||!r.allowUrls.length)return!0;var n=this._getEventFilterUrl(e);return!n||r.allowUrls.some(function(e){return(0,t.isMatchingPattern)(n,e)})},o.prototype._mergeOptions=function(r){return void 0===r&&(r={}),{allowUrls:(0,e.__spread)(this._options.whitelistUrls||[],this._options.allowUrls||[],r.whitelistUrls||[],r.allowUrls||[]),denyUrls:(0,e.__spread)(this._options.blacklistUrls||[],this._options.denyUrls||[],r.blacklistUrls||[],r.denyUrls||[]),ignoreErrors:(0,e.__spread)(this._options.ignoreErrors||[],r.ignoreErrors||[],n),ignoreInternal:void 0===this._options.ignoreInternal||this._options.ignoreInternal}},o.prototype._getPossibleEventMessages=function(e){if(e.message)return[e.message];if(e.exception)try{var r=e.exception.values&&e.exception.values[0]||{},n=r.type,o=void 0===n?"":n,i=r.value,s=void 0===i?"":i;return[""+s,o+": "+s]}catch(l){return t.logger.error("Cannot extract message for event "+(0,t.getEventDescription)(e)),[]}return[]},o.prototype._getEventFilterUrl=function(e){try{if(e.stacktrace){var r=e.stacktrace.frames;return r&&r[r.length-1].filename||null}if(e.exception){var n=e.exception.values&&e.exception.values[0].stacktrace&&e.exception.values[0].stacktrace.frames;return n&&n[n.length-1].filename||null}return null}catch(o){return t.logger.error("Cannot extract url for event "+(0,t.getEventDescription)(e)),null}},o.id="InboundFilters",o}();exports.InboundFilters=o;
},{"tslib":"vCxL","@sentry/hub":"U9M5","@sentry/utils":"vnUD"}],"t1vy":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"FunctionToString",{enumerable:!0,get:function(){return e.FunctionToString}}),Object.defineProperty(exports,"InboundFilters",{enumerable:!0,get:function(){return r.InboundFilters}});var e=require("./functiontostring"),r=require("./inboundfilters");
},{"./functiontostring":"ON5N","./inboundfilters":"PwYX"}],"TZM3":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"addBreadcrumb",{enumerable:!0,get:function(){return e.addBreadcrumb}}),Object.defineProperty(exports,"captureException",{enumerable:!0,get:function(){return e.captureException}}),Object.defineProperty(exports,"captureEvent",{enumerable:!0,get:function(){return e.captureEvent}}),Object.defineProperty(exports,"captureMessage",{enumerable:!0,get:function(){return e.captureMessage}}),Object.defineProperty(exports,"configureScope",{enumerable:!0,get:function(){return e.configureScope}}),Object.defineProperty(exports,"startTransaction",{enumerable:!0,get:function(){return e.startTransaction}}),Object.defineProperty(exports,"setContext",{enumerable:!0,get:function(){return e.setContext}}),Object.defineProperty(exports,"setExtra",{enumerable:!0,get:function(){return e.setExtra}}),Object.defineProperty(exports,"setExtras",{enumerable:!0,get:function(){return e.setExtras}}),Object.defineProperty(exports,"setTag",{enumerable:!0,get:function(){return e.setTag}}),Object.defineProperty(exports,"setTags",{enumerable:!0,get:function(){return e.setTags}}),Object.defineProperty(exports,"setUser",{enumerable:!0,get:function(){return e.setUser}}),Object.defineProperty(exports,"withScope",{enumerable:!0,get:function(){return e.withScope}}),Object.defineProperty(exports,"addGlobalEventProcessor",{enumerable:!0,get:function(){return t.addGlobalEventProcessor}}),Object.defineProperty(exports,"getCurrentHub",{enumerable:!0,get:function(){return t.getCurrentHub}}),Object.defineProperty(exports,"getHubFromCarrier",{enumerable:!0,get:function(){return t.getHubFromCarrier}}),Object.defineProperty(exports,"Hub",{enumerable:!0,get:function(){return t.Hub}}),Object.defineProperty(exports,"makeMain",{enumerable:!0,get:function(){return t.makeMain}}),Object.defineProperty(exports,"Scope",{enumerable:!0,get:function(){return t.Scope}}),Object.defineProperty(exports,"API",{enumerable:!0,get:function(){return r.API}}),Object.defineProperty(exports,"BaseClient",{enumerable:!0,get:function(){return n.BaseClient}}),Object.defineProperty(exports,"BaseBackend",{enumerable:!0,get:function(){return o.BaseBackend}}),Object.defineProperty(exports,"eventToSentryRequest",{enumerable:!0,get:function(){return u.eventToSentryRequest}}),Object.defineProperty(exports,"initAndBind",{enumerable:!0,get:function(){return i.initAndBind}}),Object.defineProperty(exports,"NoopTransport",{enumerable:!0,get:function(){return a.NoopTransport}}),exports.Integrations=void 0;var e=require("@sentry/minimal"),t=require("@sentry/hub"),r=require("./api"),n=require("./baseclient"),o=require("./basebackend"),u=require("./request"),i=require("./sdk"),a=require("./transports/noop"),c=s(require("./integrations"));function p(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return p=function(){return e},e}function s(e){if(e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=p();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var u=n?Object.getOwnPropertyDescriptor(e,o):null;u&&(u.get||u.set)?Object.defineProperty(r,o,u):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}exports.Integrations=c;
},{"@sentry/minimal":"uQ1D","@sentry/hub":"U9M5","./api":"DsIj","./baseclient":"AQrL","./basebackend":"BMjl","./request":"dMBM","./sdk":"Bvms","./transports/noop":"fec3","./integrations":"t1vy"}],"EptK":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.computeStackTrace=u;var e=require("tslib"),n="?",r=/^\s*at (?:(.*?) ?\()?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\/).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i,s=/^\s*(.*?)(?:\((.*?)\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension|capacitor).*?:\/.*?|\[native code\]|[^@]*(?:bundle|\d+\.js))(?::(\d+))?(?::(\d+))?\s*$/i,l=/^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i,t=/(\S+) line (\d+)(?: > eval line \d+)* > eval/i,a=/\((\S*)(?::(\d+))(?::(\d+))\)/,c=/Minified React error #\d+;/i;function u(e){var n=null,r=0;e&&("number"==typeof e.framesToPop?r=e.framesToPop:c.test(e.message)&&(r=1));try{if(n=o(e))return f(n,r)}catch(s){}try{if(n=i(e))return f(n,r)}catch(s){}return{message:m(e),name:e&&e.name,stack:[],failed:!0}}function i(e){if(!e||!e.stack)return null;for(var c,u,i,o=[],f=e.stack.split("\n"),d=0;d<f.length;++d){if(u=r.exec(f[d])){var p=u[2]&&0===u[2].indexOf("native");u[2]&&0===u[2].indexOf("eval")&&(c=a.exec(u[2]))&&(u[2]=c[1],u[3]=c[2],u[4]=c[3]),i={url:u[2]&&0===u[2].indexOf("address at ")?u[2].substr("address at ".length):u[2],func:u[1]||n,args:p?[u[2]]:[],line:u[3]?+u[3]:null,column:u[4]?+u[4]:null}}else if(u=l.exec(f[d]))i={url:u[2],func:u[1]||n,args:[],line:+u[3],column:u[4]?+u[4]:null};else{if(!(u=s.exec(f[d])))continue;u[3]&&u[3].indexOf(" > eval")>-1&&(c=t.exec(u[3]))?(u[1]=u[1]||"eval",u[3]=c[1],u[4]=c[2],u[5]=""):0!==d||u[5]||void 0===e.columnNumber||(o[0].column=e.columnNumber+1),i={url:u[3],func:u[1]||n,args:u[2]?u[2].split(","):[],line:u[4]?+u[4]:null,column:u[5]?+u[5]:null}}!i.func&&i.line&&(i.func=n),o.push(i)}return o.length?{message:m(e),name:e.name,stack:o}:null}function o(e){if(!e||!e.stacktrace)return null;for(var r,s=/ line (\d+).*script (?:in )?(\S+)(?:: in function (\S+))?$/i,l=/ line (\d+), column (\d+)\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\((.*)\))? in (.*):\s*$/i,t=e.stacktrace.split("\n"),a=[],c=0;c<t.length;c+=2){var u=null;(r=s.exec(t[c]))?u={url:r[2],func:r[3],args:[],line:+r[1],column:null}:(r=l.exec(t[c]))&&(u={url:r[6],func:r[3]||r[4],args:r[5]?r[5].split(","):[],line:+r[1],column:+r[2]}),u&&(!u.func&&u.line&&(u.func=n),a.push(u))}return a.length?{message:m(e),name:e.name,stack:a}:null}function f(n,r){try{return(0,e.__assign)((0,e.__assign)({},n),{stack:n.stack.slice(r)})}catch(s){return n}}function m(e){var n=e&&e.message;return n?n.error&&"string"==typeof n.error.message?n.error.message:n:"No error message"}
},{"tslib":"vCxL"}],"kAUL":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.exceptionFromStacktrace=n,exports.eventFromPlainObject=a,exports.eventFromStacktrace=c,exports.prepareFramesForEvent=o;var e=require("@sentry/utils"),r=require("./tracekit"),t=50;function n(e){var r=o(e.stack),t={type:e.name,value:e.message};return r&&r.length&&(t.stacktrace={frames:r}),void 0===t.type&&""===t.value&&(t.value="Unrecoverable error caught"),t}function a(t,n,a){var c={exception:{values:[{type:(0,e.isEvent)(t)?t.constructor.name:a?"UnhandledRejection":"Error",value:"Non-Error "+(a?"promise rejection":"exception")+" captured with keys: "+(0,e.extractExceptionKeysForMessage)(t)}]},extra:{__serialized__:(0,e.normalizeToSize)(t)}};if(n){var i=o((0,r.computeStackTrace)(n).stack);c.stacktrace={frames:i}}return c}function c(e){return{exception:{values:[n(e)]}}}function o(e){if(!e||!e.length)return[];var r=e,n=r[0].func||"",a=r[r.length-1].func||"";return-1===n.indexOf("captureMessage")&&-1===n.indexOf("captureException")||(r=r.slice(1)),-1!==a.indexOf("sentryWrapped")&&(r=r.slice(0,-1)),r.slice(0,t).map(function(e){return{colno:null===e.column?void 0:e.column,filename:e.url||r[0].url,function:e.func||"?",in_app:!0,lineno:null===e.line?void 0:e.line}}).reverse()}
},{"@sentry/utils":"vnUD","./tracekit":"EptK"}],"yGRZ":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.eventFromException=a,exports.eventFromMessage=i,exports.eventFromUnknownInput=c,exports.eventFromString=o;var e=require("@sentry/types"),t=require("@sentry/utils"),r=require("./parsers"),n=require("./tracekit");function a(r,n,a){var i=c(n,a&&a.syntheticException||void 0,{attachStacktrace:r.attachStacktrace});return(0,t.addExceptionMechanism)(i,{handled:!0,type:"generic"}),i.level=e.Severity.Error,a&&a.event_id&&(i.event_id=a.event_id),t.SyncPromise.resolve(i)}function i(r,n,a,i){void 0===a&&(a=e.Severity.Info);var c=o(n,i&&i.syntheticException||void 0,{attachStacktrace:r.attachStacktrace});return c.level=a,i&&i.event_id&&(c.event_id=i.event_id),t.SyncPromise.resolve(c)}function c(e,a,i){var c;if(void 0===i&&(i={}),(0,t.isErrorEvent)(e)&&e.error)return e=e.error,c=(0,r.eventFromStacktrace)((0,n.computeStackTrace)(e));if((0,t.isDOMError)(e)||(0,t.isDOMException)(e)){var s=e,v=s.name||((0,t.isDOMError)(s)?"DOMError":"DOMException"),p=s.message?v+": "+s.message:v;return c=o(p,a,i),(0,t.addExceptionTypeValue)(c,p),c}if((0,t.isError)(e))return c=(0,r.eventFromStacktrace)((0,n.computeStackTrace)(e));if((0,t.isPlainObject)(e)||(0,t.isEvent)(e)){var d=e;return c=(0,r.eventFromPlainObject)(d,a,i.rejection),(0,t.addExceptionMechanism)(c,{synthetic:!0}),c}return c=o(e,a,i),(0,t.addExceptionTypeValue)(c,""+e,void 0),(0,t.addExceptionMechanism)(c,{synthetic:!0}),c}function o(e,t,a){void 0===a&&(a={});var i={message:e};if(a.attachStacktrace&&t){var c=(0,n.computeStackTrace)(t),o=(0,r.prepareFramesForEvent)(c.stack);i.stacktrace={frames:o}}return i}
},{"@sentry/types":"vYhp","@sentry/utils":"vnUD","./parsers":"kAUL","./tracekit":"EptK"}],"TRJV":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BaseTransport=void 0;var t=require("@sentry/core"),e=require("@sentry/utils"),r=function(){function r(r){this.options=r,this._buffer=new e.PromiseBuffer(30),this._api=new t.API(this.options.dsn),this.url=this._api.getStoreEndpointWithUrlEncodedAuth()}return r.prototype.sendEvent=function(t){throw new e.SentryError("Transport Class has to implement `sendEvent` method")},r.prototype.close=function(t){return this._buffer.drain(t)},r}();exports.BaseTransport=r;
},{"@sentry/core":"TZM3","@sentry/utils":"vnUD"}],"HQW2":[function(require,module,exports) {

"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.FetchTransport=void 0;var e=require("tslib"),t=require("@sentry/core"),r=require("@sentry/types"),s=require("@sentry/utils"),i=require("./base"),n=(0,s.getGlobalObject)(),o=function(i){function o(){var e=null!==i&&i.apply(this,arguments)||this;return e._disabledUntil=new Date(Date.now()),e}return(0,e.__extends)(o,i),o.prototype.sendEvent=function(e){var i=this;if(new Date(Date.now())<this._disabledUntil)return Promise.reject({event:e,reason:"Transport locked till "+this._disabledUntil+" due to too many requests.",status:429});var o=(0,t.eventToSentryRequest)(e,this._api),a={body:o.body,method:"POST",referrerPolicy:(0,s.supportsReferrerPolicy)()?"origin":""};return void 0!==this.options.fetchParameters&&Object.assign(a,this.options.fetchParameters),void 0!==this.options.headers&&(a.headers=this.options.headers),this._buffer.add(new s.SyncPromise(function(e,t){n.fetch(o.url,a).then(function(n){var o=r.Status.fromHttpCode(n.status);if(o!==r.Status.Success){if(o===r.Status.RateLimit){var a=Date.now(),u=n.headers.get("Retry-After");i._disabledUntil=new Date(a+(0,s.parseRetryAfterHeader)(a,u)),s.logger.warn("Too many requests, backing off till: "+i._disabledUntil)}t(n)}else e({status:o})}).catch(t)}))},o}(i.BaseTransport);exports.FetchTransport=o;
},{"tslib":"vCxL","@sentry/core":"TZM3","@sentry/types":"vYhp","@sentry/utils":"vnUD","./base":"TRJV"}],"mwwI":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.XHRTransport=void 0;var e=require("tslib"),t=require("@sentry/core"),r=require("@sentry/types"),s=require("@sentry/utils"),n=require("./base"),a=function(n){function a(){var e=null!==n&&n.apply(this,arguments)||this;return e._disabledUntil=new Date(Date.now()),e}return(0,e.__extends)(a,n),a.prototype.sendEvent=function(e){var n=this;if(new Date(Date.now())<this._disabledUntil)return Promise.reject({event:e,reason:"Transport locked till "+this._disabledUntil+" due to too many requests.",status:429});var a=(0,t.eventToSentryRequest)(e,this._api);return this._buffer.add(new s.SyncPromise(function(e,t){var i=new XMLHttpRequest;for(var o in i.onreadystatechange=function(){if(4===i.readyState){var a=r.Status.fromHttpCode(i.status);if(a!==r.Status.Success){if(a===r.Status.RateLimit){var o=Date.now(),u=i.getResponseHeader("Retry-After");n._disabledUntil=new Date(o+(0,s.parseRetryAfterHeader)(o,u)),s.logger.warn("Too many requests, backing off till: "+n._disabledUntil)}t(i)}else e({status:a})}},i.open("POST",a.url),n.options.headers)n.options.headers.hasOwnProperty(o)&&i.setRequestHeader(o,n.options.headers[o]);i.send(a.body)}))},a}(n.BaseTransport);exports.XHRTransport=a;
},{"tslib":"vCxL","@sentry/core":"TZM3","@sentry/types":"vYhp","@sentry/utils":"vnUD","./base":"TRJV"}],"iexI":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"BaseTransport",{enumerable:!0,get:function(){return e.BaseTransport}}),Object.defineProperty(exports,"FetchTransport",{enumerable:!0,get:function(){return r.FetchTransport}}),Object.defineProperty(exports,"XHRTransport",{enumerable:!0,get:function(){return t.XHRTransport}});var e=require("./base"),r=require("./fetch"),t=require("./xhr");
},{"./base":"TRJV","./fetch":"HQW2","./xhr":"mwwI"}],"V30D":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BrowserBackend=void 0;var t=require("tslib"),e=require("@sentry/core"),r=require("@sentry/types"),s=require("@sentry/utils"),n=require("./eventbuilder"),o=require("./transports"),i=function(e){function i(){return null!==e&&e.apply(this,arguments)||this}return(0,t.__extends)(i,e),i.prototype.eventFromException=function(t,e){return(0,n.eventFromException)(this._options,t,e)},i.prototype.eventFromMessage=function(t,e,s){return void 0===e&&(e=r.Severity.Info),(0,n.eventFromMessage)(this._options,t,e,s)},i.prototype._setupTransport=function(){if(!this._options.dsn)return e.prototype._setupTransport.call(this);var r=(0,t.__assign)((0,t.__assign)({},this._options.transportOptions),{dsn:this._options.dsn});return this._options.transport?new this._options.transport(r):(0,s.supportsFetch)()?new o.FetchTransport(r):new o.XHRTransport(r)},i}(e.BaseBackend);exports.BrowserBackend=i;
},{"tslib":"vCxL","@sentry/core":"TZM3","@sentry/types":"vYhp","@sentry/utils":"vnUD","./eventbuilder":"yGRZ","./transports":"iexI"}],"PuX9":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.shouldIgnoreOnError=o,exports.ignoreNextOnError=i,exports.wrap=a,exports.injectReportDialog=p;var e=require("tslib"),r=require("@sentry/core"),t=require("@sentry/utils"),n=0;function o(){return n>0}function i(){n+=1,setTimeout(function(){n-=1})}function a(n,o,p){if(void 0===o&&(o={}),"function"!=typeof n)return n;try{if(n.__sentry__)return n;if(n.__sentry_wrapped__)return n.__sentry_wrapped__}catch(u){return n}var s=function(){var s=Array.prototype.slice.call(arguments);try{p&&"function"==typeof p&&p.apply(this,arguments);var c=s.map(function(e){return a(e,o)});return n.handleEvent?n.handleEvent.apply(this,c):n.apply(this,c)}catch(u){throw i(),(0,r.withScope)(function(n){n.addEventProcessor(function(r){var n=(0,e.__assign)({},r);return o.mechanism&&((0,t.addExceptionTypeValue)(n,void 0,void 0),(0,t.addExceptionMechanism)(n,o.mechanism)),n.extra=(0,e.__assign)((0,e.__assign)({},n.extra),{arguments:s}),n}),(0,r.captureException)(u)}),u}};try{for(var c in n)Object.prototype.hasOwnProperty.call(n,c)&&(s[c]=n[c])}catch(l){}n.prototype=n.prototype||{},s.prototype=n.prototype,Object.defineProperty(n,"__sentry_wrapped__",{enumerable:!1,value:s}),Object.defineProperties(s,{__sentry__:{enumerable:!1,value:!0},__sentry_original__:{enumerable:!1,value:n}});try{Object.getOwnPropertyDescriptor(s,"name").configurable&&Object.defineProperty(s,"name",{get:function(){return n.name}})}catch(l){}return s}function p(e){if(void 0===e&&(e={}),e.eventId)if(e.dsn){var n=document.createElement("script");n.async=!0,n.src=new r.API(e.dsn).getReportDialogEndpoint(e),e.onLoad&&(n.onload=e.onLoad),(document.head||document.body).appendChild(n)}else t.logger.error("Missing dsn option in showReportDialog call");else t.logger.error("Missing eventId option in showReportDialog call")}
},{"tslib":"vCxL","@sentry/core":"TZM3","@sentry/utils":"vnUD"}],"l5aE":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.GlobalHandlers=void 0;var e=require("tslib"),n=require("@sentry/core"),t=require("@sentry/types"),r=require("@sentry/utils"),a=require("../eventbuilder"),o=require("../helpers"),i=function(){function i(n){this.name=i.id,this._onErrorHandlerInstalled=!1,this._onUnhandledRejectionHandlerInstalled=!1,this._options=(0,e.__assign)({onerror:!0,onunhandledrejection:!0},n)}return i.prototype.setupOnce=function(){Error.stackTraceLimit=50,this._options.onerror&&(r.logger.log("Global Handler attached: onerror"),this._installGlobalOnErrorHandler()),this._options.onunhandledrejection&&(r.logger.log("Global Handler attached: onunhandledrejection"),this._installGlobalOnUnhandledRejectionHandler())},i.prototype._installGlobalOnErrorHandler=function(){var e=this;this._onErrorHandlerInstalled||((0,r.addInstrumentationHandler)({callback:function(t){var l=t.error,c=(0,n.getCurrentHub)(),s=c.getIntegration(i),d=l&&!0===l.__sentry_own_request__;if(s&&!(0,o.shouldIgnoreOnError)()&&!d){var u=c.getClient(),p=(0,r.isPrimitive)(l)?e._eventFromIncompleteOnError(t.msg,t.url,t.line,t.column):e._enhanceEventWithInitialFrame((0,a.eventFromUnknownInput)(l,void 0,{attachStacktrace:u&&u.getOptions().attachStacktrace,rejection:!1}),t.url,t.line,t.column);(0,r.addExceptionMechanism)(p,{handled:!1,type:"onerror"}),c.captureEvent(p,{originalException:l})}},type:"error"}),this._onErrorHandlerInstalled=!0)},i.prototype._installGlobalOnUnhandledRejectionHandler=function(){var e=this;this._onUnhandledRejectionHandlerInstalled||((0,r.addInstrumentationHandler)({callback:function(l){var c=l;try{"reason"in l?c=l.reason:"detail"in l&&"reason"in l.detail&&(c=l.detail.reason)}catch(v){}var s=(0,n.getCurrentHub)(),d=s.getIntegration(i),u=c&&!0===c.__sentry_own_request__;if(!d||(0,o.shouldIgnoreOnError)()||u)return!0;var p=s.getClient(),h=(0,r.isPrimitive)(c)?e._eventFromIncompleteRejection(c):(0,a.eventFromUnknownInput)(c,void 0,{attachStacktrace:p&&p.getOptions().attachStacktrace,rejection:!0});h.level=t.Severity.Error,(0,r.addExceptionMechanism)(h,{handled:!1,type:"onunhandledrejection"}),s.captureEvent(h,{originalException:c})},type:"unhandledrejection"}),this._onUnhandledRejectionHandlerInstalled=!0)},i.prototype._eventFromIncompleteOnError=function(e,n,t,a){var o,i=(0,r.isErrorEvent)(e)?e.message:e;if((0,r.isString)(i)){var l=i.match(/^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i);l&&(o=l[1],i=l[2])}var c={exception:{values:[{type:o||"Error",value:i}]}};return this._enhanceEventWithInitialFrame(c,n,t,a)},i.prototype._eventFromIncompleteRejection=function(e){return{exception:{values:[{type:"UnhandledRejection",value:"Non-Error promise rejection captured with value: "+e}]}}},i.prototype._enhanceEventWithInitialFrame=function(e,n,t,a){e.exception=e.exception||{},e.exception.values=e.exception.values||[],e.exception.values[0]=e.exception.values[0]||{},e.exception.values[0].stacktrace=e.exception.values[0].stacktrace||{},e.exception.values[0].stacktrace.frames=e.exception.values[0].stacktrace.frames||[];var o=isNaN(parseInt(a,10))?void 0:a,i=isNaN(parseInt(t,10))?void 0:t,l=(0,r.isString)(n)&&n.length>0?n:(0,r.getLocationHref)();return 0===e.exception.values[0].stacktrace.frames.length&&e.exception.values[0].stacktrace.frames.push({colno:o,filename:l,function:"?",in_app:!0,lineno:i}),e},i.id="GlobalHandlers",i}();exports.GlobalHandlers=i;
},{"tslib":"vCxL","@sentry/core":"TZM3","@sentry/types":"vYhp","@sentry/utils":"vnUD","../eventbuilder":"yGRZ","../helpers":"PuX9"}],"Q7DM":[function(require,module,exports) {
var global = arguments[3];
var t=arguments[3];Object.defineProperty(exports,"__esModule",{value:!0}),exports.TryCatch=void 0;var e=require("tslib"),n=require("@sentry/utils"),r=require("../helpers"),i=["EventTarget","Window","Node","ApplicationCache","AudioTrackList","ChannelMergerNode","CryptoOperation","EventSource","FileReader","HTMLUnknownElement","IDBDatabase","IDBRequest","IDBTransaction","KeyOperation","MediaController","MessagePort","ModalWindow","Notification","SVGElementInstance","Screen","TextTrack","TextTrackCue","TextTrackList","WebSocket","WebSocketWorker","Worker","XMLHttpRequest","XMLHttpRequestEventTarget","XMLHttpRequestUpload"],a=function(){function t(n){this.name=t.id,this._options=(0,e.__assign)({XMLHttpRequest:!0,eventTarget:!0,requestAnimationFrame:!0,setInterval:!0,setTimeout:!0},n)}return t.prototype.setupOnce=function(){var t=(0,n.getGlobalObject)();(this._options.setTimeout&&(0,n.fill)(t,"setTimeout",this._wrapTimeFunction.bind(this)),this._options.setInterval&&(0,n.fill)(t,"setInterval",this._wrapTimeFunction.bind(this)),this._options.requestAnimationFrame&&(0,n.fill)(t,"requestAnimationFrame",this._wrapRAF.bind(this)),this._options.XMLHttpRequest&&"XMLHttpRequest"in t&&(0,n.fill)(XMLHttpRequest.prototype,"send",this._wrapXHR.bind(this)),this._options.eventTarget)&&(Array.isArray(this._options.eventTarget)?this._options.eventTarget:i).forEach(this._wrapEventTarget.bind(this))},t.prototype._wrapTimeFunction=function(t){return function(){for(var e=[],i=0;i<arguments.length;i++)e[i]=arguments[i];var a=e[0];return e[0]=(0,r.wrap)(a,{mechanism:{data:{function:(0,n.getFunctionName)(t)},handled:!0,type:"instrument"}}),t.apply(this,e)}},t.prototype._wrapRAF=function(t){return function(e){return t.call(this,(0,r.wrap)(e,{mechanism:{data:{function:"requestAnimationFrame",handler:(0,n.getFunctionName)(t)},handled:!0,type:"instrument"}}))}},t.prototype._wrapEventTarget=function(t){var e=(0,n.getGlobalObject)(),i=e[t]&&e[t].prototype;i&&i.hasOwnProperty&&i.hasOwnProperty("addEventListener")&&((0,n.fill)(i,"addEventListener",function(e){return function(i,a,o){try{"function"==typeof a.handleEvent&&(a.handleEvent=(0,r.wrap)(a.handleEvent.bind(a),{mechanism:{data:{function:"handleEvent",handler:(0,n.getFunctionName)(a),target:t},handled:!0,type:"instrument"}}))}catch(s){}return e.call(this,i,(0,r.wrap)(a,{mechanism:{data:{function:"addEventListener",handler:(0,n.getFunctionName)(a),target:t},handled:!0,type:"instrument"}}),o)}}),(0,n.fill)(i,"removeEventListener",function(t){return function(e,n,r){try{t.call(this,e,n.__sentry_wrapped__,r)}catch(i){}return t.call(this,e,n,r)}}))},t.prototype._wrapXHR=function(t){return function(){for(var e=[],i=0;i<arguments.length;i++)e[i]=arguments[i];var a=this;return["onload","onerror","onprogress","onreadystatechange"].forEach(function(t){t in a&&"function"==typeof a[t]&&(0,n.fill)(a,t,function(e){var i={mechanism:{data:{function:t,handler:(0,n.getFunctionName)(e)},handled:!0,type:"instrument"}};return e.__sentry_original__&&(i.mechanism.data.handler=(0,n.getFunctionName)(e.__sentry_original__)),(0,r.wrap)(e,i)})}),t.apply(this,e)}},t.id="TryCatch",t}();exports.TryCatch=a;
},{"tslib":"vCxL","@sentry/utils":"vnUD","../helpers":"PuX9"}],"YFxN":[function(require,module,exports) {
var global = arguments[3];
var e=arguments[3];Object.defineProperty(exports,"__esModule",{value:!0}),exports.Breadcrumbs=void 0;var t=require("tslib"),r=require("@sentry/core"),a=require("@sentry/types"),n=require("@sentry/utils"),o=function(){function e(r){this.name=e.id,this._options=(0,t.__assign)({console:!0,dom:!0,fetch:!0,history:!0,sentry:!0,xhr:!0},r)}return e.prototype.addSentryBreadcrumb=function(e){this._options.sentry&&(0,r.getCurrentHub)().addBreadcrumb({category:"sentry."+("transaction"===e.type?"transaction":"event"),event_id:e.event_id,level:e.level,message:(0,n.getEventDescription)(e)},{event:e})},e.prototype.setupOnce=function(){var e=this;this._options.console&&(0,n.addInstrumentationHandler)({callback:function(){for(var r=[],a=0;a<arguments.length;a++)r[a]=arguments[a];e._consoleBreadcrumb.apply(e,(0,t.__spread)(r))},type:"console"}),this._options.dom&&(0,n.addInstrumentationHandler)({callback:function(){for(var r=[],a=0;a<arguments.length;a++)r[a]=arguments[a];e._domBreadcrumb.apply(e,(0,t.__spread)(r))},type:"dom"}),this._options.xhr&&(0,n.addInstrumentationHandler)({callback:function(){for(var r=[],a=0;a<arguments.length;a++)r[a]=arguments[a];e._xhrBreadcrumb.apply(e,(0,t.__spread)(r))},type:"xhr"}),this._options.fetch&&(0,n.addInstrumentationHandler)({callback:function(){for(var r=[],a=0;a<arguments.length;a++)r[a]=arguments[a];e._fetchBreadcrumb.apply(e,(0,t.__spread)(r))},type:"fetch"}),this._options.history&&(0,n.addInstrumentationHandler)({callback:function(){for(var r=[],a=0;a<arguments.length;a++)r[a]=arguments[a];e._historyBreadcrumb.apply(e,(0,t.__spread)(r))},type:"history"})},e.prototype._consoleBreadcrumb=function(e){var t={category:"console",data:{arguments:e.args,logger:"console"},level:a.Severity.fromString(e.level),message:(0,n.safeJoin)(e.args," ")};if("assert"===e.level){if(!1!==e.args[0])return;t.message="Assertion failed: "+((0,n.safeJoin)(e.args.slice(1)," ")||"console.assert"),t.data.arguments=e.args.slice(1)}(0,r.getCurrentHub)().addBreadcrumb(t,{input:e.args,level:e.level})},e.prototype._domBreadcrumb=function(e){var t;try{t=e.event.target?(0,n.htmlTreeAsString)(e.event.target):(0,n.htmlTreeAsString)(e.event)}catch(a){t="<unknown>"}0!==t.length&&(0,r.getCurrentHub)().addBreadcrumb({category:"ui."+e.name,message:t},{event:e.event,name:e.name})},e.prototype._xhrBreadcrumb=function(e){if(e.endTimestamp){if(e.xhr.__sentry_own_request__)return;(0,r.getCurrentHub)().addBreadcrumb({category:"xhr",data:e.xhr.__sentry_xhr__,type:"http"},{xhr:e.xhr})}else;},e.prototype._fetchBreadcrumb=function(e){e.endTimestamp&&(e.fetchData.url.match(/sentry_key/)&&"POST"===e.fetchData.method||(e.error?(0,r.getCurrentHub)().addBreadcrumb({category:"fetch",data:e.fetchData,level:a.Severity.Error,type:"http"},{data:e.error,input:e.args}):(0,r.getCurrentHub)().addBreadcrumb({category:"fetch",data:(0,t.__assign)((0,t.__assign)({},e.fetchData),{status_code:e.response.status}),type:"http"},{input:e.args,response:e.response})))},e.prototype._historyBreadcrumb=function(e){var t=(0,n.getGlobalObject)(),a=e.from,o=e.to,s=(0,n.parseUrl)(t.location.href),c=(0,n.parseUrl)(a),i=(0,n.parseUrl)(o);c.path||(c=s),s.protocol===i.protocol&&s.host===i.host&&(o=i.relative),s.protocol===c.protocol&&s.host===c.host&&(a=c.relative),(0,r.getCurrentHub)().addBreadcrumb({category:"navigation",data:{from:a,to:o}})},e.id="Breadcrumbs",e}();exports.Breadcrumbs=o;
},{"tslib":"vCxL","@sentry/core":"TZM3","@sentry/types":"vYhp","@sentry/utils":"vnUD"}],"KquI":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LinkedErrors=void 0;var e=require("tslib"),r=require("@sentry/core"),t=require("@sentry/utils"),i=require("../parsers"),n=require("../tracekit"),o="cause",s=5,a=function(){function a(e){void 0===e&&(e={}),this.name=a.id,this._key=e.key||o,this._limit=e.limit||s}return a.prototype.setupOnce=function(){(0,r.addGlobalEventProcessor)(function(e,t){var i=(0,r.getCurrentHub)().getIntegration(a);return i?i._handler(e,t):e})},a.prototype._handler=function(r,i){if(!(r.exception&&r.exception.values&&i&&(0,t.isInstanceOf)(i.originalException,Error)))return r;var n=this._walkErrorTree(i.originalException,this._key);return r.exception.values=(0,e.__spread)(n,r.exception.values),r},a.prototype._walkErrorTree=function(r,o,s){if(void 0===s&&(s=[]),!(0,t.isInstanceOf)(r[o],Error)||s.length+1>=this._limit)return s;var a=(0,n.computeStackTrace)(r[o]),u=(0,i.exceptionFromStacktrace)(a);return this._walkErrorTree(r[o],o,(0,e.__spread)([u],s))},a.id="LinkedErrors",a}();exports.LinkedErrors=a;
},{"tslib":"vCxL","@sentry/core":"TZM3","@sentry/utils":"vnUD","../parsers":"kAUL","../tracekit":"EptK"}],"wEu1":[function(require,module,exports) {

"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.UserAgent=void 0;var e=require("tslib"),r=require("@sentry/core"),t=require("@sentry/utils"),n=(0,t.getGlobalObject)(),s=function(){function t(){this.name=t.id}return t.prototype.setupOnce=function(){(0,r.addGlobalEventProcessor)(function(s){if((0,r.getCurrentHub)().getIntegration(t)){if(!n.navigator||!n.location)return s;var i=s.request||{};return i.url=i.url||n.location.href,i.headers=i.headers||{},i.headers["User-Agent"]=n.navigator.userAgent,(0,e.__assign)((0,e.__assign)({},s),{request:i})}return s})},t.id="UserAgent",t}();exports.UserAgent=s;
},{"tslib":"vCxL","@sentry/core":"TZM3","@sentry/utils":"vnUD"}],"vue0":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"GlobalHandlers",{enumerable:!0,get:function(){return e.GlobalHandlers}}),Object.defineProperty(exports,"TryCatch",{enumerable:!0,get:function(){return r.TryCatch}}),Object.defineProperty(exports,"Breadcrumbs",{enumerable:!0,get:function(){return t.Breadcrumbs}}),Object.defineProperty(exports,"LinkedErrors",{enumerable:!0,get:function(){return n.LinkedErrors}}),Object.defineProperty(exports,"UserAgent",{enumerable:!0,get:function(){return u.UserAgent}});var e=require("./globalhandlers"),r=require("./trycatch"),t=require("./breadcrumbs"),n=require("./linkederrors"),u=require("./useragent");
},{"./globalhandlers":"l5aE","./trycatch":"Q7DM","./breadcrumbs":"YFxN","./linkederrors":"KquI","./useragent":"wEu1"}],"Qr3a":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SDK_VERSION=exports.SDK_NAME=void 0;var e="sentry.javascript.browser";exports.SDK_NAME=e;var r="5.22.3";exports.SDK_VERSION=r;
},{}],"s6nm":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BrowserClient=void 0;var e=require("tslib"),r=require("@sentry/core"),t=require("@sentry/utils"),s=require("./backend"),n=require("./helpers"),i=require("./integrations"),o=require("./version"),a=function(r){function a(e){return void 0===e&&(e={}),r.call(this,s.BrowserBackend,e)||this}return(0,e.__extends)(a,r),a.prototype.showReportDialog=function(r){void 0===r&&(r={}),(0,t.getGlobalObject)().document&&(this._isEnabled()?(0,n.injectReportDialog)((0,e.__assign)((0,e.__assign)({},r),{dsn:r.dsn||this.getDsn()})):t.logger.error("Trying to call showReportDialog with Sentry Client disabled"))},a.prototype._prepareEvent=function(t,s,n){return t.platform=t.platform||"javascript",t.sdk=(0,e.__assign)((0,e.__assign)({},t.sdk),{name:o.SDK_NAME,packages:(0,e.__spread)(t.sdk&&t.sdk.packages||[],[{name:"npm:@sentry/browser",version:o.SDK_VERSION}]),version:o.SDK_VERSION}),r.prototype._prepareEvent.call(this,t,s,n)},a.prototype._sendEvent=function(e){var t=this.getIntegration(i.Breadcrumbs);t&&t.addSentryBreadcrumb(e),r.prototype._sendEvent.call(this,e)},a}(r.BaseClient);exports.BrowserClient=a;
},{"tslib":"vCxL","@sentry/core":"TZM3","@sentry/utils":"vnUD","./backend":"V30D","./helpers":"PuX9","./integrations":"vue0","./version":"Qr3a"}],"nKpN":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.init=s,exports.showReportDialog=u,exports.lastEventId=a,exports.forceLoad=l,exports.onLoad=d,exports.flush=c,exports.close=g,exports.wrap=f,exports.defaultIntegrations=void 0;var e=require("@sentry/core"),t=require("@sentry/utils"),r=require("./client"),n=require("./helpers"),o=require("./integrations"),i=[new e.Integrations.InboundFilters,new e.Integrations.FunctionToString,new o.TryCatch,new o.Breadcrumbs,new o.GlobalHandlers,new o.LinkedErrors,new o.UserAgent];function s(n){if(void 0===n&&(n={}),void 0===n.defaultIntegrations&&(n.defaultIntegrations=i),void 0===n.release){var o=(0,t.getGlobalObject)();o.SENTRY_RELEASE&&o.SENTRY_RELEASE.id&&(n.release=o.SENTRY_RELEASE.id)}(0,e.initAndBind)(r.BrowserClient,n)}function u(t){void 0===t&&(t={}),t.eventId||(t.eventId=(0,e.getCurrentHub)().lastEventId());var r=(0,e.getCurrentHub)().getClient();r&&r.showReportDialog(t)}function a(){return(0,e.getCurrentHub)().lastEventId()}function l(){}function d(e){e()}function c(r){var n=(0,e.getCurrentHub)().getClient();return n?n.flush(r):t.SyncPromise.reject(!1)}function g(r){var n=(0,e.getCurrentHub)().getClient();return n?n.close(r):t.SyncPromise.reject(!1)}function f(e){return(0,n.wrap)(e)()}exports.defaultIntegrations=i;
},{"@sentry/core":"TZM3","@sentry/utils":"vnUD","./client":"s6nm","./helpers":"PuX9","./integrations":"vue0"}],"QNOP":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"Severity",{enumerable:!0,get:function(){return e.Severity}}),Object.defineProperty(exports,"Status",{enumerable:!0,get:function(){return e.Status}}),Object.defineProperty(exports,"addGlobalEventProcessor",{enumerable:!0,get:function(){return t.addGlobalEventProcessor}}),Object.defineProperty(exports,"addBreadcrumb",{enumerable:!0,get:function(){return t.addBreadcrumb}}),Object.defineProperty(exports,"captureException",{enumerable:!0,get:function(){return t.captureException}}),Object.defineProperty(exports,"captureEvent",{enumerable:!0,get:function(){return t.captureEvent}}),Object.defineProperty(exports,"captureMessage",{enumerable:!0,get:function(){return t.captureMessage}}),Object.defineProperty(exports,"configureScope",{enumerable:!0,get:function(){return t.configureScope}}),Object.defineProperty(exports,"getHubFromCarrier",{enumerable:!0,get:function(){return t.getHubFromCarrier}}),Object.defineProperty(exports,"getCurrentHub",{enumerable:!0,get:function(){return t.getCurrentHub}}),Object.defineProperty(exports,"Hub",{enumerable:!0,get:function(){return t.Hub}}),Object.defineProperty(exports,"makeMain",{enumerable:!0,get:function(){return t.makeMain}}),Object.defineProperty(exports,"Scope",{enumerable:!0,get:function(){return t.Scope}}),Object.defineProperty(exports,"startTransaction",{enumerable:!0,get:function(){return t.startTransaction}}),Object.defineProperty(exports,"setContext",{enumerable:!0,get:function(){return t.setContext}}),Object.defineProperty(exports,"setExtra",{enumerable:!0,get:function(){return t.setExtra}}),Object.defineProperty(exports,"setExtras",{enumerable:!0,get:function(){return t.setExtras}}),Object.defineProperty(exports,"setTag",{enumerable:!0,get:function(){return t.setTag}}),Object.defineProperty(exports,"setTags",{enumerable:!0,get:function(){return t.setTags}}),Object.defineProperty(exports,"setUser",{enumerable:!0,get:function(){return t.setUser}}),Object.defineProperty(exports,"withScope",{enumerable:!0,get:function(){return t.withScope}}),Object.defineProperty(exports,"BrowserClient",{enumerable:!0,get:function(){return r.BrowserClient}}),Object.defineProperty(exports,"injectReportDialog",{enumerable:!0,get:function(){return n.injectReportDialog}}),Object.defineProperty(exports,"eventFromException",{enumerable:!0,get:function(){return o.eventFromException}}),Object.defineProperty(exports,"eventFromMessage",{enumerable:!0,get:function(){return o.eventFromMessage}}),Object.defineProperty(exports,"defaultIntegrations",{enumerable:!0,get:function(){return u.defaultIntegrations}}),Object.defineProperty(exports,"forceLoad",{enumerable:!0,get:function(){return u.forceLoad}}),Object.defineProperty(exports,"init",{enumerable:!0,get:function(){return u.init}}),Object.defineProperty(exports,"lastEventId",{enumerable:!0,get:function(){return u.lastEventId}}),Object.defineProperty(exports,"onLoad",{enumerable:!0,get:function(){return u.onLoad}}),Object.defineProperty(exports,"showReportDialog",{enumerable:!0,get:function(){return u.showReportDialog}}),Object.defineProperty(exports,"flush",{enumerable:!0,get:function(){return u.flush}}),Object.defineProperty(exports,"close",{enumerable:!0,get:function(){return u.close}}),Object.defineProperty(exports,"wrap",{enumerable:!0,get:function(){return u.wrap}}),Object.defineProperty(exports,"SDK_NAME",{enumerable:!0,get:function(){return i.SDK_NAME}}),Object.defineProperty(exports,"SDK_VERSION",{enumerable:!0,get:function(){return i.SDK_VERSION}});var e=require("@sentry/types"),t=require("@sentry/core"),r=require("./client"),n=require("./helpers"),o=require("./eventbuilder"),u=require("./sdk"),i=require("./version");
},{"@sentry/types":"vYhp","@sentry/core":"TZM3","./client":"s6nm","./helpers":"PuX9","./eventbuilder":"yGRZ","./sdk":"nKpN","./version":"Qr3a"}],"cUe8":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e={Integrations:!0,Transports:!0};exports.Transports=exports.Integrations=void 0;var r=require("tslib"),t=require("./exports");Object.keys(t).forEach(function(r){"default"!==r&&"__esModule"!==r&&(Object.prototype.hasOwnProperty.call(e,r)||Object.defineProperty(exports,r,{enumerable:!0,get:function(){return t[r]}}))});var n=require("@sentry/core"),o=require("@sentry/utils"),s=u(require("./integrations")),a=u(require("./transports"));function i(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return i=function(){return e},e}function u(e){if(e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var r=i();if(r&&r.has(e))return r.get(e);var t={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var s=n?Object.getOwnPropertyDescriptor(e,o):null;s&&(s.get||s.set)?Object.defineProperty(t,o,s):t[o]=e[o]}return t.default=e,r&&r.set(e,t),t}exports.Transports=a;var p={},c=(0,o.getGlobalObject)();c.Sentry&&c.Sentry.Integrations&&(p=c.Sentry.Integrations);var f=(0,r.__assign)((0,r.__assign)((0,r.__assign)({},p),n.Integrations),s);exports.Integrations=f;
},{"tslib":"vCxL","./exports":"QNOP","@sentry/core":"TZM3","@sentry/utils":"vnUD","./integrations":"vue0","./transports":"iexI"}],"shls":[function(require,module,exports) {
"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function _typeof(e){return typeof e}:function _typeof(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var o=0;o<t.length;o++){var n=t[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,o){return t&&_defineProperties(e.prototype,t),o&&_defineProperties(e,o),e}var e=this&&this.__createBinding||(Object.create?function(e,t,o,n){void 0===n&&(n=o),Object.defineProperty(e,n,{enumerable:!0,get:function get(){return t[o]}})}:function(e,t,o,n){void 0===n&&(n=o),e[n]=t[o]}),t=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(o){if(o&&o.__esModule)return o;var n={};if(null!=o)for(var r in o)"default"!==r&&Object.hasOwnProperty.call(o,r)&&e(n,o,r);return t(n,o),n};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Logger=void 0;var n=o(require("@sentry/browser")),r=function(){function Logger(e){var t=this,o=e.elixirChat;_classCallCheck(this,Logger),this.isDebug=!1,this.isSentryInitialized=!1,this.scopeClient={},this.logInfo=function(e,o){t.isDebug&&t.writeConsoleMessage(e,o)},this.logError=function(e,o){t.isDebug&&(t.sendErrorToSentry(e,o),t.writeConsoleMessage(e,o,"#EB3223"))},this.logEvent=function(e,o){if(t.isDebug){var n=/_ERROR$/i.test(e);n&&t.sendErrorToSentry(e,o),t.writeConsoleMessage(e,o,n?"#EBA4A7":"#5EE9EB")}},this.setClient=function(e){if(t.scopeClient=e,t.isSentryInitialized){var o=[e.firstName,e.lastName].filter(function(e){return e}).join(" ");n.configureScope(function(t){t.setUser({id:e.id,username:o})})}};var r=o.config,i=r.sentryUrl,s=r.apiUrl,a=r.debug;if(this.elixirChat=o,this.isDebug=a,this.nodeEnv="production",i&&a&&"development"!==this.nodeEnv){var c=new URL(s).host;n.init({dsn:i}),n.configureScope(function(e){e.setExtra("hostname",c)}),this.isSentryInitialized=!0}}return _createClass(Logger,[{key:"sendErrorToSentry",value:function sendErrorToSentry(e,t){this.isSentryInitialized&&n.withScope(function(o){o.setExtras(t),n.captureMessage(e)})}},{key:"getTimestamp",value:function getTimestamp(){var e=new Date;return[e.getHours().toString().padStart(2,"0"),e.getMinutes().toString().padStart(2,"0"),e.getSeconds().toString().padStart(2,"0")].join(":")}},{key:"writeConsoleMessage",value:function writeConsoleMessage(e,t){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",n="font-weight: bold; color: ".concat(o,";"),r="font-weight: normal; text-decoration: underline; color: ".concat(o,";"),i="font: 10px Arial; padding-left: 3px; color: ".concat(o,";");if(console.groupCollapsed("%c".concat(this.getTimestamp()," ").concat(e," %cInfo%c▾"),n,r,i),!t||"object"!==_typeof(t)||t instanceof Array)console.log("%c\nData:\n","font-weight: bold;",t);else for(var s in t)console.log("%c".concat(s,":\n"),"font-weight: bold;",t[s],"\n");console.log("%c\nStacktrace:","font-weight: bold;"),console.trace(),console.groupEnd()}}]),Logger}();exports.Logger=r;
},{"@sentry/browser":"cUe8"}],"zWqG":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.FONTS_EXTRACTED=exports.IMAGE_PREVIEW_CLOSE=exports.IMAGE_PREVIEW_OPEN=exports.TEXTAREA_VERTICAL_RESIZE=exports.REPLY_MESSAGE=exports.SCREENSHOT_REQUEST_ERROR=exports.SCREENSHOT_REQUEST_SUCCESS=exports.WIDGET_DATA_SET=exports.WIDGET_NAVIGATE_TO=exports.WIDGET_MUTE_TOGGLE=exports.WIDGET_POPUP_CLOSE=exports.WIDGET_POPUP_OPEN=exports.WIDGET_POPUP_TOGGLE=exports.WIDGET_IFRAME_READY=void 0,exports.WIDGET_IFRAME_READY="WIDGET_IFRAME_READY",exports.WIDGET_POPUP_TOGGLE="WIDGET_POPUP_TOGGLE",exports.WIDGET_POPUP_OPEN="WIDGET_POPUP_OPEN",exports.WIDGET_POPUP_CLOSE="WIDGET_POPUP_CLOSE",exports.WIDGET_MUTE_TOGGLE="WIDGET_MUTE_TOGGLE",exports.WIDGET_NAVIGATE_TO="WIDGET_NAVIGATE_TO",exports.WIDGET_DATA_SET="WIDGET_DATA_SET",exports.SCREENSHOT_REQUEST_SUCCESS="SCREENSHOT_REQUEST_SUCCESS",exports.SCREENSHOT_REQUEST_ERROR="SCREENSHOT_REQUEST_ERROR",exports.REPLY_MESSAGE="REPLY_MESSAGE",exports.TEXTAREA_VERTICAL_RESIZE="TEXTAREA_VERTICAL_RESIZE",exports.IMAGE_PREVIEW_OPEN="IMAGE_PREVIEW_OPEN",exports.IMAGE_PREVIEW_CLOSE="IMAGE_PREVIEW_CLOSE",exports.FONTS_EXTRACTED="PARENT_WINDOW_FONTS_EXTRACTED";
},{}],"CLsL":[function(require,module,exports) {
"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var a=t[i];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),e}Object.defineProperty(exports,"__esModule",{value:!0}),exports.getScreenshotCompatibilityFallback=exports.ScreenshotTaker=void 0;var e=require("../utilsCommon"),t=require("../widget/ElixirChatWidgetEventTypes"),i=function(){function ScreenshotTaker(e){var i=this,a=e.elixirChat;_classCallCheck(this,ScreenshotTaker),this.mediaOptions={video:{width:screen.width*window.devicePixelRatio,height:screen.height*window.devicePixelRatio}},this.width=0,this.height=0,this.takeScreenshot=function(){var e=i.elixirChat.triggerEvent;return new Promise(function(a,r){i.getMediaStream().then(function(r){i.stream=r,i.video.srcObject=i.stream,i.video.oncanplay=function(){i.setVideoCanvasSize(),setTimeout(function(){var r=i.captureVideoFrame();i.stopMediaStream(),e(t.SCREENSHOT_REQUEST_SUCCESS,r),a(r)},500)},i.video.play()}).catch(function(i){e(t.SCREENSHOT_REQUEST_ERROR,i),r(i)})})},this.elixirChat=a,this.initialize()}return _createClass(ScreenshotTaker,[{key:"initialize",value:function initialize(){this.width=screen.width*window.devicePixelRatio,this.canvas=document.createElement("canvas"),this.video=document.createElement("video")}},{key:"setVideoCanvasSize",value:function setVideoCanvasSize(){var e=this.video,t=this.canvas,i=this.width;this.height=e.videoHeight/(e.videoWidth/i),e.width=i,e.height=this.height,t.width=i,t.height=this.height}},{key:"captureVideoFrame",value:function captureVideoFrame(){var e=this.canvas,t=this.width,i=this.height,a=this.video;e.getContext("2d").drawImage(a,0,0,t,i);var r=e.toDataURL("image/png");return{dataUrl:r,file:this.base64ToFile(r)}}},{key:"stopMediaStream",value:function stopMediaStream(){this.stream.getTracks()[0].stop()}},{key:"getMediaStream",value:function getMediaStream(){var e=this;return new Promise(function(t,i){try{navigator.mediaDevices.getDisplayMedia(e.mediaOptions).then(t).catch(i)}catch(a){i({message:"MediaDevices.getDisplayMedia is not supported in this browser"})}})}},{key:"base64ToFile",value:function base64ToFile(e){for(var t=atob(e.split(",")[1]),i=[],a=0;a<t.length;a++)i.push(t.charCodeAt(a));var r=new Blob([new Uint8Array(i)]),n="Screenshot ".concat((new Date).toLocaleString(),".png");return new File([r],n,{type:"image/png"})}}]),ScreenshotTaker}();function getScreenshotCompatibilityFallback(){var t;try{t=navigator.mediaDevices.getDisplayMedia}catch(a){}if(t)return null;var i=e.detectPlatform();return i.isMac?{pressKey:"Cmd+Control+Shift+3"}:i.isWindows?{pressKey:"PrtSc",pressKeySecondary:"Fn+PrtSc"}:{pressKey:null}}exports.ScreenshotTaker=i,exports.getScreenshotCompatibilityFallback=getScreenshotCompatibilityFallback;
},{"../utilsCommon":"EjGt","../widget/ElixirChatWidgetEventTypes":"zWqG"}],"XFqm":[function(require,module,exports) {
var define;
var e;!function(t,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof e&&e.amd?e([],n):"object"==typeof exports?exports.Phoenix=n():t.Phoenix=n()}(this,function(){return function(e){var t={};function n(i){if(t[i])return t[i].exports;var o=t[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(i,o,function(t){return e[t]}.bind(null,o));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){(function(t){e.exports=t.Phoenix=n(2)}).call(this,n(1))},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){"use strict";function i(e){return function(e){if(Array.isArray(e))return a(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||s(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],i=!0,o=!1,r=void 0;try{for(var s,a=e[Symbol.iterator]();!(i=(s=a.next()).done)&&(n.push(s.value),!t||n.length!==t);i=!0);}catch(e){o=!0,r=e}finally{try{i||null==a.return||a.return()}finally{if(o)throw r}}return n}}(e,t)||s(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(e,t){if(e){if("string"==typeof e)return a(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(n):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?a(e,t):void 0}}function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}function c(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function u(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function h(e,t,n){return t&&u(e.prototype,t),n&&u(e,n),e}n.r(t),n.d(t,"Channel",function(){return O}),n.d(t,"Serializer",function(){return P}),n.d(t,"Socket",function(){return L}),n.d(t,"LongPoll",function(){return _}),n.d(t,"Ajax",function(){return A}),n.d(t,"Presence",function(){return M});var l="undefined"!=typeof self?self:null,f="undefined"!=typeof window?window:null,d=l||f||void 0,p=0,v="closed",y="errored",m="joined",g="joining",k="leaving",b="phx_close",j="phx_error",C="phx_join",R="phx_reply",S="phx_leave",T=[b,j,C,R,S],w="websocket",E=function(e){return"function"==typeof e?e:function(){return e}},x=function(){function e(t,n,i,o){c(this,e),this.channel=t,this.event=n,this.payload=i||function(){return{}},this.receivedResp=null,this.timeout=o,this.timeoutTimer=null,this.recHooks=[],this.sent=!1}return h(e,[{key:"resend",value:function(e){this.timeout=e,this.reset(),this.send()}},{key:"send",value:function(){this.hasReceived("timeout")||(this.startTimeout(),this.sent=!0,this.channel.socket.push({topic:this.channel.topic,event:this.event,payload:this.payload(),ref:this.ref,join_ref:this.channel.joinRef()}))}},{key:"receive",value:function(e,t){return this.hasReceived(e)&&t(this.receivedResp.response),this.recHooks.push({status:e,callback:t}),this}},{key:"reset",value:function(){this.cancelRefEvent(),this.ref=null,this.refEvent=null,this.receivedResp=null,this.sent=!1}},{key:"matchReceive",value:function(e){var t=e.status,n=e.response;e.ref,this.recHooks.filter(function(e){return e.status===t}).forEach(function(e){return e.callback(n)})}},{key:"cancelRefEvent",value:function(){this.refEvent&&this.channel.off(this.refEvent)}},{key:"cancelTimeout",value:function(){clearTimeout(this.timeoutTimer),this.timeoutTimer=null}},{key:"startTimeout",value:function(){var e=this;this.timeoutTimer&&this.cancelTimeout(),this.ref=this.channel.socket.makeRef(),this.refEvent=this.channel.replyEventName(this.ref),this.channel.on(this.refEvent,function(t){e.cancelRefEvent(),e.cancelTimeout(),e.receivedResp=t,e.matchReceive(t)}),this.timeoutTimer=setTimeout(function(){e.trigger("timeout",{})},this.timeout)}},{key:"hasReceived",value:function(e){return this.receivedResp&&this.receivedResp.status===e}},{key:"trigger",value:function(e,t){this.channel.trigger(this.refEvent,{status:e,response:t})}}]),e}(),O=function(){function e(t,n,i){var o=this;c(this,e),this.state=v,this.topic=t,this.params=E(n||{}),this.socket=i,this.bindings=[],this.bindingRef=0,this.timeout=this.socket.timeout,this.joinedOnce=!1,this.joinPush=new x(this,C,this.params,this.timeout),this.pushBuffer=[],this.stateChangeRefs=[],this.rejoinTimer=new J(function(){o.socket.isConnected()&&o.rejoin()},this.socket.rejoinAfterMs),this.stateChangeRefs.push(this.socket.onError(function(){return o.rejoinTimer.reset()})),this.stateChangeRefs.push(this.socket.onOpen(function(){o.rejoinTimer.reset(),o.isErrored()&&o.rejoin()})),this.joinPush.receive("ok",function(){o.state=m,o.rejoinTimer.reset(),o.pushBuffer.forEach(function(e){return e.send()}),o.pushBuffer=[]}),this.joinPush.receive("error",function(){o.state=y,o.socket.isConnected()&&o.rejoinTimer.scheduleTimeout()}),this.onClose(function(){o.rejoinTimer.reset(),o.socket.hasLogger()&&o.socket.log("channel","close ".concat(o.topic," ").concat(o.joinRef())),o.state=v,o.socket.remove(o)}),this.onError(function(e){o.socket.hasLogger()&&o.socket.log("channel","error ".concat(o.topic),e),o.isJoining()&&o.joinPush.reset(),o.state=y,o.socket.isConnected()&&o.rejoinTimer.scheduleTimeout()}),this.joinPush.receive("timeout",function(){o.socket.hasLogger()&&o.socket.log("channel","timeout ".concat(o.topic," (").concat(o.joinRef(),")"),o.joinPush.timeout),new x(o,S,E({}),o.timeout).send(),o.state=y,o.joinPush.reset(),o.socket.isConnected()&&o.rejoinTimer.scheduleTimeout()}),this.on(R,function(e,t){o.trigger(o.replyEventName(t),e)})}return h(e,[{key:"join",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.timeout;if(this.joinedOnce)throw new Error("tried to join multiple times. 'join' can only be called a single time per channel instance");return this.timeout=e,this.joinedOnce=!0,this.rejoin(),this.joinPush}},{key:"onClose",value:function(e){this.on(b,e)}},{key:"onError",value:function(e){return this.on(j,function(t){return e(t)})}},{key:"on",value:function(e,t){var n=this.bindingRef++;return this.bindings.push({event:e,ref:n,callback:t}),n}},{key:"off",value:function(e,t){this.bindings=this.bindings.filter(function(n){return!(n.event===e&&(void 0===t||t===n.ref))})}},{key:"canPush",value:function(){return this.socket.isConnected()&&this.isJoined()}},{key:"push",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.timeout;if(!this.joinedOnce)throw new Error("tried to push '".concat(e,"' to '").concat(this.topic,"' before joining. Use channel.join() before pushing events"));var i=new x(this,e,function(){return t},n);return this.canPush()?i.send():(i.startTimeout(),this.pushBuffer.push(i)),i}},{key:"leave",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.timeout;this.rejoinTimer.reset(),this.joinPush.cancelTimeout(),this.state=k;var n=function(){e.socket.hasLogger()&&e.socket.log("channel","leave ".concat(e.topic)),e.trigger(b,"leave")},i=new x(this,S,E({}),t);return i.receive("ok",function(){return n()}).receive("timeout",function(){return n()}),i.send(),this.canPush()||i.trigger("ok",{}),i}},{key:"onMessage",value:function(e,t,n){return t}},{key:"isLifecycleEvent",value:function(e){return T.indexOf(e)>=0}},{key:"isMember",value:function(e,t,n,i){return!(this.topic!==e||i&&i!==this.joinRef()&&this.isLifecycleEvent(t)&&(this.socket.hasLogger()&&this.socket.log("channel","dropping outdated message",{topic:e,event:t,payload:n,joinRef:i}),1))}},{key:"joinRef",value:function(){return this.joinPush.ref}},{key:"rejoin",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.timeout;this.isLeaving()||(this.socket.leaveOpenTopic(this.topic),this.state=g,this.joinPush.resend(e))}},{key:"trigger",value:function(e,t,n,i){var o=this.onMessage(e,t,n,i);if(t&&!o)throw new Error("channel onMessage callbacks must return the payload, modified or unmodified");for(var r=this.bindings.filter(function(t){return t.event===e}),s=0;s<r.length;s++)r[s].callback(o,n,i||this.joinRef())}},{key:"replyEventName",value:function(e){return"chan_reply_".concat(e)}},{key:"isClosed",value:function(){return this.state===v}},{key:"isErrored",value:function(){return this.state===y}},{key:"isJoined",value:function(){return this.state===m}},{key:"isJoining",value:function(){return this.state===g}},{key:"isLeaving",value:function(){return this.state===k}}]),e}(),P={encode:function(e,t){var n=[e.join_ref,e.ref,e.topic,e.event,e.payload];return t(JSON.stringify(n))},decode:function(e,t){var n=r(JSON.parse(e),5);return t({join_ref:n[0],ref:n[1],topic:n[2],event:n[3],payload:n[4]})}},L=function(){function e(t){var n=this,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};c(this,e),this.stateChangeCallbacks={open:[],close:[],error:[],message:[]},this.channels=[],this.sendBuffer=[],this.ref=0,this.timeout=i.timeout||1e4,this.transport=i.transport||d.WebSocket||_,this.defaultEncoder=P.encode,this.defaultDecoder=P.decode,this.closeWasClean=!1,this.unloaded=!1,this.binaryType=i.binaryType||"arraybuffer",this.transport!==_?(this.encode=i.encode||this.defaultEncoder,this.decode=i.decode||this.defaultDecoder):(this.encode=this.defaultEncoder,this.decode=this.defaultDecoder),f&&f.addEventListener&&f.addEventListener("unload",function(e){n.conn&&(n.unloaded=!0,n.abnormalClose("unloaded"))}),this.heartbeatIntervalMs=i.heartbeatIntervalMs||3e4,this.rejoinAfterMs=function(e){return i.rejoinAfterMs?i.rejoinAfterMs(e):[1e3,2e3,5e3][e-1]||1e4},this.reconnectAfterMs=function(e){return n.unloaded?100:i.reconnectAfterMs?i.reconnectAfterMs(e):[10,50,100,150,200,250,500,1e3,2e3][e-1]||5e3},this.logger=i.logger||null,this.longpollerTimeout=i.longpollerTimeout||2e4,this.params=E(i.params||{}),this.endPoint="".concat(t,"/").concat(w),this.vsn=i.vsn||"2.0.0",this.heartbeatTimer=null,this.pendingHeartbeatRef=null,this.reconnectTimer=new J(function(){n.teardown(function(){return n.connect()})},this.reconnectAfterMs)}return h(e,[{key:"protocol",value:function(){return location.protocol.match(/^https/)?"wss":"ws"}},{key:"endPointURL",value:function(){var e=A.appendParams(A.appendParams(this.endPoint,this.params()),{vsn:this.vsn});return"/"!==e.charAt(0)?e:"/"===e.charAt(1)?"".concat(this.protocol(),":").concat(e):"".concat(this.protocol(),"://").concat(location.host).concat(e)}},{key:"disconnect",value:function(e,t,n){this.closeWasClean=!0,this.reconnectTimer.reset(),this.teardown(e,t,n)}},{key:"connect",value:function(e){var t=this;e&&(console&&console.log("passing params to connect is deprecated. Instead pass :params to the Socket constructor"),this.params=E(e)),this.conn||(this.closeWasClean=!1,this.conn=new this.transport(this.endPointURL()),this.conn.binaryType=this.binaryType,this.conn.timeout=this.longpollerTimeout,this.conn.onopen=function(){return t.onConnOpen()},this.conn.onerror=function(e){return t.onConnError(e)},this.conn.onmessage=function(e){return t.onConnMessage(e)},this.conn.onclose=function(e){return t.onConnClose(e)})}},{key:"log",value:function(e,t,n){this.logger(e,t,n)}},{key:"hasLogger",value:function(){return null!==this.logger}},{key:"onOpen",value:function(e){var t=this.makeRef();return this.stateChangeCallbacks.open.push([t,e]),t}},{key:"onClose",value:function(e){var t=this.makeRef();return this.stateChangeCallbacks.close.push([t,e]),t}},{key:"onError",value:function(e){var t=this.makeRef();return this.stateChangeCallbacks.error.push([t,e]),t}},{key:"onMessage",value:function(e){var t=this.makeRef();return this.stateChangeCallbacks.message.push([t,e]),t}},{key:"onConnOpen",value:function(){this.hasLogger()&&this.log("transport","connected to ".concat(this.endPointURL())),this.unloaded=!1,this.closeWasClean=!1,this.flushSendBuffer(),this.reconnectTimer.reset(),this.resetHeartbeat(),this.stateChangeCallbacks.open.forEach(function(e){return(0,r(e,2)[1])()})}},{key:"resetHeartbeat",value:function(){var e=this;this.conn&&this.conn.skipHeartbeat||(this.pendingHeartbeatRef=null,clearInterval(this.heartbeatTimer),this.heartbeatTimer=setInterval(function(){return e.sendHeartbeat()},this.heartbeatIntervalMs))}},{key:"teardown",value:function(e,t,n){var i=this;if(!this.conn)return e&&e();this.waitForBufferDone(function(){i.conn&&(t?i.conn.close(t,n||""):i.conn.close()),i.waitForSocketClosed(function(){i.conn&&(i.conn.onclose=function(){},i.conn=null),e&&e()})})}},{key:"waitForBufferDone",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;5!==n&&this.conn&&this.conn.bufferedAmount?setTimeout(function(){t.waitForBufferDone(e,n+1)},150*n):e()}},{key:"waitForSocketClosed",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;5!==n&&this.conn&&3!==this.conn.readyState?setTimeout(function(){t.waitForSocketClosed(e,n+1)},150*n):e()}},{key:"onConnClose",value:function(e){this.hasLogger()&&this.log("transport","close",e),this.triggerChanError(),clearInterval(this.heartbeatTimer),this.closeWasClean||this.reconnectTimer.scheduleTimeout(),this.stateChangeCallbacks.close.forEach(function(t){return(0,r(t,2)[1])(e)})}},{key:"onConnError",value:function(e){this.hasLogger()&&this.log("transport",e),this.triggerChanError(),this.stateChangeCallbacks.error.forEach(function(t){return(0,r(t,2)[1])(e)})}},{key:"triggerChanError",value:function(){this.channels.forEach(function(e){e.isErrored()||e.isLeaving()||e.isClosed()||e.trigger(j)})}},{key:"connectionState",value:function(){switch(this.conn&&this.conn.readyState){case p:return"connecting";case 1:return"open";case 2:return"closing";default:return"closed"}}},{key:"isConnected",value:function(){return"open"===this.connectionState()}},{key:"remove",value:function(e){this.off(e.stateChangeRefs),this.channels=this.channels.filter(function(t){return t.joinRef()!==e.joinRef()})}},{key:"off",value:function(e){for(var t in this.stateChangeCallbacks)this.stateChangeCallbacks[t]=this.stateChangeCallbacks[t].filter(function(t){var n=r(t,1)[0];return-1===e.indexOf(n)})}},{key:"channel",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=new O(e,t,this);return this.channels.push(n),n}},{key:"push",value:function(e){var t=this;if(this.hasLogger()){var n=e.topic,i=e.event,o=e.payload,r=e.ref,s=e.join_ref;this.log("push","".concat(n," ").concat(i," (").concat(s,", ").concat(r,")"),o)}this.isConnected()?this.encode(e,function(e){return t.conn.send(e)}):this.sendBuffer.push(function(){return t.encode(e,function(e){return t.conn.send(e)})})}},{key:"makeRef",value:function(){var e=this.ref+1;return e===this.ref?this.ref=0:this.ref=e,this.ref.toString()}},{key:"sendHeartbeat",value:function(){if(this.isConnected()){if(this.pendingHeartbeatRef)return this.pendingHeartbeatRef=null,this.hasLogger()&&this.log("transport","heartbeat timeout. Attempting to re-establish connection"),void this.abnormalClose("heartbeat timeout");this.pendingHeartbeatRef=this.makeRef(),this.push({topic:"phoenix",event:"heartbeat",payload:{},ref:this.pendingHeartbeatRef})}}},{key:"abnormalClose",value:function(e){this.closeWasClean=!1,this.conn.close(1e3,e)}},{key:"flushSendBuffer",value:function(){this.isConnected()&&this.sendBuffer.length>0&&(this.sendBuffer.forEach(function(e){return e()}),this.sendBuffer=[])}},{key:"onConnMessage",value:function(e){var t=this;this.decode(e.data,function(e){var n=e.topic,i=e.event,o=e.payload,s=e.ref,a=e.join_ref;s&&s===t.pendingHeartbeatRef&&(t.pendingHeartbeatRef=null),t.hasLogger()&&t.log("receive","".concat(o.status||""," ").concat(n," ").concat(i," ").concat(s&&"("+s+")"||""),o);for(var c=0;c<t.channels.length;c++){var u=t.channels[c];u.isMember(n,i,o,a)&&u.trigger(i,o,s,a)}for(var h=0;h<t.stateChangeCallbacks.message.length;h++)(0,r(t.stateChangeCallbacks.message[h],2)[1])(e)})}},{key:"leaveOpenTopic",value:function(e){var t=this.channels.find(function(t){return t.topic===e&&(t.isJoined()||t.isJoining())});t&&(this.hasLogger()&&this.log("transport",'leaving duplicate topic "'.concat(e,'"')),t.leave())}}]),e}(),_=function(){function e(t){c(this,e),this.endPoint=null,this.token=null,this.skipHeartbeat=!0,this.onopen=function(){},this.onerror=function(){},this.onmessage=function(){},this.onclose=function(){},this.pollEndpoint=this.normalizeEndpoint(t),this.readyState=p,this.poll()}return h(e,[{key:"normalizeEndpoint",value:function(e){return e.replace("ws://","http://").replace("wss://","https://").replace(new RegExp("(.*)/"+w),"$1/longpoll")}},{key:"endpointURL",value:function(){return A.appendParams(this.pollEndpoint,{token:this.token})}},{key:"closeAndRetry",value:function(){this.close(),this.readyState=p}},{key:"ontimeout",value:function(){this.onerror("timeout"),this.closeAndRetry()}},{key:"poll",value:function(){var e=this;1!==this.readyState&&this.readyState!==p||A.request("GET",this.endpointURL(),"application/json",null,this.timeout,this.ontimeout.bind(this),function(t){if(t){var n=t.status,i=t.token,o=t.messages;e.token=i}else n=0;switch(n){case 200:o.forEach(function(t){return e.onmessage({data:t})}),e.poll();break;case 204:e.poll();break;case 410:e.readyState=1,e.onopen(),e.poll();break;case 403:e.onerror(),e.close();break;case 0:case 500:e.onerror(),e.closeAndRetry();break;default:throw new Error("unhandled poll status ".concat(n))}})}},{key:"send",value:function(e){var t=this;A.request("POST",this.endpointURL(),"application/json",e,this.timeout,this.onerror.bind(this,"timeout"),function(e){e&&200===e.status||(t.onerror(e&&e.status),t.closeAndRetry())})}},{key:"close",value:function(e,t){this.readyState=3,this.onclose()}}]),e}(),A=function(){function e(){c(this,e)}return h(e,null,[{key:"request",value:function(e,t,n,i,o,r,s){if(d.XDomainRequest){var a=new XDomainRequest;this.xdomainRequest(a,e,t,i,o,r,s)}else{var c=new d.XMLHttpRequest;this.xhrRequest(c,e,t,n,i,o,r,s)}}},{key:"xdomainRequest",value:function(e,t,n,i,o,r,s){var a=this;e.timeout=o,e.open(t,n),e.onload=function(){var t=a.parseJSON(e.responseText);s&&s(t)},r&&(e.ontimeout=r),e.onprogress=function(){},e.send(i)}},{key:"xhrRequest",value:function(e,t,n,i,o,r,s,a){var c=this;e.open(t,n,!0),e.timeout=r,e.setRequestHeader("Content-Type",i),e.onerror=function(){a&&a(null)},e.onreadystatechange=function(){if(e.readyState===c.states.complete&&a){var t=c.parseJSON(e.responseText);a(t)}},s&&(e.ontimeout=s),e.send(o)}},{key:"parseJSON",value:function(e){if(!e||""===e)return null;try{return JSON.parse(e)}catch(t){return console&&console.log("failed to parse JSON response",e),null}}},{key:"serialize",value:function(e,t){var n=[];for(var i in e)if(e.hasOwnProperty(i)){var r=t?"".concat(t,"[").concat(i,"]"):i,s=e[i];"object"===o(s)?n.push(this.serialize(s,r)):n.push(encodeURIComponent(r)+"="+encodeURIComponent(s))}return n.join("&")}},{key:"appendParams",value:function(e,t){if(0===Object.keys(t).length)return e;var n=e.match(/\?/)?"&":"?";return"".concat(e).concat(n).concat(this.serialize(t))}}]),e}();A.states={complete:4};var M=function(){function e(t){var n=this,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};c(this,e);var o=i.events||{state:"presence_state",diff:"presence_diff"};this.state={},this.pendingDiffs=[],this.channel=t,this.joinRef=null,this.caller={onJoin:function(){},onLeave:function(){},onSync:function(){}},this.channel.on(o.state,function(t){var i=n.caller,o=i.onJoin,r=i.onLeave,s=i.onSync;n.joinRef=n.channel.joinRef(),n.state=e.syncState(n.state,t,o,r),n.pendingDiffs.forEach(function(t){n.state=e.syncDiff(n.state,t,o,r)}),n.pendingDiffs=[],s()}),this.channel.on(o.diff,function(t){var i=n.caller,o=i.onJoin,r=i.onLeave,s=i.onSync;n.inPendingSyncState()?n.pendingDiffs.push(t):(n.state=e.syncDiff(n.state,t,o,r),s())})}return h(e,[{key:"onJoin",value:function(e){this.caller.onJoin=e}},{key:"onLeave",value:function(e){this.caller.onLeave=e}},{key:"onSync",value:function(e){this.caller.onSync=e}},{key:"list",value:function(t){return e.list(this.state,t)}},{key:"inPendingSyncState",value:function(){return!this.joinRef||this.joinRef!==this.channel.joinRef()}}],[{key:"syncState",value:function(e,t,n,i){var o=this,r=this.clone(e),s={},a={};return this.map(r,function(e,n){t[e]||(a[e]=n)}),this.map(t,function(e,t){var n=r[e];if(n){var i=t.metas.map(function(e){return e.phx_ref}),c=n.metas.map(function(e){return e.phx_ref}),u=t.metas.filter(function(e){return c.indexOf(e.phx_ref)<0}),h=n.metas.filter(function(e){return i.indexOf(e.phx_ref)<0});u.length>0&&(s[e]=t,s[e].metas=u),h.length>0&&(a[e]=o.clone(n),a[e].metas=h)}else s[e]=t}),this.syncDiff(r,{joins:s,leaves:a},n,i)}},{key:"syncDiff",value:function(e,t,n,o){var r=t.joins,s=t.leaves,a=this.clone(e);return n||(n=function(){}),o||(o=function(){}),this.map(r,function(e,t){var o=a[e];if(a[e]=t,o){var r,s=a[e].metas.map(function(e){return e.phx_ref}),c=o.metas.filter(function(e){return s.indexOf(e.phx_ref)<0});(r=a[e].metas).unshift.apply(r,i(c))}n(e,o,t)}),this.map(s,function(e,t){var n=a[e];if(n){var i=t.metas.map(function(e){return e.phx_ref});n.metas=n.metas.filter(function(e){return i.indexOf(e.phx_ref)<0}),o(e,n,t),0===n.metas.length&&delete a[e]}}),a}},{key:"list",value:function(e,t){return t||(t=function(e,t){return t}),this.map(e,function(e,n){return t(e,n)})}},{key:"map",value:function(e,t){return Object.getOwnPropertyNames(e).map(function(n){return t(n,e[n])})}},{key:"clone",value:function(e){return JSON.parse(JSON.stringify(e))}}]),e}(),J=function(){function e(t,n){c(this,e),this.callback=t,this.timerCalc=n,this.timer=null,this.tries=0}return h(e,[{key:"reset",value:function(){this.tries=0,clearTimeout(this.timer)}},{key:"scheduleTimeout",value:function(){var e=this;clearTimeout(this.timer),this.timer=setTimeout(function(){e.tries=e.tries+1,e.callback()},this.timerCalc(this.tries+1))}}]),e}()}])});
},{}],"Cteb":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ONLINE_STATUS_CHANGE=exports.UPDATE_MESSAGES_CHANGE=exports.LAST_READ_MESSAGE_CHANGE=exports.UNREAD_REPLIES_CHANGE=exports.UNREAD_MESSAGES_CHANGE=exports.TYPING_STATUS_SUBSCRIBE_ERROR=exports.TYPING_STATUS_SUBSCRIBE_SUCCESS=exports.TYPING_STATUS_CHANGE=exports.MESSAGES_RECEIVE=exports.MESSAGES_CHANGE=exports.ERROR_ALERT_SHOW=exports.JOIN_ROOM_ERROR=exports.JOIN_ROOM_SUCCESS=void 0,exports.JOIN_ROOM_SUCCESS="JOIN_ROOM_SUCCESS",exports.JOIN_ROOM_ERROR="JOIN_ROOM_ERROR",exports.ERROR_ALERT_SHOW="ERROR_ALERT_SHOW",exports.MESSAGES_CHANGE="MESSAGES_CHANGE",exports.MESSAGES_RECEIVE="MESSAGES_RECEIVE",exports.TYPING_STATUS_CHANGE="TYPING_STATUS_CHANGE",exports.TYPING_STATUS_SUBSCRIBE_SUCCESS="TYPING_STATUS_SUBSCRIBE_SUCCESS",exports.TYPING_STATUS_SUBSCRIBE_ERROR="TYPING_STATUS_SUBSCRIBE_ERROR",exports.UNREAD_MESSAGES_CHANGE="UNREAD_MESSAGES_CHANGE",exports.UNREAD_REPLIES_CHANGE="UNREAD_REPLIES_CHANGE",exports.LAST_READ_MESSAGE_CHANGE="LAST_READ_MESSAGE_CHANGE",exports.UPDATE_MESSAGES_CHANGE="UPDATE_MESSAGES_CHANGE",exports.ONLINE_STATUS_CHANGE="ONLINE_STATUS_CHANGE";
},{}],"QERd":[function(require,module,exports) {
"use strict";function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}}function _iterableToArray(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}var e=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function get(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),t=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),n=this&&this.__importStar||function(n){if(n&&n.__esModule)return n;var r={};if(null!=n)for(var i in n)"default"!==i&&Object.hasOwnProperty.call(n,i)&&e(r,n,i);return t(r,n),r};Object.defineProperty(exports,"__esModule",{value:!0}),exports.TypingStatusSubscription=void 0;var r=n(require("phoenix")),i=require("./ElixirChatEventTypes"),o=require("../utilsCommon"),a=function(){function TypingStatusSubscription(e){var t=this,n=e.elixirChat;_classCallCheck(this,TypingStatusSubscription),this.currentlyTypingUsers=[],this.typingTimeouts={},this.typedText="",this.subscribe=function(){t.initializeSocket()},this.unsubscribe=function(){var e=t.elixirChat.debug;o.logEvent(e,"Unsubscribing from typing status change..."),t.channel.leave(),t.channel=null,t.phoenixSocket=null,t.currentlyTypingUsers=[],Object.values(t.typingTimeouts).forEach(function(e){return clearTimeout(e)}),t.typingTimeouts=[],t.typedText=""},this.dispatchTypedText=function(e){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(t.channel){var r="string"==typeof e?e.trim():"",i=Boolean(r);(t.typedText!==r||n)&&(t.typedText=r,t.channel.push("typing",{typing:i,text:r}))}},this.onPresenceDiff=function(e){var n,r,i,o=t.elixirChat.elixirChatClientId;try{n=Object.keys(e.joins)[0],i=(r=Object.values(e.joins)[0]).metas[0]}catch(c){}if(i&&n!==o){var a=t.currentlyTypingUsers.map(function(e){return e.id}),s=r.first_name+" "+r.last_name,u={id:n,firstName:r.first_name,lastName:r.last_name,avatar:{url:r.avatar}};i.typing&&t.removeFromCurrentlyTypingUsersAfterTimeout(n,s),i.typing&&!a.includes(n)?t.triggerOnChangeEvent([].concat(_toConsumableArray(t.currentlyTypingUsers),[u])):!i.typing&&a.includes(n)&&t.triggerOnChangeEvent(t.currentlyTypingUsers.filter(function(e){return e.id!==n}))}},this.elixirChat=n}return _createClass(TypingStatusSubscription,[{key:"initializeSocket",value:function initializeSocket(){var e=this,t=this.elixirChat,n=t.triggerEvent,a=t.debug,s=t.socketUrl,u=t.authToken;this.phoenixSocket=new r.Socket(s,{params:{token:u}}),this.phoenixSocket.onError(function(e){o.logEvent(a,"Failed to subscribe to typing status change: could not open connection via Phoenix.Socket",e,"error"),n(i.TYPING_STATUS_SUBSCRIBE_ERROR,e)}),this.phoenixSocket.onOpen(function(){e.joinChannel()}),this.phoenixSocket.connect()}},{key:"joinChannel",value:function joinChannel(){var e=this,t=this.elixirChat,n=t.triggerEvent,r=t.debug,a=t.elixirChatRoomId;this.channel&&this.channel.leave(),this.channel=this.phoenixSocket.channel("public:room:"+a,{}),this.channel.join().receive("error",function(e){o.logEvent(r,"Failed to subscribe to typing status change: channel received error",e,"error"),n(i.TYPING_STATUS_SUBSCRIBE_ERROR,e)}).receive("timeout",function(){o.logEvent(r,"Failed to subscribe to typing status change: channel received timeout",null,"error"),n(i.TYPING_STATUS_SUBSCRIBE_ERROR)}).receive("ok",function(t){e.channel.on("presence_diff",e.onPresenceDiff),e.dispatchTypedText(e.typedText,!0),o.logEvent(r,"Successfully subscribed to typing status change",t),setTimeout(function(){return n(i.TYPING_STATUS_SUBSCRIBE_SUCCESS,t)})})}},{key:"removeFromCurrentlyTypingUsersAfterTimeout",value:function removeFromCurrentlyTypingUsersAfterTimeout(e){var t=this;clearTimeout(this.typingTimeouts[e]),this.typingTimeouts[e]=setTimeout(function(){t.triggerOnChangeEvent(t.currentlyTypingUsers.filter(function(t){return t.id!==e}))},2e3)}},{key:"triggerOnChangeEvent",value:function triggerOnChangeEvent(e){var t=this.elixirChat,n=t.triggerEvent,r=t.debug;if(e.length||this.currentlyTypingUsers.length){var a=this.currentlyTypingUsers.length>e.length;this.currentlyTypingUsers=e,o.logEvent(r,"Some users ".concat(a?"stopped":"started"," typing"),this.currentlyTypingUsers),n(i.TYPING_STATUS_CHANGE,this.currentlyTypingUsers)}}}]),TypingStatusSubscription}();exports.TypingStatusSubscription=a;
},{"phoenix":"XFqm","./ElixirChatEventTypes":"Cteb","../utilsCommon":"EjGt"}],"ZEl5":[function(require,module,exports) {
"use strict";function _templateObject(){var e=_taggedTemplateLiteral(["\n  fragment fragmentMessage on Message {\n    id\n    text\n    timestamp\n    isUnread\n    isSystem\n    \n    ... on ManualMessage {\n      tempId\n      isDeleted\n      mustOpenWidget\n      sender { ...fragmentUser }\n      attachments { ...fragmentFile }\n      mentions {\n        value\n        client { ...fragmentUser }\n      }\n      responseToMessage {\n        id\n        text\n        isDeleted\n        sender { ...fragmentUser }\n      }\n    }\n    \n    ... on ScreenshotRequestedMessage {\n      __typename\n      sender { ...fragmentUser }\n    }\n\n    ... on NobodyWorkingMessage {\n      __typename\n      workHoursStartAt\n    }\n  }\n"]);return _templateObject=function _templateObject(){return e},e}function _taggedTemplateLiteral(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}Object.defineProperty(exports,"__esModule",{value:!0}),exports.serializeMessage=exports.fragmentMessage=void 0;var e=require("../GraphQLClient"),t=require("./serializeUser"),n=require("./serializeFile"),s=require("../../utilsCommon");function serializeMessage(e,r){var a=e||{},i=a.sender,l=a.responseToMessage,o=a.attachments,m=a.mentions;return Object.assign(Object.assign({},s.extractSerializedData(e,{id:null,tempId:null,cursor:null,text:"",timestamp:"",mustOpenWidget:!1,submissionErrorCode:null,isSubmitting:!1,isUnread:!1,isSystem:!1,isDeleted:!1})),{sender:t.serializeUser(i,r),attachments:(o||[]).map(function(e){return n.serializeFile(e,r)}),responseToMessage:Object.assign(Object.assign({},s.extractSerializedData(l,{id:null,text:"",isDeleted:!1})),{sender:t.serializeUser(null==l?void 0:l.sender,r)}),mentions:(m||[]).map(function(e){return{client:t.serializeUser(e.client,r),value:e.value}}),systemData:{type:(null==e?void 0:e.__typename)||null,workHoursStartAt:(null==e?void 0:e.workHoursStartAt)||null}})}exports.fragmentMessage=e.insertGraphQlFragments(e.gql(_templateObject()),{fragmentUser:t.fragmentUser,fragmentFile:n.fragmentFile}),exports.serializeMessage=serializeMessage;
},{"../GraphQLClient":"fvSB","./serializeUser":"lqyB","./serializeFile":"sQAQ","../../utilsCommon":"EjGt"}],"AgKM":[function(require,module,exports) {
"use strict";function _templateObject(){var e=_taggedTemplateLiteral(["\n    subscription {\n      updateMessage {\n        ...fragmentMessage\n      }\n    }\n  "]);return _templateObject=function _templateObject(){return e},e}function _taggedTemplateLiteral(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0}),exports.UpdateMessageSubscription=void 0;var e=require("./ElixirChatEventTypes"),t=require("./serializers/serializeMessage"),r=require("./GraphQLClient"),s=function UpdateMessageSubscription(s){var i=this,a=s.elixirChat;_classCallCheck(this,UpdateMessageSubscription),this.subscriptionQuery=r.insertGraphQlFragments(r.gql(_templateObject()),{fragmentMessage:t.fragmentMessage}),this.subscribe=function(){var r=i.elixirChat,s=r.graphQLClientSocket,a=r.triggerEvent,n=r.logInfo,o=r.logError;s.subscribe({query:i.subscriptionQuery,onAbort:function onAbort(t){var r="UpdateMessageSubscription: Failed to subscribe";o(r,{error:t}),a(e.ERROR_ALERT_SHOW,{customMessage:r,error:t,retryCallback:i.subscribe})},onStart:function onStart(){n("UpdateMessageSubscription: Subscribed")},onResult:function onResult(r){var s,n=null===(s=null==r?void 0:r.data)||void 0===s?void 0:s.updateMessage;if(n){var o=t.serializeMessage(n,i.elixirChat);a(e.UPDATE_MESSAGES_CHANGE,o)}}})},this.unsubscribe=function(){var e=i.elixirChat,t=e.graphQLClientSocket;(0,e.logInfo)("UpdateMessageSubscription: Unsubscribing..."),t.unsubscribe(i.subscriptionQuery)},this.elixirChat=a};exports.UpdateMessageSubscription=s;
},{"./ElixirChatEventTypes":"Cteb","./serializers/serializeMessage":"ZEl5","./GraphQLClient":"fvSB"}],"XLSb":[function(require,module,exports) {
"use strict";function _templateObject(){var t=_taggedTemplateLiteral(["\n    subscription {\n      updateCompanyWorking {\n        isWorking\n        workHoursStartAt\n      }\n    }\n  "]);return _templateObject=function _templateObject(){return t},t}function _taggedTemplateLiteral(t,e){return e||(e=t.slice(0)),Object.freeze(Object.defineProperties(t,{raw:{value:Object.freeze(e)}}))}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function _createClass(t,e,n){return e&&_defineProperties(t.prototype,e),n&&_defineProperties(t,n),t}Object.defineProperty(exports,"__esModule",{value:!0}),exports.OnlineStatusSubscription=void 0;var t=require("./GraphQLClient"),e=require("./ElixirChatEventTypes"),n=function(){function OnlineStatusSubscription(n){var r=this,i=n.elixirChat;_classCallCheck(this,OnlineStatusSubscription),this.onlineStatus={isOnline:!1,workHoursStartAt:null},this.subscriptionQuery=t.gql(_templateObject()),this.subscribe=function(t){var n=r.elixirChat,i=n.graphQLClientSocket,s=n.logInfo,o=n.logError,a=n.triggerEvent,u=t||{},l=u.isOnline,c=u.workHoursStartAt;r.onStatusChange({isOnline:l,workHoursStartAt:c}),i.subscribe({query:r.subscriptionQuery,onAbort:function onAbort(n){var i="OnlineStatusSubscription: Failed to subscribe";o(i,{error:n}),a(e.ERROR_ALERT_SHOW,{customMessage:i,error:n,retryCallback:function retryCallback(){return r.subscribe(t)}})},onStart:function onStart(){s("OnlineStatusSubscription: Subscribed")},onResult:function onResult(t){var e=t.data.updateCompanyWorking;r.onStatusChange({isOnline:null==e?void 0:e.isWorking,workHoursStartAt:null==e?void 0:e.workHoursStartAt})}})},this.unsubscribe=function(){var t=r.elixirChat,e=t.graphQLClientSocket;(0,t.logInfo)("OnlineStatusSubscription: Unsubscribing..."),e.unsubscribe(r.subscriptionQuery)},this.elixirChat=i}return _createClass(OnlineStatusSubscription,[{key:"onStatusChange",value:function onStatusChange(t){var n=this.elixirChat.triggerEvent,r=t||{},i=r.isOnline,s=r.workHoursStartAt,o={isOnline:Boolean(i),workHoursStartAt:s||null};o.isOnline===this.onlineStatus.isOnline&&o.workHoursStartAt===this.onlineStatus.workHoursStartAt||(this.onlineStatus=o,n(e.ONLINE_STATUS_CHANGE,o))}}]),OnlineStatusSubscription}();exports.OnlineStatusSubscription=n;
},{"./GraphQLClient":"fvSB","./ElixirChatEventTypes":"Cteb"}],"xY1B":[function(require,module,exports) {
"use strict";function _templateObject2(){var e=_taggedTemplateLiteral(["\n    mutation ($messageId: ID!) {\n      updateLastReadMessage(messageId: $messageId) {\n        unreadMessagesCount,\n        unreadRepliesCount,\n      }\n    }\n  "]);return _templateObject2=function _templateObject2(){return e},e}function _templateObject(){var e=_taggedTemplateLiteral(["\n    subscription {\n      updateReadMessages {\n        unreadMessagesCount\n        unreadRepliesCount\n        lastReadMessageId\n      }\n    }\n  "]);return _templateObject=function _templateObject(){return e},e}function _taggedTemplateLiteral(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var s=0;s<t.length;s++){var a=t[s];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function _createClass(e,t,s){return t&&_defineProperties(e.prototype,t),s&&_defineProperties(e,s),e}Object.defineProperty(exports,"__esModule",{value:!0}),exports.UnreadMessagesCounter=void 0;var e=require("./GraphQLClient"),t=require("./ElixirChatEventTypes"),s=function(){function UnreadMessagesCounter(s){var a=this,n=s.elixirChat;_classCallCheck(this,UnreadMessagesCounter),this.unreadMessagesCount=0,this.unreadRepliesCount=0,this.lastReadMessageId=null,this.subscriptionQuery=e.gql(_templateObject()),this.setLastReadMessageQuery=e.gql(_templateObject2()),this.subscribe=function(e){var s=a.elixirChat,n=s.graphQLClientSocket,r=s.logInfo,u=s.logError,i=s.triggerEvent;a.onUnreadCountsUpdate(e),n.subscribe({query:a.subscriptionQuery,onAbort:function onAbort(s){var n="UnreadMessagesCounter: Failed to subscribe";u(n,{error:s}),i(t.ERROR_ALERT_SHOW,{customMessage:n,error:s,retryCallback:function retryCallback(){return a.subscribe(e)}})},onStart:function onStart(){r("UnreadMessagesCounter: Subscribed")},onResult:function onResult(e){var t,s=(null===(t=null==e?void 0:e.data)||void 0===t?void 0:t.updateReadMessages)||{};a.onUnreadCountsUpdate(s)}})},this.setLastReadMessage=function(e){var t=a.elixirChat.sendAPIRequest;if(e!==a.lastReadMessageId)return t(a.setLastReadMessageQuery,{messageId:e})},this.unsubscribe=function(){var e=a.elixirChat,t=e.graphQLClientSocket;(0,e.logInfo)("UnreadMessagesCounter: Unsubscribing..."),t.unsubscribe(a.subscriptionQuery),a.onUnreadCountsUpdate({unreadMessagesCount:0,unreadRepliesCount:0})},this.elixirChat=n}return _createClass(UnreadMessagesCounter,[{key:"onUnreadCountsUpdate",value:function onUnreadCountsUpdate(e){var s=this.elixirChat,a=s.triggerEvent,n=s.logInfo,r=e.unreadMessagesCount,u=e.unreadRepliesCount,i=(e.lastReadMessageId||"").toString().trim();r!==this.unreadMessagesCount&&(this.unreadMessagesCount=r,n("Unread messages count changed to "+r),a(t.UNREAD_MESSAGES_CHANGE,r)),u!==this.unreadRepliesCount&&(this.unreadRepliesCount=u,n("Unread replies count changed to "+u),a(t.UNREAD_REPLIES_CHANGE,u)),i!==this.lastReadMessageId&&(this.lastReadMessageId=i,n("Last message marked as read changed to: "+i),a(t.LAST_READ_MESSAGE_CHANGE,i))}}]),UnreadMessagesCounter}();exports.UnreadMessagesCounter=s;
},{"./GraphQLClient":"fvSB","./ElixirChatEventTypes":"Cteb"}],"jRw6":[function(require,module,exports) {
"use strict";function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var s=Object.prototype.toString.call(e).slice(8,-1);return"Object"===s&&e.constructor&&(s=e.constructor.name),"Map"===s||"Set"===s?Array.from(e):"Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)?_arrayLikeToArray(e,t):void 0}}function _iterableToArray(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var s=0,r=new Array(t);s<t;s++)r[s]=e[s];return r}function _templateObject3(){var e=_taggedTemplateLiteral(["\n    query ($first: Int, $last: Int, $before: String, $after: String) {\n      messages(first: $first, last: $last, before: $before, after: $after) {\n        edges {\n          cursor\n          node {\n            ...fragmentMessage\n          }\n        }\n      }\n    }\n  "]);return _templateObject3=function _templateObject3(){return e},e}function _templateObject2(){var e=_taggedTemplateLiteral(["\n    mutation ($text: String!, $responseToMessageId: ID, $attachments: [Upload!], $tempId: ID) {\n      sendMessage(text: $text, responseToMessageId: $responseToMessageId, attachments: $attachments, tempId: $tempId) {\n        ...fragmentMessage\n      }\n    }\n  "]);return _templateObject2=function _templateObject2(){return e},e}function _templateObject(){var e=_taggedTemplateLiteral(["\n    subscription {\n      newMessage {\n        ...fragmentMessage\n      }\n    }\n  "]);return _templateObject=function _templateObject(){return e},e}function _taggedTemplateLiteral(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var s=0;s<t.length;s++){var r=t[s];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _createClass(e,t,s){return t&&_defineProperties(e.prototype,t),s&&_defineProperties(e,s),e}Object.defineProperty(exports,"__esModule",{value:!0}),exports.MessageSubscription=void 0;var e=require("./ElixirChatEventTypes"),t=require("./serializers/serializeMessage"),s=require("../utilsCommon"),r=require("./GraphQLClient"),a=function(){function MessageSubscription(a){var n=this,i=a.elixirChat;_classCallCheck(this,MessageSubscription),this.messageHistory=[],this.MESSAGE_HISTORY_REQUEST_INTERVAL=3e4,this.temporaryMessageTempIds=[],this.messageHistoryRequestInterval=null,this.subscriptionQuery=r.insertGraphQlFragments(r.gql(_templateObject()),{fragmentMessage:t.fragmentMessage}),this.sendMessageQuery=r.insertGraphQlFragments(r.gql(_templateObject2()),{fragmentMessage:t.fragmentMessage}),this.messageHistoryQuery=r.insertGraphQlFragments(r.gql(_templateObject3()),{fragmentMessage:t.fragmentMessage}),this.subscribe=function(){var t=n.elixirChat,s=t.graphQLClientSocket,r=t.logInfo,a=t.logError,i=t.triggerEvent;n.updateMessageHistoryOnInterval(),s.subscribe({query:n.subscriptionQuery,onAbort:function onAbort(t){a("MessageSubscription: Failed to subscribe",{error:t}),i(e.ERROR_ALERT_SHOW,{customMessage:"MessageSubscription: Failed to subscribe",error:t,retryCallback:n.subscribe})},onStart:function onStart(){r("MessageSubscription: Subscribed")},onResult:n.onMessageReceive})},this.onMessageReceive=function(s){var r,a=n.elixirChat,i=a.triggerEvent,o=a.logInfo,g=null===(r=null==s?void 0:s.data)||void 0===r?void 0:r.newMessage;if(g){var u=t.serializeMessage(g,n.elixirChat);n.temporaryMessageTempIds.includes(u.tempId)?n.forgetTemporaryMessage(u.tempId):(n.messageHistory.push(u),o("Received new message",{message:u}),i(e.MESSAGES_RECEIVE,u))}},this.changeMessageBy=function(t,s){var r=n.elixirChat.triggerEvent;n.messageHistory=n.messageHistory.map(function(e){var r,a=Object.assign({},e);return n.doesMessageMatchQuery(e,t)&&(a=Object.assign(Object.assign({},a),s)),(null===(r=e.responseToMessage)||void 0===r?void 0:r.id)&&n.doesMessageMatchQuery(e.responseToMessage,t)&&(a.responseToMessage=Object.assign(Object.assign({},a.responseToMessage),s)),a}),r(e.MESSAGES_CHANGE,n.messageHistory)},this.sendMessage=function(e){var r,a=n.elixirChat,i=a.logInfo,o=a.logError,g=a.sendAPIRequest,u=(a.triggerEvent,n.serializeSendMessageParams(e)),l=u.variables,c=u.binaries;if(!l.text&&!l.attachments.length){var m='MessageSubscription: Either "text" or "attachments" parameter must not be empty';return o(m,l),Promise.reject({message:m})}if(e.appendConditionally){r=s.randomDigitStringId(6),l.tempId=r;var p=n.generateTemporaryMessage(e,{tempId:r});n.appendMessageConditionally(p)}else e.retrySubmissionByTempId&&(r=e.retrySubmissionByTempId,l.tempId=r,n.changeMessageBy({tempId:r},{isSubmitting:!0,submissionErrorCode:null}));return g(n.sendMessageQuery,l,c).then(function(s){var r=t.serializeMessage(s,n.elixirChat),a=r.tempId;return a?(i("MessageSubscription: Enriched temporary message with actual one",{sentMessage:r}),n.changeMessageBy({tempId:a},r)):i("MessageSubscription: Sent message",{textareaParams:e,variables:l,sentMessage:r}),r}).catch(function(e){var t=n.getSubmissionErrorCode(e);throw n.changeMessageBy({tempId:r},{isSubmitting:!1,submissionErrorCode:t}),e})},this.retrySendMessage=function(e){var t;return n.sendMessage({text:e.text,attachments:e.attachments,responseToMessageId:null===(t=null==e?void 0:e.responseToMessage)||void 0===t?void 0:t.id,retrySubmissionByTempId:e.tempId})},this.fetchMessageHistory=function(e){return n.getMessageHistoryByCursor({limit:e}).then(function(e){return n.onMessageHistoryChange(e)})},this.fetchPrecedingMessageHistory=function(e){var t,r=n.elixirChat.logError,a=null===(t=n.messageHistory[0])||void 0===t?void 0:t.cursor;if(!a){var i="MessageSubscription: Failed to fetch previous message history - cursors not found";return r(i),Promise.reject({message:i})}return n.getMessageHistoryByCursor({limit:e,beforeCursor:a}).then(function(e){var t=s._uniqBy([].concat(_toConsumableArray(e),_toConsumableArray(n.messageHistory)),"id");return n.onMessageHistoryChange(t),console.warn("__ precedingMessageHistory",e,a),e})},this.markPrecedingMessagesRead=function(e){var t=n.messageHistory.map(function(e){return e.id}).indexOf(e);n.messageHistory.forEach(function(e,s){t>=s&&(e.isUnread=!1)}),n.onMessageHistoryChange(n.messageHistory)},this.unsubscribe=function(){var e=n.elixirChat,t=e.graphQLClientSocket,s=e.logInfo;n.messageHistory=[],n.temporaryMessageTempIds=[],clearInterval(n.messageHistoryRequestInterval),s("MessageSubscription: Unsubscribing..."),t.unsubscribe(n.companyMessageSubscription)},this.elixirChat=i}return _createClass(MessageSubscription,[{key:"updateMessageHistoryOnInterval",value:function updateMessageHistoryOnInterval(){var e=this;clearInterval(this.messageHistoryRequestInterval),this.messageHistoryRequestInterval=setInterval(function(){var t,r=(null===(t=s._last(e.messageHistory))||void 0===t?void 0:t.cursor)||null;e.getMessageHistoryByCursor({limit:20,afterCursor:r}).then(function(t){t.forEach(e.onMessageReceive)})},this.MESSAGE_HISTORY_REQUEST_INTERVAL)}},{key:"forgetTemporaryMessage",value:function forgetTemporaryMessage(e){this.temporaryMessageTempIds=this.temporaryMessageTempIds.filter(function(t){return t!==e})}},{key:"doesMessageMatchQuery",value:function doesMessageMatchQuery(e,t){for(var s in t)if(t[s]!==e[s])return!1;return!0}},{key:"getSubmissionErrorCode",value:function getSubmissionErrorCode(e){var t,s,r,a=(null===(r=null===(s=null===(t=e.rawError)||void 0===t?void 0:t.errors)||void 0===s?void 0:s[0])||void 0===r?void 0:r.status)||400;return navigator.onLine||(a=503),a}},{key:"serializeSendMessageParams",value:function serializeSendMessageParams(e){var t="string"==typeof e.text?e.text.trim():"",s=e.tempId,r="string"==typeof e.responseToMessageId?e.responseToMessageId:null,a=[],n={};try{e.attachments.forEach(function(e){var t=e.file;a.push(t.name),n[t.name]=t})}catch(i){}return{variables:{text:t,tempId:s,attachments:a,responseToMessageId:r},binaries:n}}},{key:"generateTemporaryMessage",value:function generateTemporaryMessage(e,r){var a=e.text,n=e.attachments,i=e.responseToMessageId,o=this.messageHistory.filter(function(e){return e.id===i})[0],g=n.map(function(e){var t=e.id,r=e.file,a=e.width,n=e.height,i=URL.createObjectURL(r),o=[];return s.isWebImage(r.type)&&a&&n&&(o=[{id:t,url:i}]),Object.assign(Object.assign({},e),{url:i,thumbnails:o,contentType:r.type,bytesSize:r.size})});return t.serializeMessage(Object.assign({id:s.randomDigitStringId(6),text:a.trim()||"",timestamp:(new Date).toISOString(),responseToMessage:o||{},attachments:g,isSubmitting:!0,sender:{__typename:"Client",foreignId:this.elixirChat.client.id}},r),this.elixirChat)}},{key:"appendMessageConditionally",value:function appendMessageConditionally(t){var s=this.elixirChat,r=s.triggerEvent,a=s.logInfo;this.messageHistory.push(t),this.temporaryMessageTempIds.push(t.tempId),a("Conditionally appended message",{message:t}),r(e.MESSAGES_RECEIVE,t)}},{key:"getMessageHistoryByCursor",value:function getMessageHistoryByCursor(e){var s,a=this,n=this.elixirChat.sendAPIRequest,i=e.limit,o=e.beforeCursor,g=e.afterCursor;return s=o?{last:i,before:o}:g?{first:i,after:g}:{last:i},n(this.messageHistoryQuery,s).then(function(e){return r.simplifyGraphQLJSON(e).map(function(e){return t.serializeMessage(e,a.elixirChat)})})}},{key:"onMessageHistoryChange",value:function onMessageHistoryChange(t){var s=this.elixirChat.triggerEvent;return this.messageHistory=t,s(e.MESSAGES_CHANGE,t),t}}]),MessageSubscription}();exports.MessageSubscription=a;
},{"./ElixirChatEventTypes":"Cteb","./serializers/serializeMessage":"ZEl5","../utilsCommon":"EjGt","./GraphQLClient":"fvSB"}],"qf4T":[function(require,module,exports) {

var e=module.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=e);
},{}],"ss9A":[function(require,module,exports) {
var e=module.exports={version:"2.6.0"};"number"==typeof __e&&(__e=e);
},{}],"M7z6":[function(require,module,exports) {
module.exports=function(o){return"object"==typeof o?null!==o:"function"==typeof o};
},{}],"eT53":[function(require,module,exports) {
var r=require("./_is-object");module.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e};
},{"./_is-object":"M7z6"}],"BXiR":[function(require,module,exports) {
module.exports=function(r){try{return!!r()}catch(t){return!0}};
},{}],"P9Ib":[function(require,module,exports) {
module.exports=!require("./_fails")(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a});
},{"./_fails":"BXiR"}],"vZ6E":[function(require,module,exports) {
var e=require("./_is-object"),r=require("./_global").document,t=e(r)&&e(r.createElement);module.exports=function(e){return t?r.createElement(e):{}};
},{"./_is-object":"M7z6","./_global":"qf4T"}],"o6Gq":[function(require,module,exports) {
module.exports=!require("./_descriptors")&&!require("./_fails")(function(){return 7!=Object.defineProperty(require("./_dom-create")("div"),"a",{get:function(){return 7}}).a});
},{"./_descriptors":"P9Ib","./_fails":"BXiR","./_dom-create":"vZ6E"}],"y37I":[function(require,module,exports) {
var t=require("./_is-object");module.exports=function(r,e){if(!t(r))return r;var o,n;if(e&&"function"==typeof(o=r.toString)&&!t(n=o.call(r)))return n;if("function"==typeof(o=r.valueOf)&&!t(n=o.call(r)))return n;if(!e&&"function"==typeof(o=r.toString)&&!t(n=o.call(r)))return n;throw TypeError("Can't convert object to primitive value")};
},{"./_is-object":"M7z6"}],"nw8e":[function(require,module,exports) {
var e=require("./_an-object"),r=require("./_ie8-dom-define"),t=require("./_to-primitive"),i=Object.defineProperty;exports.f=require("./_descriptors")?Object.defineProperty:function(o,n,u){if(e(o),n=t(n,!0),e(u),r)try{return i(o,n,u)}catch(c){}if("get"in u||"set"in u)throw TypeError("Accessors not supported!");return"value"in u&&(o[n]=u.value),o};
},{"./_an-object":"eT53","./_ie8-dom-define":"o6Gq","./_to-primitive":"y37I","./_descriptors":"P9Ib"}],"uJ6d":[function(require,module,exports) {
module.exports=function(e,r){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:r}};
},{}],"NXbe":[function(require,module,exports) {
var r=require("./_object-dp"),e=require("./_property-desc");module.exports=require("./_descriptors")?function(t,u,o){return r.f(t,u,e(1,o))}:function(r,e,t){return r[e]=t,r};
},{"./_object-dp":"nw8e","./_property-desc":"uJ6d","./_descriptors":"P9Ib"}],"uHgd":[function(require,module,exports) {
var r={}.hasOwnProperty;module.exports=function(e,n){return r.call(e,n)};
},{}],"U49f":[function(require,module,exports) {
var o=0,t=Math.random();module.exports=function(n){return"Symbol(".concat(void 0===n?"":n,")_",(++o+t).toString(36))};
},{}],"PHot":[function(require,module,exports) {

var e=require("./_global"),r=require("./_hide"),t=require("./_has"),i=require("./_uid")("src"),n="toString",o=Function[n],u=(""+o).split(n);require("./_core").inspectSource=function(e){return o.call(e)},(module.exports=function(n,o,c,l){var a="function"==typeof c;a&&(t(c,"name")||r(c,"name",o)),n[o]!==c&&(a&&(t(c,i)||r(c,i,n[o]?""+n[o]:u.join(String(o)))),n===e?n[o]=c:l?n[o]?n[o]=c:r(n,o,c):(delete n[o],r(n,o,c)))})(Function.prototype,n,function(){return"function"==typeof this&&this[i]||o.call(this)});
},{"./_global":"qf4T","./_hide":"NXbe","./_has":"uHgd","./_uid":"U49f","./_core":"ss9A"}],"kYjc":[function(require,module,exports) {
module.exports=function(o){if("function"!=typeof o)throw TypeError(o+" is not a function!");return o};
},{}],"E3Kh":[function(require,module,exports) {
var r=require("./_a-function");module.exports=function(n,t,u){if(r(n),void 0===t)return n;switch(u){case 1:return function(r){return n.call(t,r)};case 2:return function(r,u){return n.call(t,r,u)};case 3:return function(r,u,e){return n.call(t,r,u,e)}}return function(){return n.apply(t,arguments)}};
},{"./_a-function":"kYjc"}],"izCb":[function(require,module,exports) {

var e=require("./_global"),r=require("./_core"),o=require("./_hide"),i=require("./_redefine"),u=require("./_ctx"),n="prototype",t=function(c,f,l){var q,_,a,d,p=c&t.F,v=c&t.G,F=c&t.S,x=c&t.P,y=c&t.B,B=v?e:F?e[f]||(e[f]={}):(e[f]||{})[n],G=v?r:r[f]||(r[f]={}),P=G[n]||(G[n]={});for(q in v&&(l=f),l)a=((_=!p&&B&&void 0!==B[q])?B:l)[q],d=y&&_?u(a,e):x&&"function"==typeof a?u(Function.call,a):a,B&&i(B,q,a,c&t.U),G[q]!=a&&o(G,q,d),x&&P[q]!=a&&(P[q]=a)};e.core=r,t.F=1,t.G=2,t.S=4,t.P=8,t.B=16,t.W=32,t.U=64,t.R=128,module.exports=t;
},{"./_global":"qf4T","./_core":"ss9A","./_hide":"NXbe","./_redefine":"PHot","./_ctx":"E3Kh"}],"Z5df":[function(require,module,exports) {
var r={}.toString;module.exports=function(t){return r.call(t).slice(8,-1)};
},{}],"nGau":[function(require,module,exports) {
var e=require("./_cof");module.exports=Object("z").propertyIsEnumerable(0)?Object:function(r){return"String"==e(r)?r.split(""):Object(r)};
},{"./_cof":"Z5df"}],"BjjL":[function(require,module,exports) {
module.exports=function(o){if(null==o)throw TypeError("Can't call method on  "+o);return o};
},{}],"rfVX":[function(require,module,exports) {
var e=require("./_defined");module.exports=function(r){return Object(e(r))};
},{"./_defined":"BjjL"}],"yjVO":[function(require,module,exports) {
var o=Math.ceil,r=Math.floor;module.exports=function(t){return isNaN(t=+t)?0:(t>0?r:o)(t)};
},{}],"dJBs":[function(require,module,exports) {
var e=require("./_to-integer"),r=Math.min;module.exports=function(t){return t>0?r(e(t),9007199254740991):0};
},{"./_to-integer":"yjVO"}],"JTrm":[function(require,module,exports) {
var r=require("./_cof");module.exports=Array.isArray||function(e){return"Array"==r(e)};
},{"./_cof":"Z5df"}],"H21C":[function(require,module,exports) {
module.exports=!1;
},{}],"zGcK":[function(require,module,exports) {

var r=require("./_core"),e=require("./_global"),o="__core-js_shared__",i=e[o]||(e[o]={});(module.exports=function(r,e){return i[r]||(i[r]=void 0!==e?e:{})})("versions",[]).push({version:r.version,mode:require("./_library")?"pure":"global",copyright:"© 2018 Denis Pushkarev (zloirock.ru)"});
},{"./_core":"ss9A","./_global":"qf4T","./_library":"H21C"}],"AIP1":[function(require,module,exports) {
var e=require("./_shared")("wks"),r=require("./_uid"),o=require("./_global").Symbol,u="function"==typeof o,i=module.exports=function(i){return e[i]||(e[i]=u&&o[i]||(u?o:r)("Symbol."+i))};i.store=e;
},{"./_shared":"zGcK","./_uid":"U49f","./_global":"qf4T"}],"NNbH":[function(require,module,exports) {
var r=require("./_is-object"),e=require("./_is-array"),o=require("./_wks")("species");module.exports=function(i){var t;return e(i)&&("function"!=typeof(t=i.constructor)||t!==Array&&!e(t.prototype)||(t=void 0),r(t)&&null===(t=t[o])&&(t=void 0)),void 0===t?Array:t};
},{"./_is-object":"M7z6","./_is-array":"JTrm","./_wks":"AIP1"}],"igas":[function(require,module,exports) {
var r=require("./_array-species-constructor");module.exports=function(e,n){return new(r(e))(n)};
},{"./_array-species-constructor":"NNbH"}],"AuPh":[function(require,module,exports) {
var e=require("./_ctx"),r=require("./_iobject"),t=require("./_to-object"),i=require("./_to-length"),u=require("./_array-species-create");module.exports=function(n,c){var s=1==n,a=2==n,o=3==n,f=4==n,l=6==n,q=5==n||l,_=c||u;return function(u,c,h){for(var v,p,b=t(u),d=r(b),g=e(c,h,3),j=i(d.length),x=0,m=s?_(u,j):a?_(u,0):void 0;j>x;x++)if((q||x in d)&&(p=g(v=d[x],x,b),n))if(s)m[x]=p;else if(p)switch(n){case 3:return!0;case 5:return v;case 6:return x;case 2:m.push(v)}else if(f)return!1;return l?-1:o||f?f:m}};
},{"./_ctx":"E3Kh","./_iobject":"nGau","./_to-object":"rfVX","./_to-length":"dJBs","./_array-species-create":"igas"}],"Z7eD":[function(require,module,exports) {
var e=require("./_wks")("unscopables"),r=Array.prototype;null==r[e]&&require("./_hide")(r,e,{}),module.exports=function(o){r[e][o]=!0};
},{"./_wks":"AIP1","./_hide":"NXbe"}],"sVmK":[function(require,module,exports) {
"use strict";var r=require("./_export"),e=require("./_array-methods")(6),n="findIndex",i=!0;n in[]&&Array(1)[n](function(){i=!1}),r(r.P+r.F*i,"Array",{findIndex:function(r){return e(this,r,arguments.length>1?arguments[1]:void 0)}}),require("./_add-to-unscopables")(n);
},{"./_export":"izCb","./_array-methods":"AuPh","./_add-to-unscopables":"Z7eD"}],"Qppk":[function(require,module,exports) {
"use strict";var r=require("./_export"),e=require("./_array-methods")(5),i="find",n=!0;i in[]&&Array(1)[i](function(){n=!1}),r(r.P+r.F*n,"Array",{find:function(r){return e(this,r,arguments.length>1?arguments[1]:void 0)}}),require("./_add-to-unscopables")(i);
},{"./_export":"izCb","./_array-methods":"AuPh","./_add-to-unscopables":"Z7eD"}],"N3yi":[function(require,module,exports) {
var r=require("./_object-dp").f,t=Function.prototype,e=/^\s*function ([^ (]*)/,n="name";n in t||require("./_descriptors")&&r(t,n,{configurable:!0,get:function(){try{return(""+this).match(e)[1]}catch(r){return""}}});
},{"./_object-dp":"nw8e","./_descriptors":"P9Ib"}],"EIvU":[function(require,module,exports) {
"use strict";exports.__esModule=!0,exports.default=function(t,n){if(t!==n)throw new TypeError("Cannot instantiate an arrow function")};
},{}],"o7wy":[function(require,module,exports) {
"use strict";function r(r){return function(t,n){return r(n,t)}}function t(r){return function(){return r}}function n(r,t){return function(n,e){return r(t(n),t(e))}}function e(){for(var r=this,t=arguments.length,n=Array(t),e=0;e<t;e++)n[e]=arguments[e];var o=n.length-1;return function(t){for(var e=t,u=o;u>-1;u--)e=n[u].call(r,e);return e}}function o(){for(var r=this,t=arguments.length,n=Array(t),e=0;e<t;e++)n[e]=arguments[e];var o=n.length-1;return function(t){for(var e=t,u=0;u<=o;u++)e=n[u].call(r,e);return e}}function u(r,t,n){return function(){var e=n.concat(Array.prototype.slice.call(arguments));return e.length>=t?r.apply(this,e):u(r,t,e)}}function c(r){return u(r,r.length,[])}Object.defineProperty(exports,"__esModule",{value:!0}),exports.flip=r,exports.constant=t,exports.on=n,exports.compose=e,exports.pipe=o,exports.curry=c;
},{}],"lytE":[function(require,module,exports) {
var e=require("./_to-integer"),r=require("./_defined");module.exports=function(t){return function(n,i){var o,u,c=String(r(n)),d=e(i),a=c.length;return d<0||d>=a?t?"":void 0:(o=c.charCodeAt(d))<55296||o>56319||d+1===a||(u=c.charCodeAt(d+1))<56320||u>57343?t?c.charAt(d):o:t?c.slice(d,d+2):u-56320+(o-55296<<10)+65536}};
},{"./_to-integer":"yjVO","./_defined":"BjjL"}],"kq3x":[function(require,module,exports) {
module.exports=!0;
},{}],"zRh1":[function(require,module,exports) {
var r=require("./_a-function");module.exports=function(n,t,u){if(r(n),void 0===t)return n;switch(u){case 1:return function(r){return n.call(t,r)};case 2:return function(r,u){return n.call(t,r,u)};case 3:return function(r,u,e){return n.call(t,r,u,e)}}return function(){return n.apply(t,arguments)}};
},{"./_a-function":"kYjc"}],"zotD":[function(require,module,exports) {
var r=require("./_is-object");module.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e};
},{"./_is-object":"M7z6"}],"MLNE":[function(require,module,exports) {
module.exports=!require("./_fails")(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a});
},{"./_fails":"BXiR"}],"kxqa":[function(require,module,exports) {
var e=require("./_is-object"),r=require("./_global").document,t=e(r)&&e(r.createElement);module.exports=function(e){return t?r.createElement(e):{}};
},{"./_is-object":"M7z6","./_global":"qf4T"}],"R6c1":[function(require,module,exports) {
module.exports=!require("./_descriptors")&&!require("./_fails")(function(){return 7!=Object.defineProperty(require("./_dom-create")("div"),"a",{get:function(){return 7}}).a});
},{"./_descriptors":"MLNE","./_fails":"BXiR","./_dom-create":"kxqa"}],"EKwp":[function(require,module,exports) {
var t=require("./_is-object");module.exports=function(r,e){if(!t(r))return r;var o,n;if(e&&"function"==typeof(o=r.toString)&&!t(n=o.call(r)))return n;if("function"==typeof(o=r.valueOf)&&!t(n=o.call(r)))return n;if(!e&&"function"==typeof(o=r.toString)&&!t(n=o.call(r)))return n;throw TypeError("Can't convert object to primitive value")};
},{"./_is-object":"M7z6"}],"Gfzd":[function(require,module,exports) {
var e=require("./_an-object"),r=require("./_ie8-dom-define"),t=require("./_to-primitive"),i=Object.defineProperty;exports.f=require("./_descriptors")?Object.defineProperty:function(o,n,u){if(e(o),n=t(n,!0),e(u),r)try{return i(o,n,u)}catch(c){}if("get"in u||"set"in u)throw TypeError("Accessors not supported!");return"value"in u&&(o[n]=u.value),o};
},{"./_an-object":"zotD","./_ie8-dom-define":"R6c1","./_to-primitive":"EKwp","./_descriptors":"MLNE"}],"akPY":[function(require,module,exports) {
var r=require("./_object-dp"),e=require("./_property-desc");module.exports=require("./_descriptors")?function(t,u,o){return r.f(t,u,e(1,o))}:function(r,e,t){return r[e]=t,r};
},{"./_object-dp":"Gfzd","./_property-desc":"uJ6d","./_descriptors":"MLNE"}],"vSO4":[function(require,module,exports) {

var e=require("./_global"),r=require("./_core"),n=require("./_ctx"),t=require("./_hide"),i=require("./_has"),u="prototype",o=function(c,a,f){var l,s,p,h=c&o.F,v=c&o.G,q=c&o.S,w=c&o.P,_=c&o.B,y=c&o.W,d=v?r:r[a]||(r[a]={}),F=d[u],g=v?e:q?e[a]:(e[a]||{})[u];for(l in v&&(f=a),f)(s=!h&&g&&void 0!==g[l])&&i(d,l)||(p=s?g[l]:f[l],d[l]=v&&"function"!=typeof g[l]?f[l]:_&&s?n(p,e):y&&g[l]==p?function(e){var r=function(r,n,t){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(r);case 2:return new e(r,n)}return new e(r,n,t)}return e.apply(this,arguments)};return r[u]=e[u],r}(p):w&&"function"==typeof p?n(Function.call,p):p,w&&((d.virtual||(d.virtual={}))[l]=p,c&o.R&&F&&!F[l]&&t(F,l,p)))};o.F=1,o.G=2,o.S=4,o.P=8,o.B=16,o.W=32,o.U=64,o.R=128,module.exports=o;
},{"./_global":"qf4T","./_core":"ss9A","./_ctx":"zRh1","./_hide":"akPY","./_has":"uHgd"}],"gojl":[function(require,module,exports) {
module.exports=require("./_hide");
},{"./_hide":"akPY"}],"dhak":[function(require,module,exports) {
module.exports={};
},{}],"E5Ce":[function(require,module,exports) {
var e=require("./_cof");module.exports=Object("z").propertyIsEnumerable(0)?Object:function(r){return"String"==e(r)?r.split(""):Object(r)};
},{"./_cof":"Z5df"}],"Wyka":[function(require,module,exports) {
var e=require("./_iobject"),r=require("./_defined");module.exports=function(i){return e(r(i))};
},{"./_iobject":"E5Ce","./_defined":"BjjL"}],"S7IM":[function(require,module,exports) {
var e=require("./_to-integer"),r=Math.min;module.exports=function(t){return t>0?r(e(t),9007199254740991):0};
},{"./_to-integer":"yjVO"}],"Zwq5":[function(require,module,exports) {
var e=require("./_to-integer"),r=Math.max,t=Math.min;module.exports=function(n,a){return(n=e(n))<0?r(n+a,0):t(n,a)};
},{"./_to-integer":"yjVO"}],"LNnS":[function(require,module,exports) {
var e=require("./_to-iobject"),r=require("./_to-length"),t=require("./_to-absolute-index");module.exports=function(n){return function(i,o,u){var f,l=e(i),a=r(l.length),c=t(u,a);if(n&&o!=o){for(;a>c;)if((f=l[c++])!=f)return!0}else for(;a>c;c++)if((n||c in l)&&l[c]===o)return n||c||0;return!n&&-1}};
},{"./_to-iobject":"Wyka","./_to-length":"S7IM","./_to-absolute-index":"Zwq5"}],"NB7d":[function(require,module,exports) {

var r=require("./_core"),e=require("./_global"),o="__core-js_shared__",i=e[o]||(e[o]={});(module.exports=function(r,e){return i[r]||(i[r]=void 0!==e?e:{})})("versions",[]).push({version:r.version,mode:require("./_library")?"pure":"global",copyright:"© 2018 Denis Pushkarev (zloirock.ru)"});
},{"./_core":"ss9A","./_global":"qf4T","./_library":"kq3x"}],"wuYm":[function(require,module,exports) {
var e=require("./_shared")("keys"),r=require("./_uid");module.exports=function(u){return e[u]||(e[u]=r(u))};
},{"./_shared":"NB7d","./_uid":"U49f"}],"B9Lq":[function(require,module,exports) {
var r=require("./_has"),e=require("./_to-iobject"),u=require("./_array-includes")(!1),i=require("./_shared-key")("IE_PROTO");module.exports=function(o,a){var n,s=e(o),t=0,h=[];for(n in s)n!=i&&r(s,n)&&h.push(n);for(;a.length>t;)r(s,n=a[t++])&&(~u(h,n)||h.push(n));return h};
},{"./_has":"uHgd","./_to-iobject":"Wyka","./_array-includes":"LNnS","./_shared-key":"wuYm"}],"KxjL":[function(require,module,exports) {
module.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",");
},{}],"knrM":[function(require,module,exports) {
var e=require("./_object-keys-internal"),r=require("./_enum-bug-keys");module.exports=Object.keys||function(u){return e(u,r)};
},{"./_object-keys-internal":"B9Lq","./_enum-bug-keys":"KxjL"}],"gjjs":[function(require,module,exports) {
var e=require("./_object-dp"),r=require("./_an-object"),t=require("./_object-keys");module.exports=require("./_descriptors")?Object.defineProperties:function(o,i){r(o);for(var u,c=t(i),n=c.length,s=0;n>s;)e.f(o,u=c[s++],i[u]);return o};
},{"./_object-dp":"Gfzd","./_an-object":"zotD","./_object-keys":"knrM","./_descriptors":"MLNE"}],"ebIA":[function(require,module,exports) {
var e=require("./_global").document;module.exports=e&&e.documentElement;
},{"./_global":"qf4T"}],"TNJq":[function(require,module,exports) {
var e=require("./_an-object"),r=require("./_object-dps"),t=require("./_enum-bug-keys"),n=require("./_shared-key")("IE_PROTO"),o=function(){},i="prototype",u=function(){var e,r=require("./_dom-create")("iframe"),n=t.length;for(r.style.display="none",require("./_html").appendChild(r),r.src="javascript:",(e=r.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),u=e.F;n--;)delete u[i][t[n]];return u()};module.exports=Object.create||function(t,c){var a;return null!==t?(o[i]=e(t),a=new o,o[i]=null,a[n]=t):a=u(),void 0===c?a:r(a,c)};
},{"./_an-object":"zotD","./_object-dps":"gjjs","./_enum-bug-keys":"KxjL","./_shared-key":"wuYm","./_dom-create":"kxqa","./_html":"ebIA"}],"Ug9I":[function(require,module,exports) {
var e=require("./_shared")("wks"),r=require("./_uid"),o=require("./_global").Symbol,u="function"==typeof o,i=module.exports=function(i){return e[i]||(e[i]=u&&o[i]||(u?o:r)("Symbol."+i))};i.store=e;
},{"./_shared":"NB7d","./_uid":"U49f","./_global":"qf4T"}],"UtKM":[function(require,module,exports) {
var e=require("./_object-dp").f,r=require("./_has"),o=require("./_wks")("toStringTag");module.exports=function(t,u,i){t&&!r(t=i?t:t.prototype,o)&&e(t,o,{configurable:!0,value:u})};
},{"./_object-dp":"Gfzd","./_has":"uHgd","./_wks":"Ug9I"}],"b7Q2":[function(require,module,exports) {
"use strict";var e=require("./_object-create"),r=require("./_property-desc"),t=require("./_set-to-string-tag"),i={};require("./_hide")(i,require("./_wks")("iterator"),function(){return this}),module.exports=function(o,u,s){o.prototype=e(i,{next:r(1,s)}),t(o,u+" Iterator")};
},{"./_object-create":"TNJq","./_property-desc":"uJ6d","./_set-to-string-tag":"UtKM","./_hide":"akPY","./_wks":"Ug9I"}],"mbLO":[function(require,module,exports) {
var e=require("./_defined");module.exports=function(r){return Object(e(r))};
},{"./_defined":"BjjL"}],"HHE0":[function(require,module,exports) {
var t=require("./_has"),e=require("./_to-object"),o=require("./_shared-key")("IE_PROTO"),r=Object.prototype;module.exports=Object.getPrototypeOf||function(c){return c=e(c),t(c,o)?c[o]:"function"==typeof c.constructor&&c instanceof c.constructor?c.constructor.prototype:c instanceof Object?r:null};
},{"./_has":"uHgd","./_to-object":"mbLO","./_shared-key":"wuYm"}],"uRfg":[function(require,module,exports) {
"use strict";var e=require("./_library"),r=require("./_export"),t=require("./_redefine"),i=require("./_hide"),n=require("./_iterators"),u=require("./_iter-create"),o=require("./_set-to-string-tag"),s=require("./_object-gpo"),a=require("./_wks")("iterator"),c=!([].keys&&"next"in[].keys()),f="@@iterator",l="keys",q="values",y=function(){return this};module.exports=function(_,p,h,k,v,w,d){u(h,p,k);var x,b,g,j=function(e){if(!c&&e in I)return I[e];switch(e){case l:case q:return function(){return new h(this,e)}}return function(){return new h(this,e)}},m=p+" Iterator",A=v==q,F=!1,I=_.prototype,O=I[a]||I[f]||v&&I[v],P=O||j(v),z=v?A?j("entries"):P:void 0,B="Array"==p&&I.entries||O;if(B&&(g=s(B.call(new _)))!==Object.prototype&&g.next&&(o(g,m,!0),e||"function"==typeof g[a]||i(g,a,y)),A&&O&&O.name!==q&&(F=!0,P=function(){return O.call(this)}),e&&!d||!c&&!F&&I[a]||i(I,a,P),n[p]=P,n[m]=y,v)if(x={values:A?P:j(q),keys:w?P:j(l),entries:z},d)for(b in x)b in I||t(I,b,x[b]);else r(r.P+r.F*(c||F),p,x);return x};
},{"./_library":"kq3x","./_export":"vSO4","./_redefine":"gojl","./_hide":"akPY","./_iterators":"dhak","./_iter-create":"b7Q2","./_set-to-string-tag":"UtKM","./_object-gpo":"HHE0","./_wks":"Ug9I"}],"iUHQ":[function(require,module,exports) {
"use strict";var i=require("./_string-at")(!0);require("./_iter-define")(String,"String",function(i){this._t=String(i),this._i=0},function(){var t,e=this._t,n=this._i;return n>=e.length?{value:void 0,done:!0}:(t=i(e,n),this._i+=t.length,{value:t,done:!1})});
},{"./_string-at":"lytE","./_iter-define":"uRfg"}],"ID6i":[function(require,module,exports) {
module.exports=function(){};
},{}],"xwDU":[function(require,module,exports) {
module.exports=function(e,n){return{value:n,done:!!e}};
},{}],"OYXR":[function(require,module,exports) {
"use strict";var e=require("./_add-to-unscopables"),r=require("./_iter-step"),t=require("./_iterators"),i=require("./_to-iobject");module.exports=require("./_iter-define")(Array,"Array",function(e,r){this._t=i(e),this._i=0,this._k=r},function(){var e=this._t,t=this._k,i=this._i++;return!e||i>=e.length?(this._t=void 0,r(1)):r(0,"keys"==t?i:"values"==t?e[i]:[i,e[i]])},"values"),t.Arguments=t.Array,e("keys"),e("values"),e("entries");
},{"./_add-to-unscopables":"ID6i","./_iter-step":"xwDU","./_iterators":"dhak","./_to-iobject":"Wyka","./_iter-define":"uRfg"}],"COf8":[function(require,module,exports) {

require("./es6.array.iterator");for(var t=require("./_global"),e=require("./_hide"),i=require("./_iterators"),r=require("./_wks")("toStringTag"),s="CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","),L=0;L<s.length;L++){var a=s[L],l=t[a],S=l&&l.prototype;S&&!S[r]&&e(S,r,a),i[a]=i.Array}
},{"./es6.array.iterator":"OYXR","./_global":"qf4T","./_hide":"akPY","./_iterators":"dhak","./_wks":"Ug9I"}],"ZxII":[function(require,module,exports) {
exports.f=require("./_wks");
},{"./_wks":"Ug9I"}],"nFDa":[function(require,module,exports) {
require("../../modules/es6.string.iterator"),require("../../modules/web.dom.iterable"),module.exports=require("../../modules/_wks-ext").f("iterator");
},{"../../modules/es6.string.iterator":"iUHQ","../../modules/web.dom.iterable":"COf8","../../modules/_wks-ext":"ZxII"}],"t7tQ":[function(require,module,exports) {
module.exports={default:require("core-js/library/fn/symbol/iterator"),__esModule:!0};
},{"core-js/library/fn/symbol/iterator":"nFDa"}],"e8vu":[function(require,module,exports) {
var e=require("./_uid")("meta"),r=require("./_is-object"),t=require("./_has"),n=require("./_object-dp").f,i=0,u=Object.isExtensible||function(){return!0},f=!require("./_fails")(function(){return u(Object.preventExtensions({}))}),o=function(r){n(r,e,{value:{i:"O"+ ++i,w:{}}})},s=function(n,i){if(!r(n))return"symbol"==typeof n?n:("string"==typeof n?"S":"P")+n;if(!t(n,e)){if(!u(n))return"F";if(!i)return"E";o(n)}return n[e].i},c=function(r,n){if(!t(r,e)){if(!u(r))return!0;if(!n)return!1;o(r)}return r[e].w},E=function(r){return f&&a.NEED&&u(r)&&!t(r,e)&&o(r),r},a=module.exports={KEY:e,NEED:!1,fastKey:s,getWeak:c,onFreeze:E};
},{"./_uid":"U49f","./_is-object":"M7z6","./_has":"uHgd","./_object-dp":"Gfzd","./_fails":"BXiR"}],"c2zY":[function(require,module,exports) {

var r=require("./_global"),e=require("./_core"),o=require("./_library"),i=require("./_wks-ext"),l=require("./_object-dp").f;module.exports=function(u){var a=e.Symbol||(e.Symbol=o?{}:r.Symbol||{});"_"==u.charAt(0)||u in a||l(a,u,{value:i.f(u)})};
},{"./_global":"qf4T","./_core":"ss9A","./_library":"kq3x","./_wks-ext":"ZxII","./_object-dp":"Gfzd"}],"Ocr3":[function(require,module,exports) {
exports.f=Object.getOwnPropertySymbols;
},{}],"z7R8":[function(require,module,exports) {
exports.f={}.propertyIsEnumerable;
},{}],"ycyv":[function(require,module,exports) {
var e=require("./_object-keys"),r=require("./_object-gops"),o=require("./_object-pie");module.exports=function(t){var u=e(t),i=r.f;if(i)for(var c,f=i(t),a=o.f,l=0;f.length>l;)a.call(t,c=f[l++])&&u.push(c);return u};
},{"./_object-keys":"knrM","./_object-gops":"Ocr3","./_object-pie":"z7R8"}],"ayXv":[function(require,module,exports) {
var r=require("./_cof");module.exports=Array.isArray||function(e){return"Array"==r(e)};
},{"./_cof":"Z5df"}],"Ni5N":[function(require,module,exports) {
var e=require("./_object-keys-internal"),r=require("./_enum-bug-keys").concat("length","prototype");exports.f=Object.getOwnPropertyNames||function(t){return e(t,r)};
},{"./_object-keys-internal":"B9Lq","./_enum-bug-keys":"KxjL"}],"rMkZ":[function(require,module,exports) {
var e=require("./_to-iobject"),t=require("./_object-gopn").f,o={}.toString,r="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],n=function(e){try{return t(e)}catch(o){return r.slice()}};module.exports.f=function(c){return r&&"[object Window]"==o.call(c)?n(c):t(e(c))};
},{"./_to-iobject":"Wyka","./_object-gopn":"Ni5N"}],"sxPs":[function(require,module,exports) {
var e=require("./_object-pie"),r=require("./_property-desc"),i=require("./_to-iobject"),t=require("./_to-primitive"),o=require("./_has"),c=require("./_ie8-dom-define"),u=Object.getOwnPropertyDescriptor;exports.f=require("./_descriptors")?u:function(p,q){if(p=i(p),q=t(q,!0),c)try{return u(p,q)}catch(_){}if(o(p,q))return r(!e.f.call(p,q),p[q])};
},{"./_object-pie":"z7R8","./_property-desc":"uJ6d","./_to-iobject":"Wyka","./_to-primitive":"EKwp","./_has":"uHgd","./_ie8-dom-define":"R6c1","./_descriptors":"MLNE"}],"Aa2f":[function(require,module,exports) {

"use strict";var e=require("./_global"),r=require("./_has"),t=require("./_descriptors"),i=require("./_export"),n=require("./_redefine"),o=require("./_meta").KEY,u=require("./_fails"),s=require("./_shared"),f=require("./_set-to-string-tag"),a=require("./_uid"),c=require("./_wks"),l=require("./_wks-ext"),p=require("./_wks-define"),b=require("./_enum-keys"),h=require("./_is-array"),y=require("./_an-object"),_=require("./_is-object"),q=require("./_to-iobject"),g=require("./_to-primitive"),m=require("./_property-desc"),v=require("./_object-create"),d=require("./_object-gopn-ext"),S=require("./_object-gopd"),j=require("./_object-dp"),O=require("./_object-keys"),k=S.f,w=j.f,P=d.f,E=e.Symbol,F=e.JSON,N=F&&F.stringify,J="prototype",x=c("_hidden"),I=c("toPrimitive"),T={}.propertyIsEnumerable,C=s("symbol-registry"),M=s("symbols"),D=s("op-symbols"),G=Object[J],K="function"==typeof E,Q=e.QObject,W=!Q||!Q[J]||!Q[J].findChild,Y=t&&u(function(){return 7!=v(w({},"a",{get:function(){return w(this,"a",{value:7}).a}})).a})?function(e,r,t){var i=k(G,r);i&&delete G[r],w(e,r,t),i&&e!==G&&w(G,r,i)}:w,z=function(e){var r=M[e]=v(E[J]);return r._k=e,r},A=K&&"symbol"==typeof E.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof E},B=function(e,t,i){return e===G&&B(D,t,i),y(e),t=g(t,!0),y(i),r(M,t)?(i.enumerable?(r(e,x)&&e[x][t]&&(e[x][t]=!1),i=v(i,{enumerable:m(0,!1)})):(r(e,x)||w(e,x,m(1,{})),e[x][t]=!0),Y(e,t,i)):w(e,t,i)},H=function(e,r){y(e);for(var t,i=b(r=q(r)),n=0,o=i.length;o>n;)B(e,t=i[n++],r[t]);return e},L=function(e,r){return void 0===r?v(e):H(v(e),r)},R=function(e){var t=T.call(this,e=g(e,!0));return!(this===G&&r(M,e)&&!r(D,e))&&(!(t||!r(this,e)||!r(M,e)||r(this,x)&&this[x][e])||t)},U=function(e,t){if(e=q(e),t=g(t,!0),e!==G||!r(M,t)||r(D,t)){var i=k(e,t);return!i||!r(M,t)||r(e,x)&&e[x][t]||(i.enumerable=!0),i}},V=function(e){for(var t,i=P(q(e)),n=[],u=0;i.length>u;)r(M,t=i[u++])||t==x||t==o||n.push(t);return n},X=function(e){for(var t,i=e===G,n=P(i?D:q(e)),o=[],u=0;n.length>u;)!r(M,t=n[u++])||i&&!r(G,t)||o.push(M[t]);return o};K||(n((E=function(){if(this instanceof E)throw TypeError("Symbol is not a constructor!");var e=a(arguments.length>0?arguments[0]:void 0),i=function(t){this===G&&i.call(D,t),r(this,x)&&r(this[x],e)&&(this[x][e]=!1),Y(this,e,m(1,t))};return t&&W&&Y(G,e,{configurable:!0,set:i}),z(e)})[J],"toString",function(){return this._k}),S.f=U,j.f=B,require("./_object-gopn").f=d.f=V,require("./_object-pie").f=R,require("./_object-gops").f=X,t&&!require("./_library")&&n(G,"propertyIsEnumerable",R,!0),l.f=function(e){return z(c(e))}),i(i.G+i.W+i.F*!K,{Symbol:E});for(var Z="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),$=0;Z.length>$;)c(Z[$++]);for(var ee=O(c.store),re=0;ee.length>re;)p(ee[re++]);i(i.S+i.F*!K,"Symbol",{for:function(e){return r(C,e+="")?C[e]:C[e]=E(e)},keyFor:function(e){if(!A(e))throw TypeError(e+" is not a symbol!");for(var r in C)if(C[r]===e)return r},useSetter:function(){W=!0},useSimple:function(){W=!1}}),i(i.S+i.F*!K,"Object",{create:L,defineProperty:B,defineProperties:H,getOwnPropertyDescriptor:U,getOwnPropertyNames:V,getOwnPropertySymbols:X}),F&&i(i.S+i.F*(!K||u(function(){var e=E();return"[null]"!=N([e])||"{}"!=N({a:e})||"{}"!=N(Object(e))})),"JSON",{stringify:function(e){for(var r,t,i=[e],n=1;arguments.length>n;)i.push(arguments[n++]);if(t=r=i[1],(_(r)||void 0!==e)&&!A(e))return h(r)||(r=function(e,r){if("function"==typeof t&&(r=t.call(this,e,r)),!A(r))return r}),i[1]=r,N.apply(F,i)}}),E[J][I]||require("./_hide")(E[J],I,E[J].valueOf),f(E,"Symbol"),f(Math,"Math",!0),f(e.JSON,"JSON",!0);
},{"./_global":"qf4T","./_has":"uHgd","./_descriptors":"MLNE","./_export":"vSO4","./_redefine":"gojl","./_meta":"e8vu","./_fails":"BXiR","./_shared":"NB7d","./_set-to-string-tag":"UtKM","./_uid":"U49f","./_wks":"Ug9I","./_wks-ext":"ZxII","./_wks-define":"c2zY","./_enum-keys":"ycyv","./_is-array":"ayXv","./_an-object":"zotD","./_is-object":"M7z6","./_to-iobject":"Wyka","./_to-primitive":"EKwp","./_property-desc":"uJ6d","./_object-create":"TNJq","./_object-gopn-ext":"rMkZ","./_object-gopd":"sxPs","./_object-dp":"Gfzd","./_object-keys":"knrM","./_object-gopn":"Ni5N","./_object-pie":"z7R8","./_object-gops":"Ocr3","./_library":"kq3x","./_hide":"akPY"}],"tuDi":[function(require,module,exports) {

},{}],"c6mp":[function(require,module,exports) {
require("./_wks-define")("asyncIterator");
},{"./_wks-define":"c2zY"}],"mwfR":[function(require,module,exports) {
require("./_wks-define")("observable");
},{"./_wks-define":"c2zY"}],"Ky5l":[function(require,module,exports) {
require("../../modules/es6.symbol"),require("../../modules/es6.object.to-string"),require("../../modules/es7.symbol.async-iterator"),require("../../modules/es7.symbol.observable"),module.exports=require("../../modules/_core").Symbol;
},{"../../modules/es6.symbol":"Aa2f","../../modules/es6.object.to-string":"tuDi","../../modules/es7.symbol.async-iterator":"c6mp","../../modules/es7.symbol.observable":"mwfR","../../modules/_core":"ss9A"}],"ibPW":[function(require,module,exports) {
module.exports={default:require("core-js/library/fn/symbol"),__esModule:!0};
},{"core-js/library/fn/symbol":"Ky5l"}],"GyBZ":[function(require,module,exports) {
"use strict";exports.__esModule=!0;var t=require("../core-js/symbol/iterator"),e=n(t),o=require("../core-js/symbol"),u=n(o),f="function"==typeof u.default&&"symbol"==typeof e.default?function(t){return typeof t}:function(t){return t&&"function"==typeof u.default&&t.constructor===u.default&&t!==u.default.prototype?"symbol":typeof t};function n(t){return t&&t.__esModule?t:{default:t}}exports.default="function"==typeof u.default&&"symbol"===f(e.default)?function(t){return void 0===t?"undefined":f(t)}:function(t){return t&&"function"==typeof u.default&&t.constructor===u.default&&t!==u.default.prototype?"symbol":void 0===t?"undefined":f(t)};
},{"../core-js/symbol/iterator":"t7tQ","../core-js/symbol":"ibPW"}],"hEIm":[function(require,module,exports) {
var r=require("./_an-object");module.exports=function(t,e,o,a){try{return a?e(r(o)[0],o[1]):e(o)}catch(n){var c=t.return;throw void 0!==c&&r(c.call(t)),n}};
},{"./_an-object":"zotD"}],"af0K":[function(require,module,exports) {
var r=require("./_iterators"),e=require("./_wks")("iterator"),t=Array.prototype;module.exports=function(o){return void 0!==o&&(r.Array===o||t[e]===o)};
},{"./_iterators":"dhak","./_wks":"Ug9I"}],"vUQk":[function(require,module,exports) {
"use strict";var e=require("./_object-dp"),r=require("./_property-desc");module.exports=function(t,i,o){i in t?e.f(t,i,r(0,o)):t[i]=o};
},{"./_object-dp":"Gfzd","./_property-desc":"uJ6d"}],"ZHvQ":[function(require,module,exports) {
var e=require("./_cof"),t=require("./_wks")("toStringTag"),n="Arguments"==e(function(){return arguments}()),r=function(e,t){try{return e[t]}catch(n){}};module.exports=function(u){var o,c,i;return void 0===u?"Undefined":null===u?"Null":"string"==typeof(c=r(o=Object(u),t))?c:n?e(o):"Object"==(i=e(o))&&"function"==typeof o.callee?"Arguments":i};
},{"./_cof":"Z5df","./_wks":"Ug9I"}],"AqTK":[function(require,module,exports) {
var r=require("./_classof"),e=require("./_wks")("iterator"),t=require("./_iterators");module.exports=require("./_core").getIteratorMethod=function(o){if(null!=o)return o[e]||o["@@iterator"]||t[r(o)]};
},{"./_classof":"ZHvQ","./_wks":"Ug9I","./_iterators":"dhak","./_core":"ss9A"}],"Lli7":[function(require,module,exports) {
var r=require("./_wks")("iterator"),t=!1;try{var n=[7][r]();n.return=function(){t=!0},Array.from(n,function(){throw 2})}catch(e){}module.exports=function(n,u){if(!u&&!t)return!1;var o=!1;try{var c=[7],a=c[r]();a.next=function(){return{done:o=!0}},c[r]=function(){return a},n(c)}catch(e){}return o};
},{"./_wks":"Ug9I"}],"N484":[function(require,module,exports) {
"use strict";var e=require("./_ctx"),r=require("./_export"),t=require("./_to-object"),i=require("./_iter-call"),o=require("./_is-array-iter"),u=require("./_to-length"),n=require("./_create-property"),a=require("./core.get-iterator-method");r(r.S+r.F*!require("./_iter-detect")(function(e){Array.from(e)}),"Array",{from:function(r){var l,c,f,q,_=t(r),h="function"==typeof this?this:Array,v=arguments.length,y=v>1?arguments[1]:void 0,d=void 0!==y,s=0,g=a(_);if(d&&(y=e(y,v>2?arguments[2]:void 0,2)),null==g||h==Array&&o(g))for(c=new h(l=u(_.length));l>s;s++)n(c,s,d?y(_[s],s):_[s]);else for(q=g.call(_),c=new h;!(f=q.next()).done;s++)n(c,s,d?i(q,y,[f.value,s],!0):f.value);return c.length=s,c}});
},{"./_ctx":"zRh1","./_export":"vSO4","./_to-object":"mbLO","./_iter-call":"hEIm","./_is-array-iter":"af0K","./_to-length":"S7IM","./_create-property":"vUQk","./core.get-iterator-method":"AqTK","./_iter-detect":"Lli7"}],"O35A":[function(require,module,exports) {
require("../../modules/es6.string.iterator"),require("../../modules/es6.array.from"),module.exports=require("../../modules/_core").Array.from;
},{"../../modules/es6.string.iterator":"iUHQ","../../modules/es6.array.from":"N484","../../modules/_core":"ss9A"}],"VuZO":[function(require,module,exports) {
module.exports={default:require("core-js/library/fn/array/from"),__esModule:!0};
},{"core-js/library/fn/array/from":"O35A"}],"mYpx":[function(require,module,exports) {
"use strict";exports.__esModule=!0;var r=require("../core-js/array/from"),e=t(r);function t(r){return r&&r.__esModule?r:{default:r}}exports.default=function(r){if(Array.isArray(r)){for(var t=0,u=Array(r.length);t<r.length;t++)u[t]=r[t];return u}return(0,e.default)(r)};
},{"../core-js/array/from":"VuZO"}],"uj5A":[function(require,module,exports) {
"use strict";var e=require("./_object-keys"),r=require("./_object-gops"),t=require("./_object-pie"),o=require("./_to-object"),i=require("./_iobject"),c=Object.assign;module.exports=!c||require("./_fails")(function(){var e={},r={},t=Symbol(),o="abcdefghijklmnopqrst";return e[t]=7,o.split("").forEach(function(e){r[e]=e}),7!=c({},e)[t]||Object.keys(c({},r)).join("")!=o})?function(c,n){for(var u=o(c),s=arguments.length,a=1,f=r.f,b=t.f;s>a;)for(var j,l=i(arguments[a++]),q=f?e(l).concat(f(l)):e(l),_=q.length,g=0;_>g;)b.call(l,j=q[g++])&&(u[j]=l[j]);return u}:c;
},{"./_object-keys":"knrM","./_object-gops":"Ocr3","./_object-pie":"z7R8","./_to-object":"mbLO","./_iobject":"E5Ce","./_fails":"BXiR"}],"YD0x":[function(require,module,exports) {
var e=require("./_export");e(e.S+e.F,"Object",{assign:require("./_object-assign")});
},{"./_export":"vSO4","./_object-assign":"uj5A"}],"vcHl":[function(require,module,exports) {
require("../../modules/es6.object.assign"),module.exports=require("../../modules/_core").Object.assign;
},{"../../modules/es6.object.assign":"YD0x","../../modules/_core":"ss9A"}],"gc0D":[function(require,module,exports) {
module.exports={default:require("core-js/library/fn/object/assign"),__esModule:!0};
},{"core-js/library/fn/object/assign":"vcHl"}],"T4f3":[function(require,module,exports) {
"use strict";exports.__esModule=!0;var e=require("../core-js/object/assign"),r=t(e);function t(e){return e&&e.__esModule?e:{default:e}}exports.default=r.default||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e};
},{"../core-js/object/assign":"gc0D"}],"cOHw":[function(require,module,exports) {
var e=require("./_export"),r=require("./_core"),t=require("./_fails");module.exports=function(c,i){var o=(r.Object||{})[c]||Object[c],u={};u[c]=i(o),e(e.S+e.F*t(function(){o(1)}),"Object",u)};
},{"./_export":"vSO4","./_core":"ss9A","./_fails":"BXiR"}],"PDcB":[function(require,module,exports) {
var e=require("./_to-object"),r=require("./_object-keys");require("./_object-sap")("keys",function(){return function(t){return r(e(t))}});
},{"./_to-object":"mbLO","./_object-keys":"knrM","./_object-sap":"cOHw"}],"eOjq":[function(require,module,exports) {
require("../../modules/es6.object.keys"),module.exports=require("../../modules/_core").Object.keys;
},{"../../modules/es6.object.keys":"PDcB","../../modules/_core":"ss9A"}],"FtNa":[function(require,module,exports) {
module.exports={default:require("core-js/library/fn/object/keys"),__esModule:!0};
},{"core-js/library/fn/object/keys":"eOjq"}],"Kpws":[function(require,module,exports) {
var e=require("./_is-object"),r=Math.floor;module.exports=function(i){return!e(i)&&isFinite(i)&&r(i)===i};
},{"./_is-object":"M7z6"}],"oDsm":[function(require,module,exports) {
var e=require("./_export");e(e.S,"Number",{isInteger:require("./_is-integer")});
},{"./_export":"vSO4","./_is-integer":"Kpws"}],"hCBp":[function(require,module,exports) {
require("../../modules/es6.number.is-integer"),module.exports=require("../../modules/_core").Number.isInteger;
},{"../../modules/es6.number.is-integer":"oDsm","../../modules/_core":"ss9A"}],"OPHC":[function(require,module,exports) {
module.exports={default:require("core-js/library/fn/number/is-integer"),__esModule:!0};
},{"core-js/library/fn/number/is-integer":"hCBp"}],"zCAL":[function(require,module,exports) {
"use strict";exports.__esModule=!0,exports.default=function(e,r){var t={};for(var o in e)r.indexOf(o)>=0||Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t};
},{}],"YuTU":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.resolveIndex=exports.replace=exports.repeat=exports.remove=exports.reduceWhile=exports.reduceIf=exports.prepend=exports.isPossibleFromObject=exports.isLastIndex=exports.isKey=exports.insert=exports.fromObject=exports.cycleNext=exports.convertIfNot=exports.append=void 0;var e=a(require("babel-runtime/helpers/toConsumableArray")),r=a(require("babel-runtime/helpers/newArrowCheck")),t=require("flow-static-land/lib/Fun"),i=a(require("babel-runtime/helpers/extends")),n=a(require("babel-runtime/core-js/array/from")),u=a(require("babel-runtime/core-js/object/keys")),o=a(require("babel-runtime/core-js/number/is-integer")),d=a(require("babel-runtime/helpers/objectWithoutProperties"));function a(e){return e&&e.__esModule?e:{default:e}}var s=void 0,l=function(t,i){return(0,r.default)(this,s),[].concat((0,e.default)(i),(0,e.default)(t))}.bind(void 0),c=(0,t.curry)(l);exports.append=c;var f=void 0,v=function(e){return(0,r.default)(this,f),Array.isArray(e)?e:[e]}.bind(void 0);exports.convertIfNot=v;var p=void 0,b=function(e,t){return(0,r.default)(this,p),t===e.length-1}.bind(void 0),h=(0,t.curry)(b);exports.isLastIndex=h;var x=void 0,y=function(e,t){return(0,r.default)(this,x),h(e,t)?0:t+1}.bind(void 0),m=(0,t.curry)(y);exports.cycleNext=m;var j=void 0,g=function(t){return(0,r.default)(this,j),Math.max.apply(Math,(0,e.default)((0,u.default)(t)))+1}.bind(void 0),q=function(e){return(0,r.default)(this,j),(0,n.default)("length"in e?e:(0,i.default)({},e,{length:g(e)}))}.bind(void 0);exports.fromObject=q;var I=void 0,A=function(t,i,n){return(0,r.default)(this,I),[].concat((0,e.default)(n.slice(0,t)),(0,e.default)(i),(0,e.default)(n.slice(t+1)))}.bind(void 0),N=(0,t.curry)(A);exports.insert=N;var O=void 0,M=function(e,t){return(0,r.default)(this,O),(0,o.default)(e)&&e>=t}.bind(void 0),P=function(e){return(0,r.default)(this,O),M(Number(e),0)}.bind(void 0);exports.isKey=P;var _=void 0,w=function(e){e.length;var t=(0,d.default)(e,["length"]);return(0,r.default)(this,_),(0,u.default)(t).every(P)}.bind(void 0);exports.isPossibleFromObject=w;var F=void 0,W=function(t,i){return(0,r.default)(this,F),[].concat((0,e.default)(t),(0,e.default)(i))}.bind(void 0),k=(0,t.curry)(W);exports.prepend=k;var C=void 0,K=function(e,t,i,n){return(0,r.default)(this,C),n.reduce(function(i,n,u){return(0,r.default)(this,C),e(n,u,i)?t(i,n,u):i}.bind(this),i)}.bind(void 0),L=(0,t.curry)(K);exports.reduceIf=L;var z=void 0,B=function(e,t,i,n){(0,r.default)(this,z);var u=i;return n.every(function(i,n){(0,r.default)(this,z);var o=e(i,n,u);return o&&(u=t(u,i,n)),o}.bind(this)),u}.bind(void 0),D=(0,t.curry)(B);exports.reduceWhile=D;var E=void 0,G=function(t,i,n){return(0,r.default)(this,E),[].concat((0,e.default)(n.slice(0,t)),(0,e.default)(n.slice(t+i)))}.bind(void 0),H=(0,t.curry)(G);exports.remove=H;var J=void 0,Q=function(t,i){return(0,r.default)(this,J),[].concat((0,e.default)(Array(t))).map(function(){return(0,r.default)(this,J),i}.bind(this))}.bind(void 0),R=(0,t.curry)(Q);exports.repeat=R;var S=void 0,T=function(t,i,n){return(0,r.default)(this,S),[].concat((0,e.default)(n.slice(0,t)),(0,e.default)(i),(0,e.default)(n.slice(t+i.length)))}.bind(void 0),U=(0,t.curry)(T);exports.replace=U;var V=void 0,X=function(e,t){return(0,r.default)(this,V),t<0?e.length-t:t}.bind(void 0),Y=(0,t.curry)(X);exports.resolveIndex=Y;
},{"babel-runtime/helpers/toConsumableArray":"mYpx","babel-runtime/helpers/newArrowCheck":"EIvU","flow-static-land/lib/Fun":"o7wy","babel-runtime/helpers/extends":"T4f3","babel-runtime/core-js/array/from":"VuZO","babel-runtime/core-js/object/keys":"FtNa","babel-runtime/core-js/number/is-integer":"OPHC","babel-runtime/helpers/objectWithoutProperties":"zCAL"}],"jIGR":[function(require,module,exports) {
"use strict";module.exports=function r(e,t){if(e===t)return!0;var n,i=Array.isArray(e),f=Array.isArray(t);if(i&&f){if(e.length!=t.length)return!1;for(n=0;n<e.length;n++)if(!r(e[n],t[n]))return!1;return!0}if(i!=f)return!1;if(e&&t&&"object"==typeof e&&"object"==typeof t){var o=Object.keys(e);if(o.length!==Object.keys(t).length)return!1;var u=e instanceof Date,a=t instanceof Date;if(u&&a)return e.getTime()==t.getTime();if(u!=a)return!1;var g=e instanceof RegExp,c=t instanceof RegExp;if(g&&c)return e.toString()==t.toString();if(g!=c)return!1;for(n=0;n<o.length;n++)if(!Object.prototype.hasOwnProperty.call(t,o[n]))return!1;for(n=0;n<o.length;n++)if(!r(e[o[n]],t[o[n]]))return!1;return!0}return!1};
},{}],"htFH":[function(require,module,exports) {
var e=require("./_export");e(e.S+e.F*!require("./_descriptors"),"Object",{defineProperty:require("./_object-dp").f});
},{"./_export":"vSO4","./_descriptors":"MLNE","./_object-dp":"Gfzd"}],"v7pm":[function(require,module,exports) {
require("../../modules/es6.object.define-property");var e=require("../../modules/_core").Object;module.exports=function(r,o,t){return e.defineProperty(r,o,t)};
},{"../../modules/es6.object.define-property":"htFH","../../modules/_core":"ss9A"}],"FFZn":[function(require,module,exports) {
module.exports={default:require("core-js/library/fn/object/define-property"),__esModule:!0};
},{"core-js/library/fn/object/define-property":"v7pm"}],"Xos8":[function(require,module,exports) {
"use strict";exports.__esModule=!0;var e=require("../core-js/object/define-property"),r=t(e);function t(e){return e&&e.__esModule?e:{default:e}}exports.default=function(e,t,u){return t in e?(0,r.default)(e,t,{value:u,enumerable:!0,configurable:!0,writable:!0}):e[t]=u,e};
},{"../core-js/object/define-property":"FFZn"}],"By4a":[function(require,module,exports) {
var r=require("./_classof"),e=require("./_wks")("iterator"),t=require("./_iterators");module.exports=require("./_core").isIterable=function(i){var o=Object(i);return void 0!==o[e]||"@@iterator"in o||t.hasOwnProperty(r(o))};
},{"./_classof":"ZHvQ","./_wks":"Ug9I","./_iterators":"dhak","./_core":"ss9A"}],"TEgB":[function(require,module,exports) {
require("../modules/web.dom.iterable"),require("../modules/es6.string.iterator"),module.exports=require("../modules/core.is-iterable");
},{"../modules/web.dom.iterable":"COf8","../modules/es6.string.iterator":"iUHQ","../modules/core.is-iterable":"By4a"}],"gkZy":[function(require,module,exports) {
module.exports={default:require("core-js/library/fn/is-iterable"),__esModule:!0};
},{"core-js/library/fn/is-iterable":"TEgB"}],"ugM7":[function(require,module,exports) {
var r=require("./_an-object"),e=require("./core.get-iterator-method");module.exports=require("./_core").getIterator=function(t){var o=e(t);if("function"!=typeof o)throw TypeError(t+" is not iterable!");return r(o.call(t))};
},{"./_an-object":"zotD","./core.get-iterator-method":"AqTK","./_core":"ss9A"}],"Lvd3":[function(require,module,exports) {
require("../modules/web.dom.iterable"),require("../modules/es6.string.iterator"),module.exports=require("../modules/core.get-iterator");
},{"../modules/web.dom.iterable":"COf8","../modules/es6.string.iterator":"iUHQ","../modules/core.get-iterator":"ugM7"}],"X9RM":[function(require,module,exports) {
module.exports={default:require("core-js/library/fn/get-iterator"),__esModule:!0};
},{"core-js/library/fn/get-iterator":"Lvd3"}],"m8OI":[function(require,module,exports) {
"use strict";exports.__esModule=!0;var r=require("../core-js/is-iterable"),e=u(r),t=require("../core-js/get-iterator"),n=u(t);function u(r){return r&&r.__esModule?r:{default:r}}exports.default=function(){return function(r,t){if(Array.isArray(r))return r;if((0,e.default)(Object(r)))return function(r,e){var t=[],u=!0,i=!1,a=void 0;try{for(var o,l=(0,n.default)(r);!(u=(o=l.next()).done)&&(t.push(o.value),!e||t.length!==e);u=!0);}catch(f){i=!0,a=f}finally{try{!u&&l.return&&l.return()}finally{if(i)throw a}}return t}(r,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();
},{"../core-js/is-iterable":"gkZy","../core-js/get-iterator":"X9RM"}],"dAR4":[function(require,module,exports) {
var e=require("./_object-keys"),r=require("./_to-iobject"),t=require("./_object-pie").f;module.exports=function(o){return function(u){for(var i,n=r(u),c=e(n),f=c.length,l=0,a=[];f>l;)t.call(n,i=c[l++])&&a.push(o?[i,n[i]]:n[i]);return a}};
},{"./_object-keys":"knrM","./_to-iobject":"Wyka","./_object-pie":"z7R8"}],"Omhj":[function(require,module,exports) {
var r=require("./_export"),e=require("./_object-to-array")(!0);r(r.S,"Object",{entries:function(r){return e(r)}});
},{"./_export":"vSO4","./_object-to-array":"dAR4"}],"lQ0T":[function(require,module,exports) {
require("../../modules/es7.object.entries"),module.exports=require("../../modules/_core").Object.entries;
},{"../../modules/es7.object.entries":"Omhj","../../modules/_core":"ss9A"}],"FgrW":[function(require,module,exports) {
module.exports={default:require("core-js/library/fn/object/entries"),__esModule:!0};
},{"core-js/library/fn/object/entries":"lQ0T"}],"Q0fQ":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.updateIn=exports.toUndefinedIfEmpty=exports.shallowEqual=exports.shallowCopy=exports.setIn=exports.set=exports.removeIn=exports.remove=exports.map=exports.isEmpty=exports.is=exports.haveSameProps=exports.hasKey=exports.hasIn=exports.getKeys=exports.getIn=exports.get=void 0;var e=c(require("babel-runtime/helpers/newArrowCheck")),t=require("flow-static-land/lib/Fun"),r=c(require("babel-runtime/helpers/typeof")),i=require("@jumpn/utils-array"),n=c(require("babel-runtime/core-js/object/keys")),u=c(require("babel-runtime/helpers/toConsumableArray")),o=c(require("fast-deep-equal")),d=c(require("babel-runtime/helpers/defineProperty")),s=c(require("babel-runtime/helpers/extends")),a=c(require("babel-runtime/helpers/slicedToArray")),f=c(require("babel-runtime/core-js/object/entries")),l=c(require("babel-runtime/helpers/objectWithoutProperties")),v=c(require("babel-runtime/core-js/symbol"));function c(e){return e&&e.__esModule?e:{default:e}}var p=void 0,b=function(t,r){return(0,e.default)(this,p),r[t]}.bind(void 0),h=(0,t.curry)(b),y=void 0,x=function(t){return(0,e.default)(this,y),null!==t&&"object"===(void 0===t?"undefined":(0,r.default)(t))}.bind(void 0),m=function(t){return(0,e.default)(this,y),Array.isArray(t)||x(t)}.bind(void 0),A=void 0,g=function(t,r,n){return(0,e.default)(this,A),(0,i.isLastIndex)(r,t)?n:j(t+1,r,n)}.bind(void 0),q=function(t,i,n){return(0,e.default)(this,A),"Expected to find a composite at ["+String(i.join(", "))+"]["+String(t)+"], but instead got: "+(void 0===n?"undefined":(0,r.default)(n))}.bind(void 0),I=function(t,r,i){if((0,e.default)(this,A),m(i))return i;throw new Error(q(t,r,i))}.bind(void 0),j=function(t,r,i){return(0,e.default)(this,A),void 0===i?void 0:g(t,r,h(r[t],I(t,r,i)))}.bind(void 0),w=function(t,r){return(0,e.default)(this,A),0===t.length?void 0:j(0,t,r)}.bind(void 0),E=(0,t.curry)(w),P=void 0,C=function(t){return(0,e.default)(this,P),Array.isArray(t)?[].concat((0,u.default)(t.keys())):(0,n.default)(t)}.bind(void 0),K=void 0,S=function(t,r,i){return(0,e.default)(this,K),(0,o.default)(E(t,i),r)}.bind(void 0),_=(0,t.curry)(S),k=void 0,O=function(t,r){return(0,e.default)(this,k),Object.prototype.hasOwnProperty.call(r,t)}.bind(void 0),L=(0,t.curry)(O),M=void 0,N=function(t,r){(0,e.default)(this,M);var i=C(t);return i.length===C(r).length&&i.every(function(i){return(0,e.default)(this,M),L(i,r)&&h(i,t)===h(i,r)}.bind(this))}.bind(void 0),U=(0,t.curry)(N),B=void 0,F=function(t){return(0,e.default)(this,B),0===C(t).length}.bind(void 0),T=void 0,W=function(t,r){return(0,e.default)(this,T),(0,f.default)(r).reduce(function(i,n){var u=(0,a.default)(n,2),o=u[0],f=u[1];return(0,e.default)(this,T),(0,s.default)({},i,(0,d.default)({},o,t(f,o,r)))}.bind(this),{})}.bind(void 0),z=function(t,r){return(0,e.default)(this,T),Array.isArray(r)?r.map(t):W(t,r)}.bind(void 0),D=(0,t.curry)(z),G=void 0,H=function(t,r){r[t];var i=(0,l.default)(r,[t]);return(0,e.default)(this,G),i}.bind(void 0),J=function(t,r){return(0,e.default)(this,G),Array.isArray(r)?(0,i.remove)(t,1,r):H(t,r)}.bind(void 0),Q=(0,t.curry)(J),R=void 0,V=function(t){return(0,e.default)(this,R),Array.isArray(t)?[].concat((0,u.default)(t)):(0,s.default)({},t)}.bind(void 0),X=void 0,Y=function(t){(0,e.default)(this,X);var r=V(t);return{origin:r,current:r,previous:void 0}}.bind(void 0),Z=function(t,r,i){return(0,e.default)(this,X),i[t]=r,h(t,i)}.bind(void 0),$=function(t,r,i,n){return(0,e.default)(this,X),(0,s.default)({},n,{current:Z(t[r],i,n.current),previous:n.current})}.bind(void 0),ee=function(t,r,i){(0,e.default)(this,X);var n=Q(t[r],i.current);return 0===r?(0,s.default)({},i,{current:n,origin:n}):(0,s.default)({},i,{previous:Z(t[r-1],n,i.previous)})}.bind(void 0),te=(0,v.default)("composite.updateIn.removeAction"),re=function(t,r,i,n){return(0,e.default)(this,X),i===te?ee(t,r,n):$(t,r,i,n)}.bind(void 0),ie=function(t){return(0,e.default)(this,X),"number"==typeof t?[]:{}}.bind(void 0),ne=function(t,r,i){return(0,e.default)(this,X),L(t,i)?V(h(t,i)):ie(r)}.bind(void 0),ue=function(t,r,n,u){return(0,e.default)(this,X),(0,i.isLastIndex)(t,n)?r(h(t[n],u)):ne(t[n],t[n+1],u)}.bind(void 0),oe=function(t,r){return(0,e.default)(this,X),function(i,n,u){return(0,e.default)(this,X),re(t,u,ue(t,r,u,i.current),i)}.bind(this)}.bind(void 0),de=function(t,r,i){return(0,e.default)(this,X),0===t.length?i:t.reduce(oe(t,r),Y(i)).origin}.bind(void 0),se=(0,t.curry)(de);exports.updateIn=se,exports.shallowCopy=V,exports.remove=Q,exports.map=D,exports.isEmpty=F,exports.haveSameProps=U,exports.hasKey=L,exports.hasIn=_,exports.getKeys=C,exports.getIn=E,exports.is=m,exports.get=h,se.remove=te;var ae=void 0,fe=function(){return(0,e.default)(this,ae),se.remove}.bind(void 0),le=function(t,r){return(0,e.default)(this,ae),se(t,fe,r)}.bind(void 0),ve=(0,t.curry)(le),ce=void 0,pe=function(t,r,i){(0,e.default)(this,ce);var n=V(i);return n[t]=r,n}.bind(void 0),be=(0,t.curry)(pe),he=void 0,ye=function(t,r,i){return(0,e.default)(this,he),se(t,function(){return(0,e.default)(this,he),r}.bind(this),i)}.bind(void 0),xe=(0,t.curry)(ye),me=void 0,Ae=function(t,r){return(0,e.default)(this,me),Boolean(Number(t)^Number(r))}.bind(void 0),ge=function(t,r){return(0,e.default)(this,me),t===r||!Ae(Array.isArray(t),Array.isArray(r))&&U(t,r)}.bind(void 0),qe=(0,t.curry)(ge),Ie=void 0,je=function(t){return(0,e.default)(this,Ie),F(t)?void 0:t}.bind(void 0);exports.toUndefinedIfEmpty=je,exports.shallowEqual=qe,exports.setIn=xe,exports.set=be,exports.removeIn=ve;
},{"babel-runtime/helpers/newArrowCheck":"EIvU","flow-static-land/lib/Fun":"o7wy","babel-runtime/helpers/typeof":"GyBZ","@jumpn/utils-array":"YuTU","babel-runtime/core-js/object/keys":"FtNa","babel-runtime/helpers/toConsumableArray":"mYpx","fast-deep-equal":"jIGR","babel-runtime/helpers/defineProperty":"Xos8","babel-runtime/helpers/extends":"T4f3","babel-runtime/helpers/slicedToArray":"m8OI","babel-runtime/core-js/object/entries":"FgrW","babel-runtime/helpers/objectWithoutProperties":"zCAL","babel-runtime/core-js/symbol":"ibPW"}],"g6sb":[function(require,module,exports) {
var e=require("./_iobject"),r=require("./_defined");module.exports=function(i){return e(r(i))};
},{"./_iobject":"nGau","./_defined":"BjjL"}],"vfEH":[function(require,module,exports) {
var e=require("./_to-integer"),r=Math.max,t=Math.min;module.exports=function(n,a){return(n=e(n))<0?r(n+a,0):t(n,a)};
},{"./_to-integer":"yjVO"}],"Ca7J":[function(require,module,exports) {
var e=require("./_to-iobject"),r=require("./_to-length"),t=require("./_to-absolute-index");module.exports=function(n){return function(i,o,u){var f,l=e(i),a=r(l.length),c=t(u,a);if(n&&o!=o){for(;a>c;)if((f=l[c++])!=f)return!0}else for(;a>c;c++)if((n||c in l)&&l[c]===o)return n||c||0;return!n&&-1}};
},{"./_to-iobject":"g6sb","./_to-length":"dJBs","./_to-absolute-index":"vfEH"}],"NaGB":[function(require,module,exports) {
var e=require("./_shared")("keys"),r=require("./_uid");module.exports=function(u){return e[u]||(e[u]=r(u))};
},{"./_shared":"zGcK","./_uid":"U49f"}],"vL0Z":[function(require,module,exports) {
var r=require("./_has"),e=require("./_to-iobject"),u=require("./_array-includes")(!1),i=require("./_shared-key")("IE_PROTO");module.exports=function(o,a){var n,s=e(o),t=0,h=[];for(n in s)n!=i&&r(s,n)&&h.push(n);for(;a.length>t;)r(s,n=a[t++])&&(~u(h,n)||h.push(n));return h};
},{"./_has":"uHgd","./_to-iobject":"g6sb","./_array-includes":"Ca7J","./_shared-key":"NaGB"}],"U9a7":[function(require,module,exports) {
var e=require("./_object-keys-internal"),r=require("./_enum-bug-keys");module.exports=Object.keys||function(u){return e(u,r)};
},{"./_object-keys-internal":"vL0Z","./_enum-bug-keys":"KxjL"}],"MiMz":[function(require,module,exports) {
var e=require("./_object-dp"),r=require("./_an-object"),t=require("./_object-keys");module.exports=require("./_descriptors")?Object.defineProperties:function(o,i){r(o);for(var u,c=t(i),n=c.length,s=0;n>s;)e.f(o,u=c[s++],i[u]);return o};
},{"./_object-dp":"nw8e","./_an-object":"eT53","./_object-keys":"U9a7","./_descriptors":"P9Ib"}],"xjB1":[function(require,module,exports) {
var e=require("./_global").document;module.exports=e&&e.documentElement;
},{"./_global":"qf4T"}],"sYaK":[function(require,module,exports) {
var e=require("./_an-object"),r=require("./_object-dps"),t=require("./_enum-bug-keys"),n=require("./_shared-key")("IE_PROTO"),o=function(){},i="prototype",u=function(){var e,r=require("./_dom-create")("iframe"),n=t.length;for(r.style.display="none",require("./_html").appendChild(r),r.src="javascript:",(e=r.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),u=e.F;n--;)delete u[i][t[n]];return u()};module.exports=Object.create||function(t,c){var a;return null!==t?(o[i]=e(t),a=new o,o[i]=null,a[n]=t):a=u(),void 0===c?a:r(a,c)};
},{"./_an-object":"eT53","./_object-dps":"MiMz","./_enum-bug-keys":"KxjL","./_shared-key":"NaGB","./_dom-create":"vZ6E","./_html":"xjB1"}],"rq3q":[function(require,module,exports) {
var e=require("./_object-dp").f,r=require("./_has"),o=require("./_wks")("toStringTag");module.exports=function(t,u,i){t&&!r(t=i?t:t.prototype,o)&&e(t,o,{configurable:!0,value:u})};
},{"./_object-dp":"nw8e","./_has":"uHgd","./_wks":"AIP1"}],"ebgP":[function(require,module,exports) {
"use strict";var e=require("./_object-create"),r=require("./_property-desc"),t=require("./_set-to-string-tag"),i={};require("./_hide")(i,require("./_wks")("iterator"),function(){return this}),module.exports=function(o,u,s){o.prototype=e(i,{next:r(1,s)}),t(o,u+" Iterator")};
},{"./_object-create":"sYaK","./_property-desc":"uJ6d","./_set-to-string-tag":"rq3q","./_hide":"NXbe","./_wks":"AIP1"}],"q6yw":[function(require,module,exports) {
var t=require("./_has"),e=require("./_to-object"),o=require("./_shared-key")("IE_PROTO"),r=Object.prototype;module.exports=Object.getPrototypeOf||function(c){return c=e(c),t(c,o)?c[o]:"function"==typeof c.constructor&&c instanceof c.constructor?c.constructor.prototype:c instanceof Object?r:null};
},{"./_has":"uHgd","./_to-object":"rfVX","./_shared-key":"NaGB"}],"mH0U":[function(require,module,exports) {
"use strict";var e=require("./_library"),r=require("./_export"),t=require("./_redefine"),i=require("./_hide"),n=require("./_iterators"),u=require("./_iter-create"),o=require("./_set-to-string-tag"),s=require("./_object-gpo"),a=require("./_wks")("iterator"),c=!([].keys&&"next"in[].keys()),f="@@iterator",l="keys",q="values",y=function(){return this};module.exports=function(_,p,h,k,v,w,d){u(h,p,k);var x,b,g,j=function(e){if(!c&&e in I)return I[e];switch(e){case l:case q:return function(){return new h(this,e)}}return function(){return new h(this,e)}},m=p+" Iterator",A=v==q,F=!1,I=_.prototype,O=I[a]||I[f]||v&&I[v],P=O||j(v),z=v?A?j("entries"):P:void 0,B="Array"==p&&I.entries||O;if(B&&(g=s(B.call(new _)))!==Object.prototype&&g.next&&(o(g,m,!0),e||"function"==typeof g[a]||i(g,a,y)),A&&O&&O.name!==q&&(F=!0,P=function(){return O.call(this)}),e&&!d||!c&&!F&&I[a]||i(I,a,P),n[p]=P,n[m]=y,v)if(x={values:A?P:j(q),keys:w?P:j(l),entries:z},d)for(b in x)b in I||t(I,b,x[b]);else r(r.P+r.F*(c||F),p,x);return x};
},{"./_library":"H21C","./_export":"izCb","./_redefine":"PHot","./_hide":"NXbe","./_iterators":"dhak","./_iter-create":"ebgP","./_set-to-string-tag":"rq3q","./_object-gpo":"q6yw","./_wks":"AIP1"}],"wVEN":[function(require,module,exports) {
"use strict";var e=require("./_add-to-unscopables"),r=require("./_iter-step"),t=require("./_iterators"),i=require("./_to-iobject");module.exports=require("./_iter-define")(Array,"Array",function(e,r){this._t=i(e),this._i=0,this._k=r},function(){var e=this._t,t=this._k,i=this._i++;return!e||i>=e.length?(this._t=void 0,r(1)):r(0,"keys"==t?i:"values"==t?e[i]:[i,e[i]])},"values"),t.Arguments=t.Array,e("keys"),e("values"),e("entries");
},{"./_add-to-unscopables":"Z7eD","./_iter-step":"xwDU","./_iterators":"dhak","./_to-iobject":"g6sb","./_iter-define":"mH0U"}],"v6Aj":[function(require,module,exports) {

for(var e=require("./es6.array.iterator"),t=require("./_object-keys"),i=require("./_redefine"),r=require("./_global"),s=require("./_hide"),L=require("./_iterators"),a=require("./_wks"),o=a("iterator"),l=a("toStringTag"),S=L.Array,n={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},u=t(n),T=0;T<u.length;T++){var c,g=u[T],M=n[g],y=r[g],f=y&&y.prototype;if(f&&(f[o]||s(f,o,S),f[l]||s(f,l,g),L[g]=S,M))for(c in e)f[c]||i(f,c,e[c],!0)}
},{"./es6.array.iterator":"wVEN","./_object-keys":"U9a7","./_redefine":"PHot","./_global":"qf4T","./_hide":"NXbe","./_iterators":"dhak","./_wks":"AIP1"}],"Hh2M":[function(require,module,exports) {
"use strict";var l=require("./_fails");module.exports=function(n,u){return!!n&&l(function(){u?n.call(null,function(){},1):n.call(null)})};
},{"./_fails":"BXiR"}],"VsIt":[function(require,module,exports) {
"use strict";var r=require("./_export"),e=require("./_array-methods")(0),t=require("./_strict-method")([].forEach,!0);r(r.P+r.F*!t,"Array",{forEach:function(r){return e(this,r,arguments[1])}});
},{"./_export":"izCb","./_array-methods":"AuPh","./_strict-method":"Hh2M"}],"XfJI":[function(require,module,exports) {
function r(r){if(Array.isArray(r)){for(var e=0,n=new Array(r.length);e<r.length;e++)n[e]=r[e];return n}}module.exports=r;
},{}],"OMTj":[function(require,module,exports) {
function t(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}module.exports=t;
},{}],"wFNi":[function(require,module,exports) {
function e(){throw new TypeError("Invalid attempt to spread non-iterable instance")}module.exports=e;
},{}],"Fhqp":[function(require,module,exports) {
var r=require("./arrayWithoutHoles"),e=require("./iterableToArray"),a=require("./nonIterableSpread");function o(o){return r(o)||e(o)||a()}module.exports=o;
},{"./arrayWithoutHoles":"XfJI","./iterableToArray":"OMTj","./nonIterableSpread":"wFNi"}],"RBsu":[function(require,module,exports) {
"use strict";var r=require("./_export"),e=require("./_array-methods")(1);r(r.P+r.F*!require("./_strict-method")([].map,!0),"Array",{map:function(r){return e(this,r,arguments[1])}});
},{"./_export":"izCb","./_array-methods":"AuPh","./_strict-method":"Hh2M"}],"x5yM":[function(require,module,exports) {
var e=require("./_to-integer"),r=require("./_defined");module.exports=function(t){return function(n,i){var o,u,c=String(r(n)),d=e(i),a=c.length;return d<0||d>=a?t?"":void 0:(o=c.charCodeAt(d))<55296||o>56319||d+1===a||(u=c.charCodeAt(d+1))<56320||u>57343?t?c.charAt(d):o:t?c.slice(d,d+2):u-56320+(o-55296<<10)+65536}};
},{"./_to-integer":"yjVO","./_defined":"BjjL"}],"t3as":[function(require,module,exports) {
"use strict";var r=require("./_string-at")(!0);module.exports=function(t,e,n){return e+(n?r(t,e).length:1)};
},{"./_string-at":"x5yM"}],"GM7B":[function(require,module,exports) {
var e=require("./_cof"),t=require("./_wks")("toStringTag"),n="Arguments"==e(function(){return arguments}()),r=function(e,t){try{return e[t]}catch(n){}};module.exports=function(u){var o,c,i;return void 0===u?"Undefined":null===u?"Null":"string"==typeof(c=r(o=Object(u),t))?c:n?e(o):"Object"==(i=e(o))&&"function"==typeof o.callee?"Arguments":i};
},{"./_cof":"Z5df","./_wks":"AIP1"}],"sNFG":[function(require,module,exports) {
"use strict";var e=require("./_classof"),r=RegExp.prototype.exec;module.exports=function(t,o){var c=t.exec;if("function"==typeof c){var n=c.call(t,o);if("object"!=typeof n)throw new TypeError("RegExp exec method returned something other than an Object or null");return n}if("RegExp"!==e(t))throw new TypeError("RegExp#exec called on incompatible receiver");return r.call(t,o)};
},{"./_classof":"GM7B"}],"hgks":[function(require,module,exports) {
"use strict";var e=require("./_an-object");module.exports=function(){var i=e(this),r="";return i.global&&(r+="g"),i.ignoreCase&&(r+="i"),i.multiline&&(r+="m"),i.unicode&&(r+="u"),i.sticky&&(r+="y"),r};
},{"./_an-object":"eT53"}],"ZcPD":[function(require,module,exports) {
"use strict";var e=require("./_flags"),l=RegExp.prototype.exec,t=String.prototype.replace,r=l,a="lastIndex",n=function(){var e=/a/,t=/b*/g;return l.call(e,"a"),l.call(t,"a"),0!==e[a]||0!==t[a]}(),o=void 0!==/()??/.exec("")[1],c=n||o;c&&(r=function(r){var c,i,g,u,p=this;return o&&(i=new RegExp("^"+p.source+"$(?!\\s)",e.call(p))),n&&(c=p[a]),g=l.call(p,r),n&&g&&(p[a]=p.global?g.index+g[0].length:c),o&&g&&g.length>1&&t.call(g[0],i,function(){for(u=1;u<arguments.length-2;u++)void 0===arguments[u]&&(g[u]=void 0)}),g}),module.exports=r;
},{"./_flags":"hgks"}],"S07n":[function(require,module,exports) {
"use strict";var e=require("./_regexp-exec");require("./_export")({target:"RegExp",proto:!0,forced:e!==/./.exec},{exec:e});
},{"./_regexp-exec":"ZcPD","./_export":"izCb"}],"LmBS":[function(require,module,exports) {
"use strict";require("./es6.regexp.exec");var e=require("./_redefine"),r=require("./_hide"),n=require("./_fails"),t=require("./_defined"),u=require("./_wks"),i=require("./_regexp-exec"),c=u("species"),o=!n(function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")}),a=function(){var e=/(?:)/,r=e.exec;e.exec=function(){return r.apply(this,arguments)};var n="ab".split(e);return 2===n.length&&"a"===n[0]&&"b"===n[1]}();module.exports=function(l,f,p){var s=u(l),v=!n(function(){var e={};return e[s]=function(){return 7},7!=""[l](e)}),x=v?!n(function(){var e=!1,r=/a/;return r.exec=function(){return e=!0,null},"split"===l&&(r.constructor={},r.constructor[c]=function(){return r}),r[s](""),!e}):void 0;if(!v||!x||"replace"===l&&!o||"split"===l&&!a){var d=/./[s],q=p(t,s,""[l],function(e,r,n,t,u){return r.exec===i?v&&!u?{done:!0,value:d.call(r,n,t)}:{done:!0,value:e.call(n,r,t)}:{done:!1}}),g=q[0],_=q[1];e(String.prototype,l,g),r(RegExp.prototype,s,2==f?function(e,r){return _.call(e,this,r)}:function(e){return _.call(e,this)})}};
},{"./es6.regexp.exec":"S07n","./_redefine":"PHot","./_hide":"NXbe","./_fails":"BXiR","./_defined":"BjjL","./_wks":"AIP1","./_regexp-exec":"ZcPD"}],"RTfC":[function(require,module,exports) {
"use strict";var r=require("./_an-object"),e=require("./_to-length"),n=require("./_advance-string-index"),t=require("./_regexp-exec-abstract");require("./_fix-re-wks")("match",1,function(i,a,u,l){return[function(r){var e=i(this),n=null==r?void 0:r[a];return void 0!==n?n.call(r,e):new RegExp(r)[a](String(e))},function(i){var a=l(u,i,this);if(a.done)return a.value;var c=r(i),o=String(this);if(!c.global)return t(c,o);var s=c.unicode;c.lastIndex=0;for(var v,d=[],g=0;null!==(v=t(c,o));){var x=String(v[0]);d[g]=x,""===x&&(c.lastIndex=n(o,e(c.lastIndex),s)),g++}return 0===g?null:d}]});
},{"./_an-object":"eT53","./_to-length":"dJBs","./_advance-string-index":"t3as","./_regexp-exec-abstract":"sNFG","./_fix-re-wks":"LmBS"}],"dwTY":[function(require,module,exports) {
"use strict";var r=require("./_export"),e=require("./_array-methods")(3);r(r.P+r.F*!require("./_strict-method")([].some,!0),"Array",{some:function(r){return e(this,r,arguments[1])}});
},{"./_export":"izCb","./_array-methods":"AuPh","./_strict-method":"Hh2M"}],"xcbV":[function(require,module,exports) {
module.exports=function(e,r,l){var a=void 0===l;switch(r.length){case 0:return a?e():e.call(l);case 1:return a?e(r[0]):e.call(l,r[0]);case 2:return a?e(r[0],r[1]):e.call(l,r[0],r[1]);case 3:return a?e(r[0],r[1],r[2]):e.call(l,r[0],r[1],r[2]);case 4:return a?e(r[0],r[1],r[2],r[3]):e.call(l,r[0],r[1],r[2],r[3])}return e.apply(l,r)};
},{}],"h83E":[function(require,module,exports) {
"use strict";var n=require("./_a-function"),t=require("./_is-object"),r=require("./_invoke"),e=[].slice,i={},o=function(n,t,r){if(!(t in i)){for(var e=[],o=0;o<t;o++)e[o]="a["+o+"]";i[t]=Function("F,a","return new F("+e.join(",")+")")}return i[t](n,r)};module.exports=Function.bind||function(i){var u=n(this),c=e.call(arguments,1),a=function(){var n=c.concat(e.call(arguments));return this instanceof a?o(u,n.length,n):r(u,n,i)};return t(u.prototype)&&(a.prototype=u.prototype),a};
},{"./_a-function":"kYjc","./_is-object":"M7z6","./_invoke":"xcbV"}],"WIhg":[function(require,module,exports) {
var r=require("./_export");r(r.P,"Function",{bind:require("./_bind")});
},{"./_export":"izCb","./_bind":"h83E"}],"tS9b":[function(require,module,exports) {
function n(n,o){if(n!==o)throw new TypeError("Cannot instantiate an arrow function")}module.exports=n;
},{}],"hqAf":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.requestToCompat=exports.requestFromCompat=exports.hasSubscription=exports.getOperationType=exports.errorsToString=void 0,require("core-js/modules/es6.array.map"),require("core-js/modules/es6.regexp.match"),require("core-js/modules/es6.array.some"),require("core-js/modules/es6.function.bind");var e=r(require("@babel/runtime/helpers/newArrowCheck"));function r(e){return e&&e.__esModule?e:{default:e}}var t=void 0,o=function(r){var o=this;return(0,e.default)(this,t),r.map(function(r){var t=r.column,i=r.line;return(0,e.default)(this,o),"".concat(i,":").concat(t)}.bind(this)).join("; ")}.bind(void 0),i=function(r){var i=r.message,n=r.locations;return(0,e.default)(this,t),i+(n?" (".concat(o(n),")"):"")}.bind(void 0),n=function(r){return(0,e.default)(this,t),r.map(i).join("\n")}.bind(void 0);exports.errorsToString=n;var s=void 0,a=/^\s*(query|mutation|subscription|\{)/,u=function(r){return(0,e.default)(this,s),"{"===r?"query":r}.bind(void 0),d=function(r){(0,e.default)(this,s);var t=r.match(a);if(!t)throw new TypeError("Invalid operation:\n".concat(r));return u(t[1])}.bind(void 0);exports.getOperationType=d;var p=void 0,c=function(r){return(0,e.default)(this,p),"OperationDefinition"===r.kind&&"subscription"===r.operation}.bind(void 0),v=function(r){return(0,e.default)(this,p),r.definitions.some(c)}.bind(void 0);exports.hasSubscription=v;var l=void 0,f=function(r){var t=r.query,o=r.variables;return(0,e.default)(this,l),o?{operation:t,variables:o}:{operation:t}}.bind(void 0);exports.requestFromCompat=f;var b=void 0,m=function(r){var t=r.operation,o=r.variables;return(0,e.default)(this,b),o?{query:t,variables:o}:{query:t}}.bind(void 0);exports.requestToCompat=m;
},{"core-js/modules/es6.array.map":"RBsu","core-js/modules/es6.regexp.match":"RTfC","core-js/modules/es6.array.some":"dwTY","core-js/modules/es6.function.bind":"WIhg","@babel/runtime/helpers/newArrowCheck":"tS9b"}],"AVeU":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();function t(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var n=function(){return"function"==typeof Symbol},r=function(e){return n()&&Boolean(Symbol[e])},o=function(e){return r(e)?Symbol[e]:"@@"+e};n()&&!r("observable")&&(Symbol.observable=Symbol("observable"));var i=o("iterator"),u=o("observable"),c=o("species");function s(e,t){var n=e[t];if(null!=n){if("function"!=typeof n)throw new TypeError(n+" is not a function");return n}}function f(e){var t=e.constructor;return void 0!==t&&null===(t=t[c])&&(t=void 0),void 0!==t?t:m}function a(e){return e instanceof m}function l(e){l.log?l.log(e):setTimeout(function(){throw e})}function v(e){Promise.resolve().then(function(){try{e()}catch(t){l(t)}})}function b(e){var t=e._cleanup;if(void 0!==t&&(e._cleanup=void 0,t))try{if("function"==typeof t)t();else{var n=s(t,"unsubscribe");n&&n.call(t)}}catch(r){l(r)}}function h(e){e._observer=void 0,e._queue=void 0,e._state="closed"}function y(e){var t=e._queue;if(t){e._queue=void 0,e._state="ready";for(var n=0;n<t.length&&(p(e,t[n].type,t[n].value),"closed"!==e._state);++n);}}function p(e,t,n){e._state="running";var r=e._observer;try{var o=s(r,t);switch(t){case"next":o&&o.call(r,n);break;case"error":if(h(e),!o)throw n;o.call(r,n);break;case"complete":h(e),o&&o.call(r)}}catch(i){l(i)}"closed"===e._state?b(e):"running"===e._state&&(e._state="ready")}function d(e,t,n){if("closed"!==e._state){if("buffering"!==e._state)return"ready"!==e._state?(e._state="buffering",e._queue=[{type:t,value:n}],void v(function(){return y(e)})):void p(e,t,n);e._queue.push({type:t,value:n})}}var w=function(){function n(e,r){t(this,n),this._cleanup=void 0,this._observer=e,this._queue=void 0,this._state="initializing";var o=new _(this);try{this._cleanup=r.call(void 0,o)}catch(i){o.error(i)}"initializing"===this._state&&(this._state="ready")}return e(n,[{key:"unsubscribe",value:function(){"closed"!==this._state&&(h(this),b(this))}},{key:"closed",get:function(){return"closed"===this._state}}]),n}(),_=function(){function n(e){t(this,n),this._subscription=e}return e(n,[{key:"next",value:function(e){d(this._subscription,"next",e)}},{key:"error",value:function(e){d(this._subscription,"error",e)}},{key:"complete",value:function(){d(this._subscription,"complete")}},{key:"closed",get:function(){return"closed"===this._subscription._state}}]),n}(),m=exports.Observable=function(){function n(e){if(t(this,n),!(this instanceof n))throw new TypeError("Observable cannot be called as a function");if("function"!=typeof e)throw new TypeError("Observable initializer must be a function");this._subscriber=e}return e(n,[{key:"subscribe",value:function(e){return"object"==typeof e&&null!==e||(e={next:e,error:arguments[1],complete:arguments[2]}),new w(e,this._subscriber)}},{key:"forEach",value:function(e){var t=this;return new Promise(function(n,r){if("function"==typeof e)var o=t.subscribe({next:function(t){try{e(t,i)}catch(n){r(n),o.unsubscribe()}},error:r,complete:n});else r(new TypeError(e+" is not a function"));function i(){o.unsubscribe(),n()}})}},{key:"map",value:function(e){var t=this;if("function"!=typeof e)throw new TypeError(e+" is not a function");return new(f(this))(function(n){return t.subscribe({next:function(t){try{t=e(t)}catch(r){return n.error(r)}n.next(t)},error:function(e){n.error(e)},complete:function(){n.complete()}})})}},{key:"filter",value:function(e){var t=this;if("function"!=typeof e)throw new TypeError(e+" is not a function");return new(f(this))(function(n){return t.subscribe({next:function(t){try{if(!e(t))return}catch(r){return n.error(r)}n.next(t)},error:function(e){n.error(e)},complete:function(){n.complete()}})})}},{key:"reduce",value:function(e){var t=this;if("function"!=typeof e)throw new TypeError(e+" is not a function");var n=f(this),r=arguments.length>1,o=!1,i=arguments[1];return new n(function(n){return t.subscribe({next:function(t){var u=!o;if(o=!0,!u||r)try{i=e(i,t)}catch(c){return n.error(c)}else i=t},error:function(e){n.error(e)},complete:function(){if(!o&&!r)return n.error(new TypeError("Cannot reduce an empty sequence"));n.next(i),n.complete()}})})}},{key:"concat",value:function(){for(var e=this,t=arguments.length,n=Array(t),r=0;r<t;r++)n[r]=arguments[r];var o=f(this);return new o(function(t){var r=void 0,i=0;return function e(u){r=u.subscribe({next:function(e){t.next(e)},error:function(e){t.error(e)},complete:function(){i===n.length?(r=void 0,t.complete()):e(o.from(n[i++]))}})}(e),function(){r&&(r.unsubscribe(),r=void 0)}})}},{key:"flatMap",value:function(e){var t=this;if("function"!=typeof e)throw new TypeError(e+" is not a function");var n=f(this);return new n(function(r){var o=[],i=t.subscribe({next:function(t){if(e)try{t=e(t)}catch(c){return r.error(c)}var i=n.from(t).subscribe({next:function(e){r.next(e)},error:function(e){r.error(e)},complete:function(){var e=o.indexOf(i);e>=0&&o.splice(e,1),u()}});o.push(i)},error:function(e){r.error(e)},complete:function(){u()}});function u(){i.closed&&0===o.length&&r.complete()}return function(){o.forEach(function(e){return e.unsubscribe()}),i.unsubscribe()}})}},{key:u,value:function(){return this}}],[{key:"from",value:function(e){var t="function"==typeof this?this:n;if(null==e)throw new TypeError(e+" is not an object");var o=s(e,u);if(o){var c=o.call(e);if(Object(c)!==c)throw new TypeError(c+" is not an object");return a(c)&&c.constructor===t?c:new t(function(e){return c.subscribe(e)})}if(r("iterator")&&(o=s(e,i)))return new t(function(t){v(function(){if(!t.closed){var n=!0,r=!1,i=void 0;try{for(var u,c=o.call(e)[Symbol.iterator]();!(n=(u=c.next()).done);n=!0){var s=u.value;if(t.next(s),t.closed)return}}catch(f){r=!0,i=f}finally{try{!n&&c.return&&c.return()}finally{if(r)throw i}}t.complete()}})});if(Array.isArray(e))return new t(function(t){v(function(){if(!t.closed){for(var n=0;n<e.length;++n)if(t.next(e[n]),t.closed)return;t.complete()}})});throw new TypeError(e+" is not observable")}},{key:"of",value:function(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];return new("function"==typeof this?this:n)(function(e){v(function(){if(!e.closed){for(var n=0;n<t.length;++n)if(e.next(t[n]),e.closed)return;e.complete()}})})}},{key:c,get:function(){return this}}]),n}();n()&&Object.defineProperty(m,Symbol("extensions"),{value:{symbol:u,hostReportError:l},configurable:!0});
},{}],"U0NN":[function(require,module,exports) {
module.exports=require("./lib/Observable.js").Observable;
},{"./lib/Observable.js":"AVeU"}],"TLss":[function(require,module,exports) {
"use strict";var r=require("./_export"),e=require("./_array-includes")(!0);r(r.P,"Array",{includes:function(r){return e(this,r,arguments.length>1?arguments[1]:void 0)}}),require("./_add-to-unscopables")("includes");
},{"./_export":"izCb","./_array-includes":"Ca7J","./_add-to-unscopables":"Z7eD"}],"WEVF":[function(require,module,exports) {
var e=require("./_is-object"),r=require("./_cof"),i=require("./_wks")("match");module.exports=function(o){var u;return e(o)&&(void 0!==(u=o[i])?!!u:"RegExp"==r(o))};
},{"./_is-object":"M7z6","./_cof":"Z5df","./_wks":"AIP1"}],"GbTB":[function(require,module,exports) {
var e=require("./_is-regexp"),r=require("./_defined");module.exports=function(i,t,n){if(e(t))throw TypeError("String#"+n+" doesn't accept regex!");return String(r(i))};
},{"./_is-regexp":"WEVF","./_defined":"BjjL"}],"AhNa":[function(require,module,exports) {
var r=require("./_wks")("match");module.exports=function(t){var c=/./;try{"/./"[t](c)}catch(e){try{return c[r]=!1,!"/./"[t](c)}catch(a){}}return!0};
},{"./_wks":"AIP1"}],"fH7p":[function(require,module,exports) {
"use strict";var e=require("./_export"),i=require("./_string-context"),r="includes";e(e.P+e.F*require("./_fails-is-regexp")(r),"String",{includes:function(e){return!!~i(this,e,r).indexOf(e,arguments.length>1?arguments[1]:void 0)}});
},{"./_export":"izCb","./_string-context":"GbTB","./_fails-is-regexp":"AhNa"}],"IxO8":[function(require,module,exports) {
function e(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}module.exports=e;
},{}],"fwAU":[function(require,module,exports) {
var e=require("./defineProperty");function r(r){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},o=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),o.forEach(function(t){e(r,t,n[t])})}return r}module.exports=r;
},{"./defineProperty":"IxO8"}],"t2zx":[function(require,module,exports) {
function e(e,n){if(null==e)return{};var r,t,u={},f=Object.keys(e);for(t=0;t<f.length;t++)r=f[t],n.indexOf(r)>=0||(u[r]=e[r]);return u}module.exports=e;
},{}],"U8F3":[function(require,module,exports) {
var e=require("./objectWithoutPropertiesLoose");function r(r,t){if(null==r)return{};var o,n,l=e(r,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(r);for(n=0;n<p.length;n++)o=p[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(r,o)&&(l[o]=r[o])}return l}module.exports=r;
},{"./objectWithoutPropertiesLoose":"t2zx"}],"LvRh":[function(require,module,exports) {
"use strict";var r=require("./_export"),e=require("./_array-includes")(!1),i=[].indexOf,t=!!i&&1/[1].indexOf(1,-0)<0;r(r.P+r.F*(t||!require("./_strict-method")(i)),"Array",{indexOf:function(r){return t?i.apply(this,arguments)||0:e(this,r,arguments[1])}});
},{"./_export":"izCb","./_array-includes":"Ca7J","./_strict-method":"Hh2M"}],"zTqj":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.unobserveOrCancel=exports.unobserve=exports.toObservable=exports.send=exports.observe=exports.create=exports.cancel=void 0,require("core-js/modules/es6.array.find-index"),require("core-js/modules/es6.array.find"),require("core-js/modules/es6.function.name");var t=require("@jumpn/utils-composite");require("phoenix"),require("core-js/modules/web.dom.iterable"),require("core-js/modules/es6.array.for-each");var i=s(require("@babel/runtime/helpers/toConsumableArray")),e=require("@jumpn/utils-graphql"),n=s(require("zen-observable"));require("core-js/modules/es7.array.includes"),require("core-js/modules/es6.string.includes");var r=s(require("@babel/runtime/helpers/objectSpread")),u=s(require("@babel/runtime/helpers/objectWithoutProperties"));require("core-js/modules/es6.array.index-of");var d=require("@jumpn/utils-array");require("core-js/modules/es6.function.bind");var o=s(require("@babel/runtime/helpers/newArrowCheck"));function s(t){return t&&t.__esModule?t:{default:t}}var a=void 0,f=function(t){var e=t.activeObservers,n=t.canceledObservers,d=(0,u.default)(t,["activeObservers","canceledObservers"]);return(0,o.default)(this,a),(0,r.default)({},d,{isActive:!1,activeObservers:[],canceledObservers:(0,i.default)(e).concat((0,i.default)(n))})}.bind(void 0),c=void 0,v=function(t,i){var e=this;return(0,o.default)(this,c),function(n){return(0,o.default)(this,e),n[t]&&n[t](i)}.bind(this)}.bind(void 0),l=function(t){var i=t.name;return(0,o.default)(this,c),"on".concat(i)}.bind(void 0),b=function(t,i){return(0,o.default)(this,c),t.forEach(v(l(i),i.payload))}.bind(void 0),h=void 0,p=function(t,i){return(0,o.default)(this,h),b(t.canceledObservers,i),t}.bind(void 0),m={abort:"Abort",cancel:"Cancel",error:"Error",result:"Result",start:"Start"},q=void 0,O=function(t){return(0,o.default)(this,q),{payload:t,name:m.start}}.bind(void 0),y=function(t){return(0,o.default)(this,q),{payload:t,name:m.result}}.bind(void 0),g=function(t){return(0,o.default)(this,q),{payload:t,name:m.error}}.bind(void 0),x=function(){return(0,o.default)(this,q),{name:m.cancel,payload:void 0}}.bind(void 0),S=function(t){return(0,o.default)(this,q),{payload:t,name:m.abort}}.bind(void 0),j=void 0,A=function(t){return(0,o.default)(this,j),(0,r.default)({},t,{canceledObservers:[]})}.bind(void 0),E=function(t){return(0,o.default)(this,j),t.canceledObservers.length>0?A(p(t,x())):t}.bind(void 0),C=void 0,T=function(i,e,n){return(0,o.default)(this,C),i.findIndex((0,t.hasIn)([e],n))}.bind(void 0),w=void 0,I=function(t){var i=this;return(0,o.default)(this,w),function(e){return(0,o.default)(this,i),(0,d.replace)(T(e,"request",t.request),[t],e)}.bind(this)}.bind(void 0),_=void 0,k=function(t){var i=this;return(0,o.default)(this,_),function(e){return(0,o.default)(this,i),(0,d.remove)(T(e,"request",t.request),1,e)}.bind(this)}.bind(void 0),J=void 0,M=function(t,i){return(0,o.default)(this,J),t.notifiers=i(t.notifiers),t}.bind(void 0),P=void 0,R=function(t,i){return(0,o.default)(this,P),M(t,I(i)),i}.bind(void 0),z={canceled:"canceled",canceling:"canceling",pending:"pending",sent:"sent",sending:"sending"},W=void 0,B=function(t){var e=t.activeObservers,n=t.canceledObservers;return(0,o.default)(this,W),(0,i.default)(e).concat((0,i.default)(n))}.bind(void 0),D=function(t,i){return(0,o.default)(this,W),b(B(t),i),t}.bind(void 0),F=void 0,G=function(t,i,e){return(0,o.default)(this,F),M(t,k(D(i,S(e))))}.bind(void 0),H=void 0,K=function(i,e,n){return(0,o.default)(this,H),i.find((0,t.hasIn)([e],n))}.bind(void 0),L=void 0,N=function(t,i){return(0,o.default)(this,L),b(t.activeObservers,i),t}.bind(void 0),Q=void 0,U=function(t,i){return(0,o.default)(this,Q),N(t,y(i))}.bind(void 0),V=void 0,X=function(t){return(0,o.default)(this,V),N(t,O(t))}.bind(void 0),Y=void 0,Z=function(t){return(0,o.default)(this,Y),E((0,r.default)({},t,{isActive:!0,requestStatus:z.pending,subscriptionId:void 0}))}.bind(void 0),$=void 0,tt=function(t,i){return(0,o.default)(this,$),t.receive("ok",i.onSucceed).receive("error",i.onError).receive("timeout",i.onTimeout)}.bind(void 0),it=void 0,et=function(t,i){var e=this;return(0,o.default)(this,it),function(n){var r=this;return(0,o.default)(this,e),function(){(0,o.default)(this,r);var e=K(t.notifiers,"request",i);if(e){for(var u=arguments.length,d=new Array(u),s=0;s<u;s++)d[s]=arguments[s];n.apply(void 0,[t,e].concat(d))}}.bind(this)}.bind(this)}.bind(void 0),nt=function(i,e,n){return(0,o.default)(this,it),(0,t.map)(et(i,e),n)}.bind(void 0),rt=function(t,i,e,n){return(0,o.default)(this,it),tt(t.channel.push(n.name,n.payload),nt(t,i,e)),t}.bind(void 0),ut={doc:"doc",unsubscribe:"unsubscribe"},dt=void 0,ot=function(t){return(0,o.default)(this,dt),{payload:t,name:ut.unsubscribe}}.bind(void 0),st=function(t){return(0,o.default)(this,dt),{payload:t,name:ut.doc}}.bind(void 0),at=void 0,ft=function(t,i,n){var r=i.request;return(0,o.default)(this,at),rt(t,r,n,st((0,e.requestToCompat)(r)))}.bind(void 0),ct=function(t,i){return(0,o.default)(this,at),R(t,(0,r.default)({},i,{requestStatus:z.sending}))}.bind(void 0),vt=function(t){return(0,o.default)(this,at),new Error("request: ".concat(t))}.bind(void 0),lt=function(t,i){return(0,o.default)(this,at),N(i,g(vt("timeout")))}.bind(void 0),bt=function(t,i,e){return(0,o.default)(this,at),G(t,i,vt(e))}.bind(void 0),ht=function(t){return(0,o.default)(this,at),{onError:bt,onSucceed:t,onTimeout:lt}}.bind(void 0),pt=function(t,i,e){return(0,o.default)(this,at),ft(t,ct(t,i),ht(e))}.bind(void 0),mt=void 0,qt=function(t,i){return(0,o.default)(this,mt),M(t,k(E(i)))}.bind(void 0),Ot=function(t,i){return(0,o.default)(this,mt),Et(t,R(t,Z(i)))}.bind(void 0),yt=function(t){return(0,o.default)(this,mt),new Error("unsubscribe: ".concat(t))}.bind(void 0),gt={onError:function(t,i,e){return(0,o.default)(this,mt),G(t,i,yt(e))}.bind(void 0),onTimeout:function(t,i){return(0,o.default)(this,mt),p(i,g(yt("timeout")))}.bind(void 0),onSucceed:function(t,i){(0,o.default)(this,mt),i.isActive?Ot(t,i):qt(t,i)}.bind(void 0)},xt=function(t,i){var e=i.request,n=i.subscriptionId;return(0,o.default)(this,mt),rt(t,e,gt,ot({subscriptionId:n}))}.bind(void 0),St=function(t,i){return(0,o.default)(this,mt),xt(t,R(t,(0,r.default)({},i,{requestStatus:z.canceling})))}.bind(void 0),jt=function(t,i,e){var n=e.subscriptionId;(0,o.default)(this,mt);var u=R(t,(0,r.default)({},i,{subscriptionId:n,requestStatus:z.sent}));u.isActive?X(u):St(t,u)}.bind(void 0),At=function(t,i,n){(0,o.default)(this,mt),n.errors?bt(t,i,(0,e.errorsToString)(n.errors)):jt(t,i,n)}.bind(void 0),Et=function(t,i){return(0,o.default)(this,mt),pt(t,i,At)}.bind(void 0),Ct=function(t,i){var e=i.payload;(0,o.default)(this,mt);var n=K(t.notifiers,"subscriptionId",e.subscriptionId);n&&U(n,e.result)}.bind(void 0),Tt="subscription:data",wt=function(t){return(0,o.default)(this,mt),t.event===Tt}.bind(void 0),It=void 0,_t=function(t,i){return(0,o.default)(this,It),M(t,I(E(f(i))))}.bind(void 0),kt=function(t,i){return(0,o.default)(this,It),i.requestStatus===z.sending?_t(t,i):t}.bind(void 0),Jt=function(t,i){return(0,o.default)(this,It),M(t,k(E(f(i))))}.bind(void 0),Mt=function(t,i){return(0,o.default)(this,It),i.requestStatus===z.pending?Jt(t,i):kt(t,i)}.bind(void 0),Pt=function(t,i){return(0,o.default)(this,It),i.requestStatus===z.sent?St(t,i):t}.bind(void 0),Rt=function(t,i){return(0,o.default)(this,It),Pt(t,R(t,f(i)))}.bind(void 0),zt=function(t,i){return(0,o.default)(this,It),i.requestStatus===z.pending?Jt(t,i):Rt(t,i)}.bind(void 0),Wt=function(t,i){return(0,o.default)(this,It),"subscription"===i.operationType?zt(t,i):Mt(t,i)}.bind(void 0),Bt=function(t,i){return(0,o.default)(this,It),i.isActive?Wt(t,i):t}.bind(void 0);exports.cancel=Bt;var Dt=void 0,Ft=function(t,i){return(0,o.default)(this,Dt),R(t,(0,r.default)({},i,{requestStatus:z.sent}))}.bind(void 0),Gt=function(t,i,e){return(0,o.default)(this,Dt),M(t,k(U(Ft(t,i),e)))}.bind(void 0),Ht=function(t,i){return(0,o.default)(this,Dt),pt(t,X(i),Gt)}.bind(void 0),Kt=function(t,i){(0,o.default)(this,Dt),"subscription"===i.operationType?Et(t,i):Ht(t,i)}.bind(void 0),Lt=void 0,Nt=function(t){return(0,o.default)(this,Lt),new Error("channel join: ".concat(t))}.bind(void 0),Qt=function(t,i){var e=this;return(0,o.default)(this,Lt),t.notifiers.forEach(function(t){return(0,o.default)(this,e),N(t,g(Nt(i)))}.bind(this))}.bind(void 0),Ut=function(t){var i=this;return(0,o.default)(this,Lt),{onError:function(e){return(0,o.default)(this,i),Qt(t,e)}.bind(this),onSucceed:function(){var e=this;return(0,o.default)(this,i),t.notifiers.forEach(function(i){return(0,o.default)(this,e),Kt(t,i)}.bind(this))}.bind(this),onTimeout:function(){return(0,o.default)(this,i),Qt(t,"timeout")}.bind(this)}}.bind(void 0),Vt=function(t){return(0,o.default)(this,Lt),tt(t.channel.join(),Ut(t)),t.channelJoinCreated=!0,t}.bind(void 0),Xt=void 0,Yt=function(t){var i=this;return(0,o.default)(this,Xt),function(e){(0,o.default)(this,i),wt(e)&&Ct(t,e)}.bind(this)}.bind(void 0),Zt=function(){return(0,o.default)(this,Xt),new Error("connection: close")}.bind(void 0),$t=function(t){return(0,o.default)(this,Xt),D(t,g(Zt()))}.bind(void 0),ti=function(t,i){return(0,o.default)(this,Xt),M(t,k($t(i)))}.bind(void 0),ii=function(t,i){(0,o.default)(this,Xt),"mutation"===i.operationType?G(t,i,Zt()):R(t,Z($t(i)))}.bind(void 0),ei=function(t){var i=this;return(0,o.default)(this,Xt),function(e){(0,o.default)(this,i),e.isActive?ii(t,e):ti(t,e)}.bind(this)}.bind(void 0),ni=function(t){var i=this;return(0,o.default)(this,Xt),function(){return(0,o.default)(this,i),t.notifiers.forEach(ei(t))}.bind(this)}.bind(void 0),ri=function(t){return(0,o.default)(this,Xt),!t.channelJoinCreated&&t.notifiers.length>0}.bind(void 0),ui=function(t){var i=this;return(0,o.default)(this,Xt),function(){(0,o.default)(this,i),ri(t)&&Vt(t)}.bind(this)}.bind(void 0),di="__absinthe__:control",oi=function(t){(0,o.default)(this,Xt);var i={phoenixSocket:t,channel:t.channel(di),channelJoinCreated:!1,notifiers:[]};return t.onOpen(ui(i)),t.onClose(ni(i)),t.onMessage(Yt(i)),i}.bind(void 0);exports.create=oi;var si=void 0,ai=function(t,e){var n=t.activeObservers,d=(0,u.default)(t,["activeObservers"]);return(0,o.default)(this,si),(0,r.default)({},d,{activeObservers:(0,i.default)(n).concat([e]),isActive:!0})}.bind(void 0),fi=void 0,ci=function(t,i,e){return(0,o.default)(this,fi),R(t,ai(i,e))}.bind(void 0);exports.observe=ci;var vi=void 0,li=function(t,i){return(0,o.default)(this,vi),{operationType:i,request:t,activeObservers:[],canceledObservers:[],isActive:!0,requestStatus:z.pending,subscriptionId:void 0}}.bind(void 0),bi=function(t){return(0,o.default)(this,vi),li(t,(0,e.getOperationType)(t.operation))}.bind(void 0),hi=void 0,pi=function(t){return(0,o.default)(this,hi),t.isActive?t:(0,r.default)({},t,{isActive:!0})}.bind(void 0),mi=void 0,qi=function(t){(0,o.default)(this,mi),t.phoenixSocket.isConnected()?Vt(t):t.phoenixSocket.connect()}.bind(void 0),Oi=function(t,i){(0,o.default)(this,mi);var e=bi(i);return M(t,(0,d.append)([e])),t.channelJoinCreated?Kt(t,e):qi(t),e}.bind(void 0),yi=function(t,i){return(0,o.default)(this,mi),R(t,pi(i))}.bind(void 0),gi=function(t,i){return(0,o.default)(this,mi),i.requestStatus===z.sending?yi(t,E(i)):yi(t,i)}.bind(void 0),xi=function(t,i){return(0,o.default)(this,mi),i.isActive?i:gi(t,i)}.bind(void 0),Si=function(t,i){(0,o.default)(this,mi);var e=K(t.notifiers,"request",i);return e&&xi(t,e)}.bind(void 0),ji=function(t,i){return(0,o.default)(this,mi),Si(t,i)||Oi(t,i)}.bind(void 0);exports.send=ji;var Ai=void 0,Ei=function(t,i,e,n){var r=this,u=i.request;return(0,o.default)(this,Ai),function(){(0,o.default)(this,r);var i=K(t.notifiers,"request",u);n(t,i,i?e:void 0)}.bind(this)}.bind(void 0),Ci=function(t,i){var e=this,n=t.operationType;return(0,o.default)(this,Ai),function(t){(0,o.default)(this,e),i.next(t),"subscription"!==n&&i.complete()}.bind(this)}.bind(void 0),Ti=function(t,i,e){return(0,o.default)(this,Ai),(0,r.default)({},i,{onAbort:e.error.bind(e),onResult:Ci(t,e)})}.bind(void 0),wi=function(t,i){var e=this,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},d=r.unsubscribe,s=(0,u.default)(r,["unsubscribe"]);return(0,o.default)(this,Ai),new n.default(function(n){(0,o.default)(this,e);var r=Ti(i,s,n);return ci(t,i,r),d&&Ei(t,i,r,d)}.bind(this))}.bind(void 0);exports.toObservable=wi;var Ii=void 0,_i=function(t,i){return(0,o.default)(this,Ii),(0,d.remove)(t.indexOf(i),1,t)}.bind(void 0),ki=function(t,i){var e=t.activeObservers,n=(0,u.default)(t,["activeObservers"]);return(0,o.default)(this,Ii),(0,r.default)({},n,{activeObservers:_i(e,i)})}.bind(void 0),Ji=void 0,Mi=function(t,i){if((0,o.default)(this,Ji),t.activeObservers.includes(i))return t;throw new Error("Observer is not attached to notifier")}.bind(void 0),Pi=function(t,i,e){return(0,o.default)(this,Ji),M(t,I(ki(Mi(i,e),e)))}.bind(void 0);exports.unobserve=Pi;var Ri=void 0,zi=function(t,i,e){return(0,o.default)(this,Ri),1===i.activeObservers.length?Bt(t,i):Pi(t,i,e)}.bind(void 0),Wi=function(t,i,e){return(0,o.default)(this,Ri),i.isActive?zi(t,i,e):t}.bind(void 0);exports.unobserveOrCancel=Wi;
},{"core-js/modules/es6.array.find-index":"sVmK","core-js/modules/es6.array.find":"Qppk","core-js/modules/es6.function.name":"N3yi","@jumpn/utils-composite":"Q0fQ","phoenix":"XFqm","core-js/modules/web.dom.iterable":"v6Aj","core-js/modules/es6.array.for-each":"VsIt","@babel/runtime/helpers/toConsumableArray":"Fhqp","@jumpn/utils-graphql":"hqAf","zen-observable":"U0NN","core-js/modules/es7.array.includes":"TLss","core-js/modules/es6.string.includes":"fH7p","@babel/runtime/helpers/objectSpread":"fwAU","@babel/runtime/helpers/objectWithoutProperties":"U8F3","core-js/modules/es6.array.index-of":"LvRh","@jumpn/utils-array":"YuTU","core-js/modules/es6.function.bind":"WIhg","@babel/runtime/helpers/newArrowCheck":"tS9b"}],"P6qz":[function(require,module,exports) {
"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var e=this&&this.__createBinding||(Object.create?function(e,t,n,i){void 0===i&&(i=n),Object.defineProperty(e,i,{enumerable:!0,get:function get(){return t[n]}})}:function(e,t,n,i){void 0===i&&(i=n),e[i]=t[n]}),t=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),n=this&&this.__importStar||function(n){if(n&&n.__esModule)return n;var i={};if(null!=n)for(var r in n)"default"!==r&&Object.hasOwnProperty.call(n,r)&&e(i,n,r);return t(i,n),i};Object.defineProperty(exports,"__esModule",{value:!0}),exports.GraphQLClientSocket=void 0;var i=n(require("@absinthe/socket")),r=n(require("phoenix")),o=require("./GraphQLClient"),s=function GraphQLClientSocket(){var e=this;_classCallCheck(this,GraphQLClientSocket),this.notifiers={},this.initialize=function(t){var n=t.url,o=t.token;e.url=n,e.token=o,e.absintheSocket=i.create(new r.Socket(e.url,{params:{token:e.token}}))},this.subscribe=function(t){var n=t.query,r=t.onAbort,s=t.onStart,a=t.onResult,c=o.parseGraphQLMethodFromQuery(n);e.notifiers[c]&&e.unsubscribe(c);var u=i.send(e.absintheSocket,{operation:n});i.observe(e.absintheSocket,u,{onStart:s||function(){},onAbort:r||function(){},onResult:a||function(){}}),e.notifiers[c]=u},this.unsubscribe=function(t){var n=o.parseGraphQLMethodFromQuery(t);e.notifiers[n]&&(i.cancel(e.absintheSocket,e.notifiers[n]),delete e.notifiers[n])},this.destroy=function(){for(var t in e.notifiers)i.cancel(e.absintheSocket,e.notifiers[t]),delete e.notifiers[t];e.url=null,e.token=null,e.absintheSocket=null}};exports.GraphQLClientSocket=s;
},{"@absinthe/socket":"zTqj","phoenix":"XFqm","./GraphQLClient":"fvSB"}],"H1kZ":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var V=require("fs"),A="data:font/woff;base64,",M="data:image/svg+xml;base64,",I="data:audio/mpeg;base64,";exports.default={fontGraphikBold:A+"",fontGraphikMedium:A+"",fontGraphikRegular:A+"",fontGraphikRegularItalic:A+"",fontElixirchatIcons:A+"d09GRgABAAAAAAqMAAsAAAAAEAgAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAADsAAABUIIslek9TLzIAAAFEAAAAQgAAAFZHK04JY21hcAAAAYgAAAB/AAACCorO9ixnbHlmAAACCAAABf4AAAiYjY1FkmhlYWQAAAgIAAAAMwAAADYc0vnOaGhlYQAACDwAAAAeAAAAJAoTBmhobXR4AAAIXAAAADIAAAA0NwD//2xvY2EAAAiQAAAAHAAAABwJaAv6bWF4cAAACKwAAAAfAAAAIAEqAPZuYW1lAAAIzAAAATsAAAJ2qMXyc3Bvc3QAAAoIAAAAggAAALYjab9teJxjYGRgYOBiMGCwY2BycfMJYeDLSSzJY5BiYGGAAJA8MpsxJzM9kYEDxgPKsYBpDiBmg4gCACY7BUgAeJxjYGSxZpzAwMrAwCDAtAdI9kBoxgcMhoxMDAxMDKzMDFhBQJprCoPDR8aPPMxB/7MYopgjGRYAhRlBcgCZyQrBAAB4nO2RyxHDMAhEnyws/1RKCkhBOaWqtEgFDguHNBHNvN1hhXQAYAV68AgM2puGzivSlnnnzNx4Zo8p93nfoU0ataUu0Wvx42Bj54h3FzMuBv8zUz+/yluR01wK5L3QVtwKzdfXQhvzUSDfCuR7gfwokJ+FNulXgXwWzC8dGSB1AHicrVRbbBzlFf7PzM7szo537rf1eGc9s9nZBDtre3Y9s7G96xobsHMBcRGQ1LkUKVxcpCoSbfoAbRG3tCDRFwJCQggipIjLSxC5WEImEYEXxE0B+tA0qqAioeoVCUjsHffM2obSSoWHjn79c/7vnP/MuXxnCBCy/CBVp0eJTAgEhpbmwNBYrwJ+PYIQLlmuHN8Lv5TdASm+WZbhsESP9Fal+P74QanqSvCMNCDDsxLBJ/F1B7tAX08sQpgArw/Xq1DyWPTplzwBdM0Eg74z6qfeKrmb3PyA2n6gfV+l5m1y11Fv9R/cSP2pHJRGPF1t/5h6bL03Uhry2/bGNd+30hfpG8k69N0Cv8JBC6pU4rsKAmWYHAjgUGHEgQMh/aEmCmq8ABOqIK6PQi1+LV5Qw0ZFyKkwgWIut74Rogg/0MJovxZ15Ak1jNajRefeikW8EC8oEd4TlJV7wmqe9BeYp00IftcIwjqGE9Z9L8nUYzUEWc0IZuA4HOMLejaehuNZvcDHM/F0tqDzcCye4fXCI3Acz4jDMdQ72podvlFf0Ffz3kM/Sm8nE5g3hFVg07jYKhWFEVbAoZJzpQoVPzn6eBLAMA1UhlFYpdIr5g6aw1nYnQXFzsaH+sParVc7ObEfftczdXlNNOw4kHW1ACDDlRwo3dl43pRE3f3hOninTxDsmT1Dtb7Yb6iyf9tDU1dNwm6uoEI2frZfEJxr9taixJMuBpNTPegJoKDoClyR7VbQZt4a3aR5VAnevaw2tHuzLQiXxeXG9ORDt/myutbbuVQJ6xlgjp5fHwc3CIflul9yPVaXNWM0YSbbB14VEG5BzQ0cQIUAJTfNwk9zGvcZzGk9trJ02izmlRcFTRNedAKnt+HSI07dKdaL8ZGPuINqT/YfPSrlqHav2T6vdGu25tQcynIbrlMvtj8uDhd/z3/N5VTC5fIqlyNssl9JiMwWkNRYWFbHHiMehaNIbYN6yjDhfS3Dshktrlq6otnz9z08vVV31MzYr+75wNYOavCcJnTZvKiiYCntqenfPv6JaorKgebolwpODaGTWjA1/K5IiqSPkPK3K1Eru56PQIglMBBg00i+jhZ1qeOtZrO1+GkTn5S1+Jmdz9spw7asv6j5vNp+ROnuVvKtFjUx3myOtxfGm5utHqqVWLVP9VgXzV4TF8awvLw8Rz+PMUikQBoYQxIAZiyCGYXJZ5FpFRw7NpnnoII1qJSrgO3xm1DB6nQaVsQ5pM705mWxS/+8fpbJpMDIAr/0NO/oWfoW3rkodmc2xYsZgX9BEhtqrf5khv2nUvyIauXXcWn1D+HbTIqOm/G1vJOlf8aDUeSXHuYHZDG6kGZE6dNxZ/D9KGTOScnPJ9WpW4gx95CQbCE/Srq2UrmkVUxCnrXITMaBijcAayHXsX9BOA6d1LRyC+o+DpQAJs6RlgwPhJVVMI2oAwmYzBi13/ZKtiLlzPhLJnu4gc9hjgVOdTmGWcoquROyJMknckp2kc0w1K7G2Fijq7eQ6hrotocH+VTBPeOWyy7v5iSmK18o5LsYKece9LrpO+0yl9bPs43RcyMN9oIi3cGc41hJ/rMiprk/MqnU0qWMtvXUmVNbRFZ15Suuu+mV5yclV2UP9f383v39IsvxJcndtXeXJ3k8x67OGH0e64OcguoqgaUkxd6EwcP1StrQtQT0kOb480ewFhgmTY/9ZubAXfsmp6Ym990FUiL1bnDGx26f+2ru9rHxRLh78hcRTVU2JBbx39dsD8zeIG674e41o461X8Je4dAvH2JfxlhyyK8NZBj/bdvIdrKX7CP3kF+Tx8gz5CVygpwm75Gz5MI3nXQ97M9/TQAdYAuxk9jdWun/JDPfyMiN75QxlO+WOz4xh/9pc3F2587ZSyfn55nmpdcHg2CQGRus1X9iWf2W9XhnfyKf78vnv7V/jVsWHOlAf/23/W8ddbvYedFLndfiinVyWnrzP9GdszuoyR2zR9uvHr05GKRGhoJgqP3GYEBpVl/H4HvsJ61E+l7rlFExcOX7TDO5muzkXweKrb8AAHicY2BkYGAA4i9nufXj+W2+MnAzvwCKMNyuui0Bo////5/Atp85EsjlYGACiQIAdR0NqwB4nGNgZGBgDvqfxcDA9vE/ELDtZwCKoABeALUHB4YAAHicY2BgYGByYmBg+8jAwCIPwcybgbQ7EO9jYGCNAPI3/P/PagqkXwDVbWJgAACnOQgwAAAAAAAAACYAVACaANABQgGMAcgCCgJkAvQDOgRMeJxjYGRgYOBleMUgzAACTEDMBYQMDP/BfAYAIjgCIQB4nIWQO07DQBiEx3khEgkhgaDdCgoU5yEkpJQUSZ8ivbNZJ45sr7XeREnBBag4Cieg5BgcBTExf+Umtrz+Zv6ZXcsArvGNAKcrIEO4gQuqf26S7oVb5EfhNnp4Ee7QfxXu4glz4R5u8MYdgtYlHYUP4Qau8CncpP8l3CL/CLdxh1/hDlRwK9zFIngW7uEheDdpckic3kS+n2ibl3Oz3qWRq9t1vTCuTGyuRuGwPpqZ3LjIm5VaHlW5X4+9j1XsbKamNvcmTa0qnN0a7cON98VkMIjFD7XNYJAiwYGPg8YGETz6VBoWOUr+HYM1dkxFTJxLn5svmHB8J5VWGCHE8GxrxkReNU8TgxWbSxy5ltjz68Z0PWLqmBmLjDStur7aOyUrFNVsS0fTD3nOqVVgggHvuJYPq9OzPziMeGoAeJxtiFEOgjAQBfsQQQt4kx6K1KVtqF2yLSK3l0Tjl/M1M6pSH7T6z4AKJ9Q4o0GLC67Q6NBjwE3pUYQ3E2kqvfX0FE7mzlvqbORMpvhgZ/3zVE8hUh3ZcSe0xN1IcL7obIUoZc+lzwuNM4l5rIXab+i8hJSO+cpN2Q93Sr0B2GgsmQAA",iconWhatsapp:M+"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHN2ZyB3aWR0aD0iMzZweCIgaGVpZ2h0PSIzNXB4IiB2aWV3Qm94PSIwIDAgMzYgMzUiIHZlcnNpb249IjEuMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayI+CiAgICA8dGl0bGU+V0EtLTwvdGl0bGU+CiAgICA8ZyBpZD0iUGFnZS0xIiBzdHJva2U9Im5vbmUiIHN0cm9rZS13aWR0aD0iMSIgZmlsbD0ibm9uZSIgZmlsbC1ydWxlPSJldmVub2RkIj4KICAgICAgICA8ZyBpZD0iQXJ0Ym9hcmQiIHRyYW5zZm9ybT0idHJhbnNsYXRlKC0xNDEuMDAwMDAwLCAtNTQ1LjAwMDAwMCkiPgogICAgICAgICAgICA8ZyBpZD0iV2lkZ2V0LTkiIHRyYW5zZm9ybT0idHJhbnNsYXRlKDk1LjAwMDAwMCwgOTEuMDAwMDAwKSI+CiAgICAgICAgICAgICAgICA8ZyBpZD0iY2hhdCI+CiAgICAgICAgICAgICAgICAgICAgPGcgaWQ9ImhlYWRlciI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxnIGlkPSJNRVNTRU5HRVJTLTIiIHRyYW5zZm9ybT0idHJhbnNsYXRlKDIwLjA3NjczMywgMzk2LjAwMDAwMCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGcgaWQ9IklDT05TLTMtRVhQT1JUIiB0cmFuc2Zvcm09InRyYW5zbGF0ZSgyNi4wMDAwMDAsIDU4LjAwMDAwMCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxnIGlkPSJXQS0tIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJlY3QgaWQ9IlJlY3RhbmdsZSIgZmlsbD0iIzcxQzQ2OCIgeD0iMCIgeT0iMCIgd2lkdGg9IjM0LjgwNzUwMiIgaGVpZ2h0PSIzNC44MDc1MDIiIHJ4PSI0Ij48L3JlY3Q+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik04LjI4NzI3OTcyLDIyLjYyNDM5MjggTDguMjU3MTEzMjIsMjIuNTcxODkxNSBDNy4zMTA2MzkyMywyMC45MzMzMjg0IDYuODEwODYxNTIsMTkuMDYxNTU1IDYuODExNzMxNywxNy4xNTkzMjUgQzYuODE0MzQyMjcsMTEuMTg5ODM4NCAxMS42NzMxNzk1LDYuMzMzMDMxNjEgMTcuNjQyNjY2MSw2LjMzMzAzMTYxIEMyMC41MzgzNjAyLDYuMzMzOTAxOCAyMy4yNTk0MzY2LDcuNDYxNjY0ODYgMjUuMzA0MDg3Myw5LjUwODA1NTkyIEMyNy4zNDg0NDc5LDExLjU1NDE1NjkgMjguNDc0NDcwNiwxNC4yNzQ2NTMyIDI4LjQ3NDQ3MDYsMTcuMTY4MzE2OSBDMjguNDcxNTcsMjMuMTM4NjczNyAyMy42MTMwMjI4LDI3Ljk5NTc3MDUgMTcuNjQzNTM2MywyNy45OTU3NzA1IEMxNS44MzE1MTU3LDI3Ljk5NDkwMDMgMTQuMDQxNTM5OSwyNy41MzkyMTIxIDEyLjQ2MjcyOTYsMjYuNjc4MDE2NSBMMTIuNDEyMjU4OCwyNi42NTAxNzA1IEw2Ljc4MDk4NTA4LDI4LjEyNzE2ODggTDguMjg3Mjc5NzIsMjIuNjI0MzkyOCBaIiBpZD0iUGF0aCIgZmlsbD0iI0ZGRkZGRiIgZmlsbC1ydWxlPSJub256ZXJvIj48L3BhdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0xNy41OTQyMjU2LDI1LjkxMjI1MTUgQzE2LjE0MTMwMjUsMjUuOTExMzgxMyAxNC43MDM3NTI3LDI1LjU0NTkwMjUgMTMuNDM3MDQ5NiwyNC44NTQ2ODM1IEwxMi42MDU0NDA0LDI0LjQwMTAyNTggTDExLjY4OTEzMjksMjQuNjQxMTk3NSBMOS44MDg5NDc2OSwyNS4xMzQwMTM3IEwxMC4yOTAxNjE0LDIzLjM3NTk0NDggTDEwLjU1MzI0ODEsMjIuNDE1MjU3OCBMMTAuMDU0OTIwNywyMS41NTI2MTE5IEM5LjI5NTUzNzAzLDIwLjIzNzc1ODUgOC44OTQzODA1NywxOC43MzQ2NTQ1IDguODk1MjQ5MzUsMTcuMjA2MzE1MSBDOC44OTcyODEyLDEyLjQxMDcxMTUgMTIuODAwNjUyNSw4LjUwOTA4MDYxIDE3LjU5NjI1NjEsOC41MDg1MDA0OCBDMTkuOTIzMTM3Niw4LjUwOTM3MDY3IDIyLjEwOTA0ODcsOS40MTUyMzU5MSAyMy43NTE2NzI3LDExLjA1OTAyMDIgQzI1LjM5NDI5NjgsMTIuNzAzMDk0NSAyNi4yOTkwMDE3LDE0Ljg4OTI5NTcgMjYuMjk5MDAxNywxNy4yMTM1NjY3IEMyNi4yOTY2ODEyLDIyLjAxMDA0MDQgMjIuMzkzMzEsMjUuOTEyMjUxNSAxNy41OTQyMjU2LDI1LjkxMjI1MTUgWiIgaWQ9IlBhdGgiIGZpbGw9IiM3MUM0NjgiIGZpbGwtcnVsZT0ibm9uemVybyI+PC9wYXRoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMjIuNDAwODUxNiwxOS4zNDk4NzcxIEMyMi4xMzk3OTUzLDE5LjIxOTYzOSAyMC44NTc0Mjg5LDE4LjU4ODE3MjkgMjAuNjE4OTk3NiwxOC41MDE3MzQzIEMyMC4zNzk2OTYsMTguNDE0NDI1NSAyMC4yMDU5NDg1LDE4LjM3MTQ5NjIgMjAuMDMyMjAxMSwxOC42MzE5NzI0IEMxOS44NTg0NTM2LDE4Ljg5MzAyODYgMTkuMzU4Njc1OSwxOS40ODAxMTUyIDE5LjIwNjk3MzIsMTkuNjUzODYyNiBDMTkuMDU0OTgwNSwxOS44Mjc2MTAxIDE4LjkwMjk4NzcsMTkuODQ5MzY0OCAxOC42NDE5MzE0LDE5LjcxOTQxNjcgQzE4LjM4MDg3NTIsMTkuNTg5MTc4NyAxNy41NDA1NjQxLDE5LjMxMzMyOTIgMTYuNTQ0Nzc5NCwxOC40MjUxNTc4IEMxNS43NjkxNTIzLDE3LjczNDIyODkgMTUuMjQ1ODc5NSwxNi44Nzk5OTQ4IDE1LjA5NDE3NjgsMTYuNjE4OTM4NSBDMTQuOTQyMTg0LDE2LjM1Nzg4MjIgMTUuMDc3NjQzMiwxNi4yMTcyMDE5IDE1LjIwODQ2MTQsMTYuMDg2OTYzOSBDMTUuMzI1MzU2NiwxNS45NzAwNjg3IDE1LjQ2OTUxNzcsMTUuNzgyMTA4MSAxNS41OTk3NTU4LDE1LjYzMDExNTQgQzE1LjcyOTk5MzgsMTUuNDc4MTIyNiAxNS43NzM1MDMyLDE1LjM2OTA1OTEgMTUuODYwODEyLDE1LjE5NTAyMTYgQzE1Ljk0ODEyMDgsMTUuMDIxMjc0MiAxNS45MDQ2MTE1LDE0Ljg2ODQxMTIgMTUuODM5MDU3MywxNC43MzgxNzMyIEMxNS43NzM1MDMyLDE0LjYwNzkzNTEgMTUuMjUyMjYwOSwxMy4zMjQxMTg0IDE1LjAzNDcxNCwxMi44MDI1ODYgQzE0LjgyMzI1ODQsMTIuMjk0Mzk2NCAxNC42MDc3NDIsMTIuMzYzMTQxMyAxNC40NDc5MTc1LDEyLjM1NTMwOTYgQzE0LjI5NTkyNDgsMTIuMzQ3NDc3OSAxNC4xMjIxNzczLDEyLjM0NjYwNzcgMTMuOTQ4NDI5OSwxMi4zNDY2MDc3IEMxMy43NzQ2ODI0LDEyLjM0NjYwNzcgMTMuNDkxNTgxNCwxMi40MTIxNjE4IDEzLjI1MzE1LDEyLjY3MzIxODEgQzEzLjAxNDcxODYsMTIuOTM0Mjc0NCAxMi4zNDAzMjMzLDEzLjU2NDg3MDMgMTIuMzQwMzIzMywxNC44NDgxMDY4IEMxMi4zNDAzMjMzLDE2LjEzMTM0MzQgMTMuMjc0OTA0NywxNy4zNzEzNjA3IDEzLjQwNTE0MjgsMTcuNTQ1MTA4MSBDMTMuNTM1MzgwOCwxNy43MTg4NTU2IDE1LjI0MzU1OSwyMC4zNTIzMzMyIDE3Ljg2MDUwMywyMS40ODE1NDY1IEMxOC40ODIzOTcxLDIxLjc0OTU2NDMgMTguOTY4ODMxOSwyMS45MTAyNTg5IDE5LjM0NzA3MzQsMjIuMDMwOTI0OSBDMTkuOTcxNTc4LDIyLjIyOTMyNzcgMjAuNTQwMTAwNSwyMi4yMDExOTE2IDIwLjk4OTk4NzUsMjIuMTMzODk3MSBDMjEuNDkxMjE1NSwyMi4wNTg3NzA5IDIyLjUzMzQxMDIsMjEuNTAzMzAxMiAyMi43NDk3OTY4LDIwLjg5NDQ2IEMyMi45NjczNDM3LDIwLjI4NTYxODggMjIuOTY3MzQzNywxOS43NjM1MDYyIDIyLjkwMTc4OTYsMTkuNjU1MDIyOSBDMjIuODM1NjU1MywxOS41NDU2NjkzIDIyLjY2MTkwNzksMTkuNDgwMTE1MiAyMi40MDA4NTE2LDE5LjM0OTg3NzEgWiIgaWQ9IlBhdGgiIGZpbGw9IiNGRkZGRkYiIGZpbGwtcnVsZT0ibm9uemVybyI+PC9wYXRoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZz4KICAgICAgICAgICAgICAgICAgICAgICAgPC9nPgogICAgICAgICAgICAgICAgICAgIDwvZz4KICAgICAgICAgICAgICAgIDwvZz4KICAgICAgICAgICAgPC9nPgogICAgICAgIDwvZz4KICAgIDwvZz4KPC9zdmc+",iconTelegram:M+"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHN2ZyB3aWR0aD0iMzdweCIgaGVpZ2h0PSIzNXB4IiB2aWV3Qm94PSIwIDAgMzcgMzUiIHZlcnNpb249IjEuMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayI+CiAgICA8dGl0bGU+VEcyPC90aXRsZT4KICAgIDxkZWZzPgogICAgICAgIDxsaW5lYXJHcmFkaWVudCB4MT0iNTAlIiB5MT0iMCUiIHgyPSI1MCUiIHkyPSIxMDAlIiBpZD0ibGluZWFyR3JhZGllbnQtMSI+CiAgICAgICAgICAgIDxzdG9wIHN0b3AtY29sb3I9IiMzN0FFRTIiIG9mZnNldD0iMCUiPjwvc3RvcD4KICAgICAgICAgICAgPHN0b3Agc3RvcC1jb2xvcj0iIzFFOTZDOCIgb2Zmc2V0PSIxMDAlIj48L3N0b3A+CiAgICAgICAgPC9saW5lYXJHcmFkaWVudD4KICAgICAgICA8cmVjdCBpZD0icGF0aC0yIiB4PSIwIiB5PSIwIiB3aWR0aD0iMzQuODA3NTAyIiBoZWlnaHQ9IjM0LjgwNzUwMiIgcng9IjQiPjwvcmVjdD4KICAgIDwvZGVmcz4KICAgIDxnIGlkPSJQYWdlLTEiIHN0cm9rZT0ibm9uZSIgc3Ryb2tlLXdpZHRoPSIxIiBmaWxsPSJub25lIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiPgogICAgICAgIDxnIGlkPSJBcnRib2FyZCIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTE4OS4wMDAwMDAsIC01NDUuMDAwMDAwKSI+CiAgICAgICAgICAgIDxnIGlkPSJXaWRnZXQtOSIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoOTUuMDAwMDAwLCA5MS4wMDAwMDApIj4KICAgICAgICAgICAgICAgIDxnIGlkPSJjaGF0Ij4KICAgICAgICAgICAgICAgICAgICA8ZyBpZD0iaGVhZGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGcgaWQ9Ik1FU1NFTkdFUlMtMiIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMjAuMDc2NzMzLCAzOTYuMDAwMDAwKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZyBpZD0iSUNPTlMtMy1FWFBPUlQiIHRyYW5zZm9ybT0idHJhbnNsYXRlKDI2LjAwMDAwMCwgNTguMDAwMDAwKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGcgaWQ9IlRHMiIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoNDguNTk0MDAxLCAwLjAwMDAwMCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZyBpZD0iUmVjdGFuZ2xlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1c2UgZmlsbD0idXJsKCNsaW5lYXJHcmFkaWVudC0xKSIgeGxpbms6aHJlZj0iI3BhdGgtMiI+PC91c2U+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dXNlIGZpbGw9IiM1MkE0RDMiIHhsaW5rOmhyZWY9IiNwYXRoLTIiPjwvdXNlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2c+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik04LjI5MDg1Mjc3LDE3LjA0ODI4NzkgQzEzLjQ4MTcxMzEsMTQuNzU1OTcxNSAxNi45NDMwOTk2LDEzLjI0NDczNjIgMTguNjc1MDEyNCwxMi41MTQ1ODIgQzIzLjYxOTk3NTQsMTAuNDI5ODQzNSAyNC42NDc0OTYzLDEwLjA2NzcwMjEgMjUuMzE3MjIwMSwxMC4wNTU1MDA2IEMyNS40NjQ1MTk2LDEwLjA1MzExMzkgMjUuNzkzODcwMywxMC4wOTAxMTU0IDI2LjAwNzIwOTksMTAuMjY1NTc4NyBDMjYuMTg3MzQ5NiwxMC40MTM3MzY2IDI2LjIzNjkxMzIsMTAuNjEzODc2NyAyNi4yNjA2MzEsMTAuNzU0MzQ2NiBDMjYuMjg0MzQ4OCwxMC44OTQ4MTY1IDI2LjMxMzg4MzEsMTEuMjE0ODEwNCAyNi4yOTA0MDU2LDExLjQ2NDg0NDQgQzI2LjAyMjQzNjMsMTQuMzE4NjkyNCAyNC44NjI5Mzc2LDIxLjI0NDIyODggMjQuMjczMDUwNCwyNC40NDA1ODc0IEMyNC4wMjM0NDcsMjUuNzkzMDg2NSAyMy41MzE5NzAyLDI2LjI0NjU3MjYgMjMuMDU2MTYzNywyNi4yOTA5NTIyIEMyMi4wMjIxMjYyLDI2LjM4NzM5OTQgMjEuMjM2OTI1LDI1LjU5ODI5OTIgMjAuMjM1NDA5LDI0LjkzMjg2OTEgQzE4LjY2ODIzNDMsMjMuODkxNjAyNCAxNy43ODI4ODAzLDIzLjI0MzQxMDcgMTYuMjYxNjY1OSwyMi4yMjczMjY4IEMxNC41MDM2Mzk0LDIxLjA1MzA2NiAxNS42NDMyOTQ4LDIwLjQwNzY3MTkgMTYuNjQ1MTg5LDE5LjM1MjkxNzIgQzE2LjkwNzM4OTQsMTkuMDc2ODgyOSAyMS40NjMzODI2LDE0Ljg3NjUyNjEgMjEuNTUxNTY0LDE0LjQ5NTQ4NzkgQzIxLjU2MjU5MjYsMTQuNDQ3ODMyNyAyMS41NzI4Mjc2LDE0LjI3MDE5NjcgMjEuNDY4NzEyNCwxNC4xNzYzOTg0IEMyMS4zNjQ1OTcxLDE0LjA4MjYgMjEuMjEwOTMyMSwxNC4xMTQ2NzU0IDIxLjEwMDA0MywxNC4xNDAxODUyIEMyMC45NDI4NjEyLDE0LjE3NjM0NDYgMTguNDM5Mjc5MywxNS44NTM2MTI0IDEzLjU4OTI5NzIsMTkuMTcxOTg4NSBDMTIuODc4NjYzOCwxOS42NjY1OTcyIDEyLjIzNDk5NDIsMTkuOTA3NTg3MSAxMS42NTgyODgzLDE5Ljg5NDk1ODQgQzExLjAyMjUxNjIsMTkuODgxMDM2MiA5Ljc5OTU0NTkxLDE5LjUzMDU5NjkgOC44OTAzOTMyLDE5LjIzMTA1MDEgQzcuNzc1MjgwMzksMTguODYzNjQzOCA2Ljg4OTAxMDkyLDE4LjY2OTM5MzUgNi45NjYxODUwOCwxOC4wNDU0MjM5IEM3LjAwNjM4MjE1LDE3LjcyMDQyMTkgNy40NDc5MzgwNCwxNy4zODgwNDMzIDguMjkwODUyNzcsMTcuMDQ4Mjg3OSBaIiBpZD0iUGF0aCIgZmlsbD0iI0ZGRkZGRiIgZmlsbC1ydWxlPSJub256ZXJvIj48L3BhdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9nPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9nPgogICAgICAgICAgICAgICAgICAgICAgICA8L2c+CiAgICAgICAgICAgICAgICAgICAgPC9nPgogICAgICAgICAgICAgICAgPC9nPgogICAgICAgICAgICA8L2c+CiAgICAgICAgPC9nPgogICAgPC9nPgo8L3N2Zz4=",iconFacebook:M+"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHN2ZyB3aWR0aD0iMzdweCIgaGVpZ2h0PSIzNXB4IiB2aWV3Qm94PSIwIDAgMzcgMzUiIHZlcnNpb249IjEuMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayI+CiAgICA8dGl0bGU+RkI8L3RpdGxlPgogICAgPGRlZnM+CiAgICAgICAgPGxpbmVhckdyYWRpZW50IHgxPSI1MCUiIHkxPSI5Ny4wNzgyMTUzJSIgeDI9IjUwJSIgeTI9IjAlIiBpZD0ibGluZWFyR3JhZGllbnQtMSI+CiAgICAgICAgICAgIDxzdG9wIHN0b3AtY29sb3I9IiMwMDYyRTAiIG9mZnNldD0iMCUiPjwvc3RvcD4KICAgICAgICAgICAgPHN0b3Agc3RvcC1jb2xvcj0iIzE5QUZGRiIgb2Zmc2V0PSIxMDAlIj48L3N0b3A+CiAgICAgICAgPC9saW5lYXJHcmFkaWVudD4KICAgICAgICA8cmVjdCBpZD0icGF0aC0yIiB4PSIwIiB5PSIwIiB3aWR0aD0iMzQuODA3NTAyIiBoZWlnaHQ9IjM0LjgwNzUwMiIgcng9IjQiPjwvcmVjdD4KICAgIDwvZGVmcz4KICAgIDxnIGlkPSJQYWdlLTEiIHN0cm9rZT0ibm9uZSIgc3Ryb2tlLXdpZHRoPSIxIiBmaWxsPSJub25lIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiPgogICAgICAgIDxnIGlkPSJBcnRib2FyZCIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTIzOC4wMDAwMDAsIC01NDUuMDAwMDAwKSI+CiAgICAgICAgICAgIDxnIGlkPSJXaWRnZXQtOSIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoOTUuMDAwMDAwLCA5MS4wMDAwMDApIj4KICAgICAgICAgICAgICAgIDxnIGlkPSJjaGF0Ij4KICAgICAgICAgICAgICAgICAgICA8ZyBpZD0iaGVhZGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGcgaWQ9Ik1FU1NFTkdFUlMtMiIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMjAuMDc2NzMzLCAzOTYuMDAwMDAwKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZyBpZD0iSUNPTlMtMy1FWFBPUlQiIHRyYW5zZm9ybT0idHJhbnNsYXRlKDI2LjAwMDAwMCwgNTguMDAwMDAwKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGcgaWQ9IkZCIiB0cmFuc2Zvcm09InRyYW5zbGF0ZSg5Ny4xODgwMDMsIDAuMDAwMDAwKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxnIGlkPSJSZWN0YW5nbGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVzZSBmaWxsPSJ1cmwoI2xpbmVhckdyYWRpZW50LTEpIiB4bGluazpocmVmPSIjcGF0aC0yIj48L3VzZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1c2UgZmlsbD0iIzQ2NjVBOCIgeGxpbms6aHJlZj0iI3BhdGgtMiI+PC91c2U+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTIzLjU1OTExODcsMzQuODA4NDUyNyBMMjMuNTU5MTE4NywyMS44OTcyNzIzIEwyNy40MzU5NjU4LDIxLjg5NzI3MjMgTDI4LjAxNjQ2ODcsMTcuMzk1OTQ0OSBMMjMuNTU5MTE4NywxNy4zOTU5NDQ5IEwyMy41NTkxMTg3LDE0LjUyMjEzMTcgQzIzLjU1OTExODcsMTMuMjE4ODkzNSAyMy45MjEwMDcxLDEyLjMzMDc3OTcgMjUuNzg5ODE5LDEyLjMzMDc3OTcgTDI4LjE3MzM5ODksMTIuMzI5NzM4MSBMMjguMTczMzk4OSw4LjMwMzcxNDY4IEMyNy43NjExNjc4LDguMjQ4ODU4NTUgMjYuMzQ2MjQ5OSw4LjEyNjMwMDIzIDI0LjcwMDEwMzEsOC4xMjYzMDAyMyBDMjEuMjYzNDkzNyw4LjEyNjMwMDIzIDE4LjkxMDY5ODEsMTAuMjI0MDI2NSAxOC45MTA2OTgxLDE0LjA3NjMzODggTDE4LjkxMDY5ODEsMTcuMzk1OTQ0OSBMMTUuMDIzODk4MSwxNy4zOTU5NDQ5IEwxNS4wMjM4OTgxLDIxLjg5NzI3MjMgTDE4LjkxMDY5ODEsMjEuODk3MjcyMyBMMTguOTEwNjk4MSwzNC44MDg0NTI3IEwyMy41NTkxMTg3LDM0LjgwODQ1MjcgWiIgaWQ9ImYiIGZpbGw9IiNGRkZGRkYiIGZpbGwtcnVsZT0ibm9uemVybyI+PC9wYXRoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZz4KICAgICAgICAgICAgICAgICAgICAgICAgPC9nPgogICAgICAgICAgICAgICAgICAgIDwvZz4KICAgICAgICAgICAgICAgIDwvZz4KICAgICAgICAgICAgPC9nPgogICAgICAgIDwvZz4KICAgIDwvZz4KPC9zdmc+",iconViber:M+"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHN2ZyB3aWR0aD0iMzdweCIgaGVpZ2h0PSIzNXB4IiB2aWV3Qm94PSIwIDAgMzcgMzUiIHZlcnNpb249IjEuMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayI+CiAgICA8dGl0bGU+VklCRVI8L3RpdGxlPgogICAgPGcgaWQ9IlBhZ2UtMSIgc3Ryb2tlPSJub25lIiBzdHJva2Utd2lkdGg9IjEiIGZpbGw9Im5vbmUiIGZpbGwtcnVsZT0iZXZlbm9kZCI+CiAgICAgICAgPGcgaWQ9IkFydGJvYXJkIiB0cmFuc2Zvcm09InRyYW5zbGF0ZSgtMzM1LjAwMDAwMCwgLTU0NS4wMDAwMDApIj4KICAgICAgICAgICAgPGcgaWQ9IldpZGdldC05IiB0cmFuc2Zvcm09InRyYW5zbGF0ZSg5NS4wMDAwMDAsIDkxLjAwMDAwMCkiPgogICAgICAgICAgICAgICAgPGcgaWQ9ImNoYXQiPgogICAgICAgICAgICAgICAgICAgIDxnIGlkPSJoZWFkZXIiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZyBpZD0iTUVTU0VOR0VSUy0yIiB0cmFuc2Zvcm09InRyYW5zbGF0ZSgyMC4wNzY3MzMsIDM5Ni4wMDAwMDApIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxnIGlkPSJJQ09OUy0zLUVYUE9SVCIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMjYuMDAwMDAwLCA1OC4wMDAwMDApIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZyBpZD0iVklCRVIiIHRyYW5zZm9ybT0idHJhbnNsYXRlKDE5NC4zNzYwMDYsIDAuMDAwMDAwKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyZWN0IGlkPSJSZWN0YW5nbGUiIGZpbGw9IiM3MzYwRjIiIHg9IjAiIHk9IjAiIHdpZHRoPSIzNC44MDc1MDIiIGhlaWdodD0iMzQuODA3NTAyIiByeD0iNCI+PC9yZWN0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMjYuNzE0MTc4NCwxMi40NzMzNzAxIEMyNi4zNDY5OTYxLDExLjE2MjUyOTQgMjUuNjE5OTc1MSwxMC4xMjcwNzUzIDI0LjU1NTE0NjQsOS4zOTQ1NDY0OSBDMjMuMjExMjU5Miw4LjQ2NzQxMTI3IDIxLjY2NTQyMTksOC4xNDA2MTg3OCAyMC4zMzA3MTQxLDcuOTQwNTA0NTMgQzE4LjQ4Mzc4NjgsNy42NjUxMTc1NiAxNi44MTEyNzE3LDcuNjI2NTYzNTQgMTUuMjE1ODY0Miw3LjgyMTE3MDQgQzEzLjcyMTQzMjQsOC4wMDQ3NjE1NSAxMi41OTYwMTg4LDguMjk2NjcxMTQgMTEuNTY5NzQ0MSw4Ljc2ODUwMDc2IEM5LjU1NzU4NSw5LjY5MzgwMDE5IDguMzQ5NTU0OTYsMTEuMTkwMDY3OCA3Ljk4MDUzNjg1LDEzLjIxNTA3ODMgQzcuODAwNjE3NzYsMTQuMTk5MTI2OSA3LjY3OTQ0NzM2LDE1LjA4NzcwODEgNy42MDk2ODI5NSwxNS45MzU4OTk1IEM3LjQ0ODEyMjc0LDE3Ljg5NjY1MzEgNy41OTQ5OTU2NiwxOS42MzE1ODk0IDguMDU3NjQ1MzcsMjEuMjM5ODQ3OSBDOC41MDkyNzkzOCwyMi44MDc3MTYxIDkuMjk2ODg1MzMsMjMuOTI3NjIyNCAxMC40NjYzNjEzLDI0LjY2MzgyMjggQzEwLjc2Mzc3ODgsMjQuODUxMDg2MSAxMS4xNDU2NDg0LDI0Ljk4Njk0MzMgMTEuNTE0NjY2NSwyNS4xMTcyOTMxIEMxMS43MjM5NjA2LDI1LjE5MDcyOTYgMTEuOTI3NzQ2OSwyNS4yNjIzMzAyIDEyLjA5NDgxNDUsMjUuMzQxMjc0MSBDMTIuMjQ5MDMxMSwyNS40MTI4NzQ4IDEyLjI0OTAzMTEsMjUuNDI1NzI2MyAxMi4yNDcxOTUzLDI1LjU1NDIzOTggQzEyLjIzNDM0MzgsMjYuNjY4NjM4MyAxMi4yNDcxOTUzLDI4Ljg1MzM3MzMgMTIuMjQ3MTk1MywyOC44NTMzNzMzIEwxMi4yNTA4Njc0LDI5LjMxOTY5NDYgTDEzLjA4ODA0MzEsMjkuMzE5Njk0NiBMMTMuMjIzOTAwMywyOS4xODc1MDg5IEMxMy4zMTM4NTk4LDI5LjEwMzA1NzIgMTUuMzg4NDQwMSwyNy4wOTgyNDE4IDE2LjEyODMxMjYsMjYuMjkwNDQwNyBMMTYuMjI5Mjg3NCwyNi4xNzg0NDk4IEMxNi4zNTU5NjU2LDI2LjAzMTU3NjggMTYuMzU1OTY1NiwyNi4wMzE1NzY4IDE2LjQ4NjMxNSwyNi4wMjk3NDEgQzE3LjQ4NTA1MDksMjYuMDA5NTQ1OSAxOC41MDU4MTc3LDI1Ljk3MDk5MTkgMTkuNTE5MjQwOSwyNS45MTU5MTQ4IEMyMC43NDc0NjYxLDI1Ljg0OTgyMTkgMjIuMTcwMjk3MiwyNS43MzA0ODczIDIzLjUxMDUxMjksMjUuMTcyMzcwMiBDMjQuNzM2OTAxOCwyNC42NjAxNTEzIDI1LjYzMjgyNjYsMjMuODQ2ODQyMyAyNi4xNzA3NDg2LDIyLjc1NjMxMDYgQzI2LjczMjUzNzgsMjEuNjE4MDQ1NCAyNy4wNjQ4Mzc3LDIwLjM4NjE0OTEgMjcuMTg5Njc5NywxOC45ODkwMjAxIEMyNy40MDk5ODksMTYuNTMyNTcwNiAyNy4yNTM5MzY3LDE0LjQwMTA3NzQgMjYuNzE0MTc4NCwxMi40NzMzNzAxIFogTTIyLjI5Njk3NTUsMjIuMDI1NjE4IEMyMS45ODg1NDIzLDIyLjUyNjgyMTggMjEuNTI5NTY0MiwyMi44NzU2NDUyIDIwLjk4Nzk3MDIsMjMuMTAxNDYyIEMyMC41OTE0MTMzLDIzLjI2NjY5NDMgMjAuMTg3NTEyNywyMy4yMzE4MTE4IDE5Ljc5NjQ2MzcsMjMuMDY2NTggQzE2LjUyMzAzMzIsMjEuNjgwNDY2NyAxMy45NTQ1OTMzLDE5LjQ5NzU2NzkgMTIuMjU4MjExLDE2LjM1ODE1ODkgQzExLjkwNzU1MTgsMTUuNzExOTE4MSAxMS42NjUyMTE1LDE1LjAwNjkyOCAxMS4zODYxNTI5LDE0LjMyMzk2ODkgQzExLjMyOTIzOTUsMTQuMTg0NDM5NiAxMS4zMzI5MTE2LDE0LjAxOTIwNzggMTEuMzA3MjA4NiwxMy44NjQ5OTEzIEMxMS4zMzEwNzUzLDEyLjc2MTYwODEgMTIuMTc3NDMwOSwxMi4xMzkyMzQ0IDEzLjAzMjk2NTUsMTEuOTUxOTcxMiBDMTMuMzU5NzU4LDExLjg3ODUzNDcgMTMuNjQ5ODMxOCwxMS45OTQxOTczIDEzLjg5MjE3MjEsMTIuMjI3MzU4MSBDMTQuNTY0MTE2LDEyLjg2NjI1NTQgMTUuMDk0Njk0MywxMy42MDk3OTk0IDE1LjQ5NDkyMjgsMTQuNDQzMzAzMSBDMTUuNjY5MzM0NSwxNC44MDg2NDk2IDE1LjU5MDM5MDIsMTUuMTMxNzcgMTUuMjkyOTcyNywxNS40MDM0ODQ5IEMxNS4yMzA1NTE1LDE1LjQ2MDM5ODMgMTUuMTY2Mjk0OSwxNS41MTE4MDM4IDE1LjA5ODM2NTksMTUuNTYzMjA5MyBDMTQuNDE5MDc4OCwxNi4wNzM1OTI1IDE0LjMxOTkzOTQsMTYuNDYwOTcgMTQuNjgxNjE0MywxNy4yMzAyMTcgQzE1LjI5ODQ4MDYsMTguNTM5MjIxOSAxNi4zMjI5MTksMTkuNDE4NjIzNiAxNy42NDY2MTExLDE5Ljk2Mzg4OTIgQzE3Ljk5NTQzNDUsMjAuMTA3MDkwNiAxOC4zMjQwNjI4LDIwLjAzNTQ4OTkgMTguNTkwMjY5OSwxOS43NTI3NTkzIEMxOC42MjY5ODgxLDE5LjcxNjA0MTEgMTguNjY3Mzc3OSwxOS42NzkzMjI4IDE4LjY5MzA4MDksMTkuNjM1MjYxIEMxOS4yMTQ0Nzk4LDE4Ljc2NTAzOTEgMTkuOTcyNzExMiwxOC44NTEzMjcxIDIwLjY3MjE5MzQsMTkuMzQ3MDIzIEMyMS4xMzExNzE1LDE5LjY3MzgxNTQgMjEuNTc3Mjk4MSwyMC4wMTg5NjY4IDIyLjAzMDc2NzksMjAuMzUxMjY2NyBDMjIuNzIyOTA2OSwyMC44NTk4MTQxIDIyLjcxNzM5OTEsMjEuMzM3MTUxMSAyMi4yOTY5NzU1LDIyLjAyNTYxOCBaIE0xNy45NTUwNDQzLDEzLjMzOTkyMDMgQzE3LjgwMDgyNzcsMTMuMzM5OTIwMyAxNy42NDY2MTExLDEzLjM1Mjc3MTggMTcuNDk0MjMwOCwxMy4zNzg0NzQzIEMxNy4yMzcyMDMyLDEzLjQyMDcwMDQgMTYuOTk2Njk4NywxMy4yNDgxMjUgMTYuOTUyNjM2OCwxMi45OTEwOTc0IEMxNi45MTA0MTA3LDEyLjczNTkwNTUgMTcuMDgyOTg2NiwxMi40OTM1NjUyIDE3LjM0MDAxNDIsMTIuNDUxMzM5MSBDMTcuNTQxOTY0MywxMi40MTY0NTY3IDE3Ljc0OTQyMjIsMTIuMzk5OTMzNiAxNy45NTUwNDQzLDEyLjM5OTkzMzYgQzE5Ljk5MTA3MDUsMTIuMzk5OTMzNiAyMS42NDcwNjI1LDE0LjA1NTkyNjEgMjEuNjQ3MDYyNSwxNi4wOTE5NTE5IEMyMS42NDcwNjI1LDE2LjI5OTQwOTggMjEuNjMwNTM5NCwxNi41MDY4Njc2IDIxLjU5NTY1NywxNi43MDY5ODI0IEMyMS41NTcxMDMsMTYuOTM2NDcxMiAyMS4zNTg4MjQ1LDE3LjA5OTg2NzIgMjEuMTMzMDA3MywxNy4wOTk4NjcyIEMyMS4xMDczMDQ4LDE3LjA5OTg2NzIgMjEuMDgxNjAxOCwxNy4wOTgwMzE0IDIxLjA1NDA2MywxNy4wOTI1MjM2IEMyMC43OTg4NzE2LDE3LjA1MDI5NzUgMjAuNjI2Mjk1NywxNi44MDc5NTcxIDIwLjY2ODUyMTgsMTYuNTUyNzY1OCBDMjAuNjk0MjI0MywxNi40MDIyMjA4IDIwLjcwNzA3NTgsMTYuMjQ4MDA0MiAyMC43MDcwNzU4LDE2LjA5MTk1MTkgQzIwLjcwNzA3NTgsMTQuNTc1NDg4NyAxOS40NzE1MDc0LDEzLjMzOTkyMDMgMTcuOTU1MDQ0MywxMy4zMzk5MjAzIFogTTIwLjIzNzA4MjQsMTYuMTU5ODgwNSBDMjAuMjM3MDgyNCwxNi40MTg3NDM5IDIwLjAyNTk1MjUsMTYuNjI5ODczOCAxOS43NjcwODkxLDE2LjYyOTg3MzggQzE5LjUwODIyNTcsMTYuNjI5ODczOCAxOS4yOTcwOTU3LDE2LjQxODc0MzkgMTkuMjk3MDk1NywxNi4xNTk4ODA1IEMxOS4yOTcwOTU3LDE1LjM4MzI4OTggMTguNjYzNzA2NCwxNC43NDk5MDA0IDE3Ljg4NzExNTYsMTQuNzQ5OTAwNCBDMTcuNjI4MjUyMiwxNC43NDk5MDA0IDE3LjQxNzEyMjMsMTQuNTM4NzcwNSAxNy40MTcxMjIzLDE0LjI3OTkwNyBDMTcuNDE3MTIyMywxNC4wMjEwNDM2IDE3LjYyODI1MjIsMTMuODA5OTEzNyAxNy44ODcxMTU2LDEzLjgwOTkxMzcgQzE5LjE4MzI2OTQsMTMuODA5OTEzNyAyMC4yMzcwODI0LDE0Ljg2MzcyNzIgMjAuMjM3MDgyNCwxNi4xNTk4ODA1IFogTTIyLjkyMTE4NTQsMTcuMjA0NTE0IEMyMi44NzE2MTU3LDE3LjQyMjk4NzYgMjIuNjc3MDA4OCwxNy41Njk4NjA2IDIyLjQ2MjIwNzMsMTcuNTY5ODYwNiBDMjIuNDI3MzI0OCwxNy41Njk4NjA2IDIyLjM5MjQ0MjksMTcuNTY2MTg5IDIyLjM1NzU2MDQsMTcuNTU4ODQ1MyBDMjIuMTA0MjA0NCwxNy41MDAwOTYyIDIxLjk0NjMxNjIsMTcuMjQ4NTc1OSAyMi4wMDMyMjk2LDE2Ljk5NTIyMDQgQzIyLjA3MTE1ODIsMTYuNjk1OTY2NyAyMi4xMDYwNDA3LDE2LjM4NTY5NzcgMjIuMTA2MDQwNywxNi4wNzM1OTI1IEMyMi4xMDYwNDA3LDEzLjc4OTcxODUgMjAuMjQ2MjYxOSwxMS45Mjk5NDAyIDE3Ljk2MjM4NzksMTEuOTI5OTQwMiBDMTcuNjUwMjgzMiwxMS45Mjk5NDAyIDE3LjM0MDAxNDIsMTEuOTY0ODIyNyAxNy4wNDA3NjA1LDEyLjAzMjc1MTMgQzE2Ljc4NzQwNDUsMTIuMDkxNTAwNSAxNi41MzU4ODQ3LDExLjkzMTc3NiAxNi40Nzg5NzE0LDExLjY3ODQyMDUgQzE2LjQyMDIyMjIsMTEuNDI1MDY0NCAxNi41Nzk5NDY2LDExLjE3MzU0NDcgMTYuODMzMzAyNiwxMS4xMTY2MzEzIEMxNy4yMDA0ODUsMTEuMDMyMTc5NiAxNy41ODA1MTgzLDEwLjk4OTk1MzUgMTcuOTYyMzg3OSwxMC45ODk5NTM1IEMyMC43NjU4MjUsMTAuOTg5OTUzNSAyMy4wNDYwMjc0LDEzLjI3MDE1NTkgMjMuMDQ2MDI3NCwxNi4wNzM1OTI1IEMyMy4wNDYwMjc0LDE2LjQ1NTQ2MjEgMjMuMDAzODAxMywxNi44MzU0OTU5IDIyLjkyMTE4NTQsMTcuMjA0NTE0IFoiIGlkPSJTaGFwZSIgZmlsbD0iI0ZGRkZGRiIgZmlsbC1ydWxlPSJub256ZXJvIj48L3BhdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9nPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9nPgogICAgICAgICAgICAgICAgICAgICAgICA8L2c+CiAgICAgICAgICAgICAgICAgICAgPC9nPgogICAgICAgICAgICAgICAgPC9nPgogICAgICAgICAgICA8L2c+CiAgICAgICAgPC9nPgogICAgPC9nPgo8L3N2Zz4=",iconVK:M+"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHN2ZyB3aWR0aD0iMzdweCIgaGVpZ2h0PSIzNXB4IiB2aWV3Qm94PSIwIDAgMzcgMzUiIHZlcnNpb249IjEuMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayI+CiAgICA8dGl0bGU+Vks8L3RpdGxlPgogICAgPGcgaWQ9IlBhZ2UtMSIgc3Ryb2tlPSJub25lIiBzdHJva2Utd2lkdGg9IjEiIGZpbGw9Im5vbmUiIGZpbGwtcnVsZT0iZXZlbm9kZCI+CiAgICAgICAgPGcgaWQ9IkFydGJvYXJkIiB0cmFuc2Zvcm09InRyYW5zbGF0ZSgtMjg2LjAwMDAwMCwgLTU0NS4wMDAwMDApIj4KICAgICAgICAgICAgPGcgaWQ9IldpZGdldC05IiB0cmFuc2Zvcm09InRyYW5zbGF0ZSg5NS4wMDAwMDAsIDkxLjAwMDAwMCkiPgogICAgICAgICAgICAgICAgPGcgaWQ9ImNoYXQiPgogICAgICAgICAgICAgICAgICAgIDxnIGlkPSJoZWFkZXIiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZyBpZD0iTUVTU0VOR0VSUy0yIiB0cmFuc2Zvcm09InRyYW5zbGF0ZSgyMC4wNzY3MzMsIDM5Ni4wMDAwMDApIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxnIGlkPSJJQ09OUy0zLUVYUE9SVCIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMjYuMDAwMDAwLCA1OC4wMDAwMDApIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZyBpZD0iVksiIHRyYW5zZm9ybT0idHJhbnNsYXRlKDE0NS43ODIwMDQsIDAuMDAwMDAwKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyZWN0IGlkPSJSZWN0YW5nbGUiIGZpbGw9IiM1QTgxQjQiIHg9IjAiIHk9IjAiIHdpZHRoPSIzNC44MDc1MDIiIGhlaWdodD0iMzQuODA3NTAyIiByeD0iNCI+PC9yZWN0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMjcuMDg5OTEyMSwxMy4wNDA2NTg0IEMyNy4yMzMxMTc2LDEyLjU2MzEwODIgMjcuMDg5OTEyMiwxMi4yMTIyMDA0IDI2LjQwODM0NzMsMTIuMjEyMjAwNCBMMjQuMTU0NTc0NSwxMi4yMTIyMDA0IEMyMy41ODE1MTQ0LDEyLjIxMjIwMDQgMjMuMzE3MzI1NCwxMi41MTUzMzM0IDIzLjE3NDA0MDUsMTIuODQ5NTk4NiBDMjMuMTc0MDQwNSwxMi44NDk1OTg2IDIyLjAyNzkyMDEsMTUuNjQzMjM3MyAyMC40MDQyODkyLDE3LjQ1Nzg4ODIgQzE5Ljg3OTAwNCwxNy45ODMxNzM1IDE5LjY0MDIwOSwxOC4xNTAzMDYxIDE5LjM1MzY3ODksMTguMTUwMzA2MSBDMTkuMjEwNDMzNywxOC4xNTAzMDYxIDE4Ljk5NTUyNjIsMTcuOTgzMTczNSAxOC45OTU1MjYyLDE3LjUwNTY2MzEgTDE4Ljk5NTUyNjIsMTMuMDQwNjU4NCBDMTguOTk1NTI2MiwxMi40Njc1OTgyIDE4LjgzNjc0ODksMTIuMjEyMjAwNCAxOC4zNTkxNTg5LDEyLjIxMjIwMDQgTDE0LjgxNzUxNjEsMTIuMjEyMjAwNCBDMTQuNDU5NDAzMiwxMi4yMTIyMDA0IDE0LjI0NDAzMTIsMTIuNDc4MTcwNyAxNC4yNDQwMzEyLDEyLjczMDI0MDkgQzE0LjI0NDAzMTIsMTMuMjczNDkxNCAxNS4wNTU4MDY5LDEzLjM5ODc3MTQgMTUuMTM5NDgzNiwxNC45MjY5MzE5IEwxNS4xMzk0ODM2LDE4LjI0NTg1NTkgQzE1LjEzOTQ4MzYsMTguOTczNTE4NiAxNS4wMDgwNzE3LDE5LjEwNTQ0NjIgMTQuNzIxNTQxNiwxOS4xMDU0NDYyIEMxMy45NTc1MDExLDE5LjEwNTQ0NjIgMTIuMDk4OTcwNCwxNi4yOTkzMjcyIDEwLjk5NjY5LDEzLjA4ODM5MzYgQzEwLjc4MDY2OTYsMTIuNDY0Mjk5MyAxMC41NjQwMDQ1LDEyLjIxMjIwMDQgOS45ODgwMDMwOCwxMi4yMTIyMDA0IEw3LjczNDIzMDM0LDEyLjIxMjIwMDQgQzcuMDkwMjk1MjcsMTIuMjEyMjAwNCA2Ljk2MTUwMDQsMTIuNTE1MzMzNCA2Ljk2MTUwMDQsMTIuODQ5NTk4NiBDNi45NjE1MDA0LDEzLjQ0NjU0NjIgNy43MjU1ODA2NywxNi40MDczMTc1IDEwLjUxOTE3OTYsMjAuMzIzMTQ5NSBDMTIuMzgxNTY1NiwyMi45OTczNTA5IDE1LjAwNTU0NTIsMjQuNDQ2OTY2NiAxNy4zOTMyNTYzLDI0LjQ0Njk2NjYgQzE4LjgyNTg2NzEsMjQuNDQ2OTY2NiAxOS4wMDMwOTQsMjQuMTI0OTk5MSAxOS4wMDMwOTQsMjMuNTcwNDExMSBMMTkuMDAzMDk0LDIxLjU0OTI1ODggQzE5LjAwMzA5NCwyMC45MDUzMjM4IDE5LjEzODgxMTEsMjAuNzc2ODEyMiAxOS41OTI0NzM5LDIwLjc3NjgxMjIgQzE5LjkyNjczOTEsMjAuNzc2ODEyMiAyMC40OTk3OTkzLDIwLjk0Mzk0NDggMjEuODM2OTM5NywyMi4yMzMzMTA0IEMyMy4zNjUwNjA2LDIzLjc2MTQzMTIgMjMuNjE2OTkxNSwyNC40NDY5NjY2IDI0LjQ3NjU0MjEsMjQuNDQ2OTY2NiBMMjYuNzMwMzE0OCwyNC40NDY5NjY2IEMyNy4zNzQyNDk5LDI0LjQ0Njk2NjYgMjcuNjk2MjE3NCwyNC4xMjQ5OTkxIDI3LjUxMDQ3OTQsMjMuNDg5NjE0MiBDMjcuMzA3MjI2MiwyMi44NTYzNTIyIDI2LjU3NzYzMTEsMjEuOTM3NTczMyAyNS42MDk1MjY1LDIwLjg0ODQzNDcgQzI1LjA4NDIwMTUsMjAuMjI3NjM5NCAyNC4yOTYyNzM1LDE5LjU1OTEwODkgMjQuMDU3NDc4NSwxOS4yMjQ3NjQyIEMyMy43MjMyMTMzLDE4Ljc5NTAyODcgMjMuODE4NzIzMywxOC42MDM5Njg4IDI0LjA1NzQ3ODUsMTguMjIxOTY4NSBDMjQuMDU3NDc4NSwxOC4yMjE5Njg1IDI2LjgwMzM4MjEsMTQuMzUzODcxNyAyNy4wODk5MTIxLDEzLjA0MDY1ODQgTDI3LjA4OTkxMjEsMTMuMDQwNjU4NCBaIiBpZD0iUGF0aCIgZmlsbD0iI0ZGRkZGRiI+PC9wYXRoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZz4KICAgICAgICAgICAgICAgICAgICAgICAgPC9nPgogICAgICAgICAgICAgICAgICAgIDwvZz4KICAgICAgICAgICAgICAgIDwvZz4KICAgICAgICAgICAgPC9nPgogICAgICAgIDwvZz4KICAgIDwvZz4KPC9zdmc+",notificationSound:I+""};
},{"fs":"tuDi"}],"dZYI":[function(require,module,exports) {
var define;
var t;!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof t&&t.amd?t(n):e.dayjs=n()}(this,function(){"use strict";var t="millisecond",e="second",n="minute",r="hour",i="day",s="week",u="month",a="quarter",o="year",h="date",f=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[^0-9]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?.?(\d+)?$/,c=/\[([^\]]+)]|Y{2,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,d=function(t,e,n){var r=String(t);return!r||r.length>=e?t:""+Array(e+1-r.length).join(n)+t},$={s:d,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?"+":"-")+d(r,2,"0")+":"+d(i,2,"0")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,u),s=n-i<0,a=e.clone().add(r+(s?-1:1),u);return+(-(r+(n-i)/(s?i-a:a-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(f){return{M:u,y:o,w:s,d:i,D:h,h:r,m:n,s:e,ms:t,Q:a}[f]||String(f||"").toLowerCase().replace(/s$/,"")},u:function(t){return void 0===t}},l={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_")},y="en",M={};M[y]=l;var m=function(t){return t instanceof S},v=function(t,e,n){var r;if(!t)return y;if("string"==typeof t)M[t]&&(r=t),e&&(M[t]=e,r=t);else{var i=t.name;M[i]=t,r=i}return!n&&r&&(y=r),r||!n&&y},D=function(t,e){if(m(t))return t.clone();var n="object"==typeof e?e:{};return n.date=t,n.args=arguments,new S(n)},g=$;g.l=v,g.i=m,g.w=function(t,e){return D(t,{locale:e.$L,utc:e.$u,$offset:e.$offset})};var S=function(){function d(t){this.$L=this.$L||v(t.locale,null,!0),this.parse(t)}var $=d.prototype;return $.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(g.u(e))return new Date;if(e instanceof Date)return new Date(e);if("string"==typeof e&&!/Z$/i.test(e)){var r=e.match(f);if(r){var i=r[2]-1||0,s=(r[7]||"0").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init()},$.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},$.$utils=function(){return g},$.isValid=function(){return!("Invalid Date"===this.$d.toString())},$.isSame=function(t,e){var n=D(t);return this.startOf(e)<=n&&n<=this.endOf(e)},$.isAfter=function(t,e){return D(t)<this.startOf(e)},$.isBefore=function(t,e){return this.endOf(e)<D(t)},$.$g=function(t,e,n){return g.u(t)?this[e]:this.set(n,t)},$.unix=function(){return Math.floor(this.valueOf()/1e3)},$.valueOf=function(){return this.$d.getTime()},$.startOf=function(t,a){var f=this,c=!!g.u(a)||a,d=g.p(t),$=function(t,e){var n=g.w(f.$u?Date.UTC(f.$y,e,t):new Date(f.$y,e,t),f);return c?n:n.endOf(i)},l=function(t,e){return g.w(f.toDate()[t].apply(f.toDate("s"),(c?[0,0,0,0]:[23,59,59,999]).slice(e)),f)},y=this.$W,M=this.$M,m=this.$D,v="set"+(this.$u?"UTC":"");switch(d){case o:return c?$(1,0):$(31,11);case u:return c?$(1,M):$(0,M+1);case s:var D=this.$locale().weekStart||0,S=(y<D?y+7:y)-D;return $(c?m-S:m+(6-S),M);case i:case h:return l(v+"Hours",0);case r:return l(v+"Minutes",1);case n:return l(v+"Seconds",2);case e:return l(v+"Milliseconds",3);default:return this.clone()}},$.endOf=function(t){return this.startOf(t,!1)},$.$set=function(s,a){var f,c=g.p(s),d="set"+(this.$u?"UTC":""),$=(f={},f[i]=d+"Date",f[h]=d+"Date",f[u]=d+"Month",f[o]=d+"FullYear",f[r]=d+"Hours",f[n]=d+"Minutes",f[e]=d+"Seconds",f[t]=d+"Milliseconds",f)[c],l=c===i?this.$D+(a-this.$W):a;if(c===u||c===o){var y=this.clone().set(h,1);y.$d[$](l),y.init(),this.$d=y.set(h,Math.min(this.$D,y.daysInMonth())).$d}else $&&this.$d[$](l);return this.init(),this},$.set=function(t,e){return this.clone().$set(t,e)},$.get=function(t){return this[g.p(t)]()},$.add=function(t,a){var h,f=this;t=Number(t);var c=g.p(a),d=function(e){var n=D(f);return g.w(n.date(n.date()+Math.round(e*t)),f)};if(c===u)return this.set(u,this.$M+t);if(c===o)return this.set(o,this.$y+t);if(c===i)return d(1);if(c===s)return d(7);var $=(h={},h[n]=6e4,h[r]=36e5,h[e]=1e3,h)[c]||1,l=this.$d.getTime()+t*$;return g.w(l,this)},$.subtract=function(t,e){return this.add(-1*t,e)},$.format=function(t){var e=this;if(!this.isValid())return"Invalid Date";var n=t||"YYYY-MM-DDTHH:mm:ssZ",r=g.z(this),i=this.$locale(),s=this.$H,u=this.$m,a=this.$M,o=i.weekdays,h=i.months,f=function(t,r,i,s){return t&&(t[r]||t(e,n))||i[r].substr(0,s)},d=function(t){return g.s(s%12||12,t,"0")},$=i.meridiem||function(t,e,n){var r=t<12?"AM":"PM";return n?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:g.s(a+1,2,"0"),MMM:f(i.monthsShort,a,h,3),MMMM:f(h,a),D:this.$D,DD:g.s(this.$D,2,"0"),d:String(this.$W),dd:f(i.weekdaysMin,this.$W,o,2),ddd:f(i.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:g.s(s,2,"0"),h:d(1),hh:d(2),a:$(s,u,!0),A:$(s,u,!1),m:String(u),mm:g.s(u,2,"0"),s:String(this.$s),ss:g.s(this.$s,2,"0"),SSS:g.s(this.$ms,3,"0"),Z:r};return n.replace(c,function(t,e){return e||l[t]||r.replace(":","")})},$.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},$.diff=function(t,h,f){var c,d=g.p(h),$=D(t),l=6e4*($.utcOffset()-this.utcOffset()),y=this-$,M=g.m(this,$);return M=(c={},c[o]=M/12,c[u]=M,c[a]=M/3,c[s]=(y-l)/6048e5,c[i]=(y-l)/864e5,c[r]=y/36e5,c[n]=y/6e4,c[e]=y/1e3,c)[d]||y,f?M:g.a(M)},$.daysInMonth=function(){return this.endOf(u).$D},$.$locale=function(){return M[this.$L]},$.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=v(t,e,!0);return r&&(n.$L=r),n},$.clone=function(){return g.w(this.$d,this)},$.toDate=function(){return new Date(this.valueOf())},$.toJSON=function(){return this.isValid()?this.toISOString():null},$.toISOString=function(){return this.$d.toISOString()},$.toString=function(){return this.$d.toUTCString()},d}(),p=S.prototype;return D.prototype=p,[["$ms",t],["$s",e],["$m",n],["$H",r],["$W",i],["$M",u],["$y",o],["$D",h]].forEach(function(t){p[t[1]]=function(e){return this.$g(e,t[0],t[1])}}),D.extend=function(t,e){return t(e,S,D),D},D.locale=v,D.isDayjs=m,D.unix=function(t){return D(1e3*t)},D.en=M[y],D.Ls=M,D});
},{}],"B5kD":[function(require,module,exports) {
var define;
var t;!function(e,a){"object"==typeof exports&&"undefined"!=typeof module?module.exports=a():"function"==typeof t&&t.amd?t(a):e.dayjs_plugin_calendar=a()}(this,function(){"use strict";return function(t,e,a){var s="h:mm A",n={lastDay:"[Yesterday at] "+s,sameDay:"[Today at] "+s,nextDay:"[Tomorrow at] "+s,nextWeek:"dddd [at] "+s,lastWeek:"[Last] dddd [at] "+s,sameElse:"MM/DD/YYYY"};e.prototype.calendar=function(t,e){var s=e||this.$locale().calendar||n,o=a(t||void 0).startOf("d"),d=this.diff(o,"d",!0),r=d<-6?"sameElse":d<-1?"lastWeek":d<0?"lastDay":d<1?"sameDay":d<2?"nextDay":d<7?"nextWeek":"sameElse",l=s[r]||n[r];return"function"==typeof l?l.call(this,a()):this.format(l)}}});
},{}],"ZQMA":[function(require,module,exports) {
var define;
var _;!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e(require("dayjs")):"function"==typeof _&&_.amd?_(["dayjs"],e):t.dayjs_locale_ru=e(t.dayjs)}(this,function(_){"use strict";_=_&&_.hasOwnProperty("default")?_.default:_;var t="января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря".split("_"),e="январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь".split("_"),s="янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.".split("_"),n="янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.".split("_"),r=/D[oD]?(\[[^[\]]*\]|\s)+MMMM?/;function o(_,t,e){var s,n;return"m"===e?t?"минута":"минуту":_+" "+(s=+_,n={mm:t?"минута_минуты_минут":"минуту_минуты_минут",hh:"час_часа_часов",dd:"день_дня_дней",MM:"месяц_месяца_месяцев",yy:"год_года_лет"}[e].split("_"),s%10==1&&s%100!=11?n[0]:s%10>=2&&s%10<=4&&(s%100<10||s%100>=20)?n[1]:n[2])}var m=function(_,s){return r.test(s)?t[_.month()]:e[_.month()]};m.s=e,m.f=t;var a=function(_,t){return r.test(t)?s[_.month()]:n[_.month()]};a.s=n,a.f=s;var d={name:"ru",weekdays:"воскресенье_понедельник_вторник_среда_четверг_пятница_суббота".split("_"),weekdaysShort:"вск_пнд_втр_срд_чтв_птн_сбт".split("_"),weekdaysMin:"вс_пн_вт_ср_чт_пт_сб".split("_"),months:m,monthsShort:a,weekStart:1,formats:{LT:"H:mm",LTS:"H:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY г.",LLL:"D MMMM YYYY г., H:mm",LLLL:"dddd, D MMMM YYYY г., H:mm"},relativeTime:{future:"через %s",past:"%s назад",s:"несколько секунд",m:o,mm:o,h:"час",hh:o,d:"день",dd:o,M:"месяц",MM:o,y:"год",yy:o},ordinal:function(_){return _}};return _.locale(d,null,!0),d});
},{"dayjs":"dZYI"}],"KO9y":[function(require,module,exports) {
"use strict";function asyncGeneratorStep(e,t,n,r,o,a,i){try{var l=e[a](i),s=l.value}catch(c){return void n(c)}l.done?t(s):Promise.resolve(s).then(r,o)}function _asyncToGenerator(e){return function(){var t=this,n=arguments;return new Promise(function(r,o){var a=e.apply(t,n);function _next(e){asyncGeneratorStep(a,r,o,_next,_throw,"next",e)}function _throw(e){asyncGeneratorStep(a,r,o,_next,_throw,"throw",e)}_next(void 0)})}}function _slicedToArray(e,t){return _arrayWithHoles(e)||_iterableToArrayLimit(e,t)||_unsupportedIterableToArray(e,t)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function _iterableToArrayLimit(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,l=e[Symbol.iterator]();!(r=(i=l.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(s){o=!0,a=s}finally{try{r||null==l.return||l.return()}finally{if(o)throw a}}return n}}function _arrayWithHoles(e){if(Array.isArray(e))return e}var e=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.getAvatarColorByUserId=exports.exposeComponentToGlobalScope=exports.isMobileSizeScreen=exports.isWithinElement=exports.fitDimensionsIntoLimits=exports.sanitizeHTML=exports.replaceLinksInText=exports.replaceMarkdownWithHTML=exports.generateReplyMessageQuote=exports.scrollToElement=exports.getImageDimensions=exports.humanizeUpcomingDate=exports.humanizeTimezoneOffset=exports.humanizeTimezoneName=exports.humanizeFileSize=exports.base64toBlobUrl=exports.generateSvgIconsCSS=exports.playNotificationSound=exports.unlockNotificationSoundAutoplay=exports.inflect=void 0;var t=require("./utilsCommon"),n=e(require("./widget/DefaultWidget/assets")),r=e(require("dayjs")),o=e(require("dayjs/plugin/calendar"));function inflect(e,t,n){var r=t[e%100>4&&e%100<20?2:[2,0,1,1,1,2][Math.min(e%10,5)]]||t[0];return n?r:e+" "+r}function unlockNotificationSoundAutoplay(e){var t=new Audio(n.default.notificationSound);t.play().then(function(){t.pause(),t.currentTime=0}),"TEXTAREA"!==e.target.tagName&&e.currentTarget.removeEventListener(e.type,unlockNotificationSoundAutoplay)}function playNotificationSound(){var e=new Audio(n.default.notificationSound);try{e.play()}catch(t){console.error("Unable to play notification sound before any action was taken by the user in the current browser tab")}}function generateSvgIconsCSS(e,t){var n=[];for(var r in t){var o=t[r];n.push(".".concat(e).concat(r,' { background-image: url("').concat(o,'"); }'))}return n.join("\n")}function base64toBlobUrl(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:512,n=_slicedToArray(e.trim().split(","),2),r=n[0],o=n[1],a=r.replace(/data:\s*/,"").replace(/s*;s*base64s*/,""),i=atob(o),l=[],s=0;s<i.length;s+=t){for(var c=i.slice(s,s+t),u=new Array(c.length),p=0;p<c.length;p++)u[p]=c.charCodeAt(p);var m=new Uint8Array(u);l.push(m)}var f=new Blob(l,{type:a});return URL.createObjectURL(f)}function humanizeFileSize(e){var t=e/1024,n=t/1024,r=n/1024,o=t,a="kb";return r>1?(o=r,a="gb"):n>1&&(o=n,a="mb"),(o=o<.1?.1:+o.toFixed(1)).toLocaleString("ru-RU")+" "+{kb:"Кб",mb:"Мб",gb:"Гб"}[a]}function humanizeTimezoneName(e){e=new Date(e);var t={Moscow:"по Москве",Samara:"по Самаре",Yekaterinburg:"по Екатеринбургу",Novosibirsk:"по Новосибирску",Omsk:"по Омску",Krasnoyarsk:"по Красноярску",Irkutsk:"по Иркутску",Yakutsk:"по Якутску",Vladivostok:"по Владивостоку",Sakhalin:"по Южно-Сахалинску",Magadan:"по Магадану",Kamchat:"по Петропавловску-Камчатскому",Anadyr:"по Анадырю",Tajikistan:"по Душанбе",Turkmenistan:"по Ашхабаду",Uzbekistan:"по Ташкенту",Kyrgyzstan:"по Бишкеку",Azerbaijan:"по Баку",Armenia:"по Еревану","East Kazakhstan":"по Алматы","West Kazakhstan":"по западноказахстанскому времени","Eastern Europe":"по восточноевропейскому времени (".concat(humanizeTimezoneOffset(e),")")},n=e.toTimeString().replace(/.*\((.+)\)$/,"$1");for(var r in t)if(n.toLowerCase().includes(r.toLowerCase()))return t[r];return"по вашему времени (".concat(humanizeTimezoneOffset(e),")")}function humanizeTimezoneOffset(e){var t=(e=new Date(e)).getTimezoneOffset()/-60,n=t<0?"-":"+",r=Math.abs(Math.floor(t)),o=Math.abs(t%1*60);return"GMT"+n+r+(o?":"+o:"")}function humanizeUpcomingDate(e){e=new Date(e);var t={"понедельник":"в понедельник","вторник":"во вторник","среда":"в среду","четверг":"в четверг","пятница":"в пятницу","суббота":"в субботу","воскресенье":"в воскресенье"},n=r.default(e).calendar(null,{nextWeek:"dddd [в] H:mm",nextDay:"[завтра в] H:mm",sameDay:"[сегодня в] H:mm",lastDay:"D MMMM [в] H:mm",lastWeek:"D MMMM [в] H:mm",sameElse:"D MMMM [в] H:mm"});for(var o in t)n=n.replace(o,t[o]);return n}function getImageDimensions(e){return _getImageDimensions.apply(this,arguments)}function _getImageDimensions(){return(_getImageDimensions=_asyncToGenerator(regeneratorRuntime.mark(function _callee(e){return regeneratorRuntime.wrap(function _callee$(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",new Promise(function(t){var n=new Image;n.onload=function(){t({width:n.width,height:n.height})},n.onerror=function(){t({width:0,height:0})},n.src=e}));case 1:case"end":return t.stop()}},_callee)}))).apply(this,arguments)}function scrollToElement(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=(arguments.length>2&&void 0!==arguments[2]&&arguments[2],t.isSmooth),r=t.position;e&&e.tagName&&e.scrollIntoView({behavior:n?"smooth":"auto",block:r||"center"})}function generateReplyMessageQuote(e,n){var r=e||{},o=r.sender,a=r.text;return a?a.substr(0,100):(null==o?void 0:o.isOperator)?t.getUserFullName(o)||n.widgetMainTitle:t.getUserFullName(o)}function replaceMarkdownWithHTML(e){var t=[];return(e="\n\n"+(e||"")+"\n\n").replace(/<[a-z]+[^>]*>[^<]*<\/[a-z]+>/gim,function(e){return function handleHtmlReplacement(e){t.push(e);var n=t.length-1;return"◆◆◆".concat(n,"◆◆◆")}(e)}).replace(/_(?=[^ ])([^_\n]+)(?=[^ ])_/gim,"<i>$1</i>").replace(/\*(?=[^ ])([^\*\n]+)(?=[^ ])\*/gim,"<b>$1</b>").replace(/\n\s*\*/gm,"\n*").replace(/\n\s*(\d)\./gm,"\n$1.").replace(/^\*\s+([^\n]+)\n/gm,"<li>$1</li>").replace(/([^>])<li>/gm,"$1<ul><li>").replace(/<\/li>([^<])/gm,"</li></ul>$1").replace(/^\d+\.\s+([^\n]+)\n/gm,"<li>$1</li>").replace(/([^>])<li>/gm,"$1<ol><li>").replace(/<\/li>([^<])/gm,"</li></ol>$1").replace(/^\s*(\n)?(.+)/gim,function(e){return/<(\/)?(ul|ol|li|a)/.test(e)?e:"<p>\n ".concat(e.trim()," \n</p>")}).replace(/◆◆◆([0-9]+)◆◆◆/gim,function(e,n){return t[+n]}).trim()}function replaceLinksInText(e){var t=["com","org","net","info","xyz","biz","club","online","pro","site","top","edu","shop","live","cat","gov","blog","asia","store","mobi","space","tech","website","app","news","life","fun","world","icu","vip","today","work","tokyo","media","one","travel","agency","guru","cloud","name","coop","xxx","design","win","global","link","nyc","digital","network","studio","chat"],n=["js","db","cs","rm"],r=[],o=function handleLinkReplacement(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",o=!1;"_"===e[0]&&"_"===e[e.length-1]&&(o=!0,e=e.replace(/^_/,"").replace(/_$/,""));var a=_slicedToArray(e.replace(/(&quot;|&lt;|&gt;)/,"◆◆◆$1").split("◆◆◆"),2),i=a[0],l=a[1],s=void 0===l?"":l,c=_slicedToArray(i.replace(/([^a-zа-я0-9\-_\/=]+)$/gi,"◆◆◆$1").split("◆◆◆"),2),u=c[0],p=c[1],m=void 0===p?"":p;r.push(u);var f=r.length-1;return(o?"_":"")+"◆◆◆".concat(f,"|").concat(n,"◆◆◆")+m+s+(o?"_":"")};return(e=" "+(e||"")+" ").replace(/\b_?(?:https?|ftp):\/\/[a-z0-9\-\.]+\.([a-z]{2,10})(?::[0-9]{4,5})?(?:\/[a-zа-я0-9\-_\/\.?&%=#+;:,!~]*)?_?/gim,function(e,t,n){return o(e,n)}).replace(/\b_?(?:https?):\/\/((?:[0-9]{1,3}\.?){4})(?::[0-9]{4,5})?(?:\/[a-zа-я0-9\-_\/\.?&%=#+;:,!~]*)?_?/gim,function(e,t,n){return o(e,n)}).replace(/\b_?(?:http):\/\/([a-z0-9\-]+)(?::[0-9]{4,5})?(?:\/[a-zа-я0-9\-_\/\.?&%=#+;:,!~]*)?_?/gim,function(e,t,n){return o(e,n)}).replace(/\b_?[a-z0-9\.\-_+]+@[a-z0-9\.\-]+_?/gim,function(e,t,n){return o(e,n,"mailto:")}).replace(/\b_?[a-z0-9\-\.]+\.([a-z]{3,10})(?::[0-9]{4,5})?(?:\/[a-zа-я0-9\-_\/\.?&%=#+;:,!~]*)?_?/gim,function(e,n,r){return t.includes(n.toLowerCase())?o(e,r,"http://"):e}).replace(/\b_?[a-z0-9\-\.]+\.([a-z]{2})(?::[0-9]{4,5})?(?:\/[a-zа-я0-9\-_\/\.?&%=#+;:,!~]*)?(?![a-z])_?/gim,function(e,t,r){return n.includes(t.toLowerCase())?e:o(e,r,"http://")}).replace(/◆◆◆([0-9]+)\|([^◆]*)◆◆◆/gim,function(e,t,n){var o=r[+t];return'<a rel="noreferrer noopener" target="_blank" href="'.concat(n).concat(o,'">').concat(o,"</a>")}).trim()}function sanitizeHTML(e){return(e=e||"").replace(/</gm,"&lt;").replace(/>/gm,"&gt;").replace(/"/gm,"&quot;").replace(/'/gm,"&apos;")}function fitDimensionsIntoLimits(e,n,r,o){r=r||1/0,o=o||1/0;var a=e/n,i=Math.min(e,r,o*a),l=i/a;return[t._round(i),t._round(l)]}function isWithinElement(e,t){return"string"==typeof t?Boolean(e.closest("."+t)):t instanceof HTMLElement&&(t.contains(e)||e===t)}function isMobileSizeScreen(){return window.innerWidth<480}function exposeComponentToGlobalScope(e,t,n){n.widgetComponents[e]=t}function getAvatarColorByUserId(e){if(!e)return"#0033FF";var n=e.replace(/[a-z\-_=]/gi,""),r=+t._last(n)+.1*+n[n.length-2];return["#b35766","#b38b72","#d4a471","#e83b52","#ef6e9c","#fd4c26","#f46e41","#f87b31","#bafc09","#c6da6e","#7dcb39","#12972d","#19c36a","#79f2c2","#79e6f2","#066afc","#0d01a6","#c52bf0","#9405df","#273c4f"][Math.floor(2*r)]}require("dayjs/locale/ru"),r.default.locale("ru"),r.default.extend(o.default),exports.inflect=inflect,exports.unlockNotificationSoundAutoplay=unlockNotificationSoundAutoplay,exports.playNotificationSound=playNotificationSound,exports.generateSvgIconsCSS=generateSvgIconsCSS,exports.base64toBlobUrl=base64toBlobUrl,exports.humanizeFileSize=humanizeFileSize,exports.humanizeTimezoneName=humanizeTimezoneName,exports.humanizeTimezoneOffset=humanizeTimezoneOffset,exports.humanizeUpcomingDate=humanizeUpcomingDate,exports.getImageDimensions=getImageDimensions,exports.scrollToElement=scrollToElement,exports.generateReplyMessageQuote=generateReplyMessageQuote,exports.replaceMarkdownWithHTML=replaceMarkdownWithHTML,exports.replaceLinksInText=replaceLinksInText,exports.sanitizeHTML=sanitizeHTML,exports.fitDimensionsIntoLimits=fitDimensionsIntoLimits,exports.isWithinElement=isWithinElement,exports.isMobileSizeScreen=isMobileSizeScreen,exports.exposeComponentToGlobalScope=exposeComponentToGlobalScope,exports.getAvatarColorByUserId=getAvatarColorByUserId;
},{"./utilsCommon":"EjGt","./widget/DefaultWidget/assets":"H1kZ","dayjs":"dZYI","dayjs/plugin/calendar":"B5kD","dayjs/locale/ru":"ZQMA"}],"Pqo8":[function(require,module,exports) {
"use strict";function _templateObject(){var e=_taggedTemplateLiteral(["\n      mutation($companyId: Uuid!, $room: ForeignRoom, $client: ForeignClient!) {\n        joinRoom (companyId: $companyId, room: $room, client: $client) {\n          token\n          company {\n            isWorking\n            workHoursStartAt\n            widgetTitle\n            omnichannelChannels {\n              type\n              username\n            }\n            employees(first: 20) {\n              count\n              edges {\n                node { ...fragmentUser }\n              }\n            }\n          }\n          client {\n            ...fragmentUser\n            omnichannelCode\n          }\n          room {\n            id\n            title\n            foreignId\n            mustOpenWidget\n            unreadMessagesCount\n            unreadRepliesCount\n            lastReadMessageId\n          }\n        }\n      }\n    "]);return _templateObject=function _templateObject(){return e},e}function _taggedTemplateLiteral(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}function _slicedToArray(e,t){return _arrayWithHoles(e)||_iterableToArrayLimit(e,t)||_unsupportedIterableToArray(e,t)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}function _iterableToArrayLimit(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],i=!0,r=!1,o=void 0;try{for(var a,s=e[Symbol.iterator]();!(i=(a=s.next()).done)&&(n.push(a.value),!t||n.length!==t);i=!0);}catch(l){r=!0,o=l}finally{try{i||null==s.return||s.return()}finally{if(r)throw o}}return n}}function _arrayWithHoles(e){if(Array.isArray(e))return e}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function _typeof(e){return typeof e}:function _typeof(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}Object.defineProperty(exports,"__esModule",{value:!0}),exports.ElixirChat=void 0;var e=require("unique-names-generator"),t=require("../utilsCommon"),n=require("./serializers/serializeUser"),i=require("./Logger"),r=require("./ScreenshotTaker"),o=require("./TypingStatusSubscription"),a=require("./UpdateMessageSubscription"),s=require("./OnlineStatusSubscription"),l=require("./UnreadMessagesCounter"),c=require("./MessageSubscription"),u=require("./GraphQLClient"),h=require("./GraphQLClientSocket"),m=require("./ElixirChatEventTypes"),d=require("../utilsWidget"),g=function(){function ElixirChat(e){var t=this;_classCallCheck(this,ElixirChat),this.version="4.0.2.omnichannel@13",this.config={},this.joinRoomData={},this.isInitialized=!1,this.eventHandlers={},this.on=function(e,n){var i;if(e instanceof Array)e.map(function(e){return t.on(e,n)});else{(null===(i=t.eventHandlers[e])||void 0===i?void 0:i.callbacks)||(t.eventHandlers[e]={callbacks:{}});var r=t.eventHandlers[e],o=t.getCallbackUniqueHash(n);r.callbacks[o]=n,r.firedOnce&&n(r.firedOnceArguments)}},this.off=function(e,n){var i;(null===(i=t.eventHandlers[e])||void 0===i?void 0:i.callbacks)||(t.eventHandlers[e]={callbacks:{}});var r=t.eventHandlers[e];if(window.__this=t,window.__callback=n,console.log("__ eventHandler",e,r,n),n)for(var o in r.callbacks){if(r.callbacks[o]===n)return void delete r.callbacks[o]}else r.callbacks={}},this.triggerEvent=function(e,n,i){var r;i=i||{},t.logEvent(e,n),(null===(r=t.eventHandlers[e])||void 0===r?void 0:r.callbacks)||(t.eventHandlers[e]={callbacks:{}});var o=t.eventHandlers[e];o.firedOnce=i.firedOnce,i.firedOnce&&(o.firedOnceArguments=n),Object.values(o.callbacks).forEach(function(e){return e(n)})},this.sendMessage=function(e){return t.checkIfConnected().then(function(){return t.typingStatusSubscription.dispatchTypedText(!1),t.messageSubscription.sendMessage(e)})},this.retrySendMessage=function(e){return t.checkIfConnected().then(function(){return t.messageSubscription.retrySendMessage(e)})},this.fetchMessageHistory=function(e){return t.checkIfConnected().then(function(){return t.messageSubscription.fetchMessageHistory(e)})},this.fetchPrecedingMessageHistory=function(e){return t.checkIfConnected().then(function(){return t.messageSubscription.fetchPrecedingMessageHistory(e)})},this.dispatchTypedText=function(e){return t.checkIfConnected().then(function(){return t.typingStatusSubscription.dispatchTypedText(e)})},this.setLastReadMessage=function(e){return t.checkIfConnected().then(function(){return t.unreadMessagesCounter.setLastReadMessage(e)})},this.takeScreenshot=function(){return t.screenshotTaker.takeScreenshot()},this.logEvent=function(e,n){return t.logger.logEvent(e,n)},this.logInfo=function(e,n){return t.logger.logInfo(e,n)},this.logError=function(e,n){return t.logger.logError(e,n)},this.sendAPIRequest=function(e,n,i){var r=u.parseGraphQLMethodFromQuery(e);return t.graphQLClient.query(e,n,i).then(function(e){return e[r]}).catch(function(i){var o,a,s="".concat(r,": ").concat(u.extractErrorMessage(i)),l={errorMessage:s,errorType:(null===(a=null===(o=null==i?void 0:i.errors)||void 0===o?void 0:o[0])||void 0===a?void 0:a.reason)||null,rawError:i,query:e,variables:n,graphQLMethod:r};throw t.logError(s,l),Object.assign({errorMessage:s},l)})},this.disconnect=function(){return t.checkIfConnected().then(function(){t.logInfo("Disconnecting from ElixirChat"),t.isConnected=!1,t.messageSubscription.unsubscribe(),t.updateMessageSubscription.unsubscribe(),t.unreadMessagesCounter.unsubscribe(),t.typingStatusSubscription.unsubscribe(),t.onlineStatusSubscription.unsubscribe()})},this.reconnect=function(e){return t.logInfo("Attempting to reconnect to another room",e),t.disconnect(),t.joinRoom(e.room,e.client)},this.hasAllRequiredConfigParameters(e)&&this.initialize(e),"undefined"!=typeof window&&(window.elixirChat=this)}return _createClass(ElixirChat,[{key:"hasAllRequiredConfigParameters",value:function hasAllRequiredConfigParameters(e){var t=["apiUrl","socketUrl","companyId"].filter(function(t){return!e[t]});if(t.length)throw"Required parameters: ".concat(t.join(", ")," not provided. \nSee more: https://github.com/elixirchat/elixirchat-js-sdk#config");return!0}},{key:"initialize",value:function initialize(e){var t=this;return this.config=e||{},this.isInitialized=!0,this.graphQLClient=new u.GraphQLClient,this.graphQLClientSocket=new h.GraphQLClientSocket,this.logger=new i.Logger({elixirChat:this}),this.screenshotTaker=new r.ScreenshotTaker({elixirChat:this}),this.messageSubscription=new c.MessageSubscription({elixirChat:this}),this.unreadMessagesCounter=new l.UnreadMessagesCounter({elixirChat:this}),this.updateMessageSubscription=new a.UpdateMessageSubscription({elixirChat:this}),this.typingStatusSubscription=new o.TypingStatusSubscription({elixirChat:this}),this.onlineStatusSubscription=new s.OnlineStatusSubscription({elixirChat:this}),this.on(m.UPDATE_MESSAGES_CHANGE,function(e){t.messageSubscription.changeMessageBy({id:e.id},e)}),this.on(m.LAST_READ_MESSAGE_CHANGE,function(e){t.messageSubscription.markPrecedingMessagesRead(e)}),this.logInfo("Initializing ElixirChat",e),this.joinRoom(this.config.room,this.config.client)}},{key:"serializeClient",value:function serializeClient(e){e=e||{};var n=t.getFromLocalStorage("elixirchat-client")||{},i=!0;e.firstName||(i=!1),!e.fullName||e.firstName||e.lastName||(e=Object.assign(Object.assign({},e),t.parseFullName(e.fullName)));var r=(e.id||n.id).toString(),o=e.firstName||n.firstName,a=e.lastName||n.lastName;if(!o&&!a){var s=this.generateAnonymousClientData();r=s.id,o=s.firstName,a=s.lastName,i=!1}return{id:r.toString(),firstName:o,lastName:a,isConfidentAboutFirstName:i}}},{key:"serializeRoom",value:function serializeRoom(e,n){e=e||{};var i=t.getFromLocalStorage("elixirchat-room")||{},r=e.id||i.id||n.id,o=e.title||i.title||n.firstName+" "+n.lastName,a={};if("object"===_typeof(e.data))for(var s in e.data)a[s]=e.data[s].toString();return{id:r.toString(),title:o,isPrivate:r===n.id,data:"object"===_typeof(e.data)?e.data:{}}}},{key:"serializeRoomData",value:function serializeRoomData(e){var t={};if("object"===_typeof(e))for(var n in e)t[n]=e[n].toString();return JSON.stringify(t)}},{key:"generateAnonymousClientData",value:function generateAnonymousClientData(){var n=e.uniqueNamesGenerator({length:2,separator:" ",dictionaries:null}),i=_slicedToArray(n.split(" ").map(t.capitalize),2),r=i[0],o=i[1],a=t.randomDigitStringId(4);return{id:n.replace(" ","-")+"-"+a,firstName:r,lastName:o}}},{key:"joinRoom",value:function joinRoom(e,i){var r=this;this.client=this.serializeClient(i),this.room=this.serializeRoom(e,this.client),t.setToLocalStorage("elixirchat-room",this.room),t.setToLocalStorage("elixirchat-client",this.client);var o={companyId:this.config.companyId,client:{id:this.client.id,firstName:this.client.firstName,lastName:this.client.lastName},room:{id:this.room.id,title:this.room.title,data:this.serializeRoomData(this.room.data)}},a=u.insertGraphQlFragments(u.gql(_templateObject()),{fragmentUser:n.fragmentUser}),s=new u.GraphQLClient;return s.initialize({url:this.config.apiUrl}),s.query(a,o).then(function(t){if(null==t?void 0:t.joinRoom)return r.onJoinRoomSuccess(t.joinRoom);throw r.onJoinRoomError(t,e,i)}).catch(function(t){throw r.onJoinRoomError(t,e,i)})}},{key:"onJoinRoomSuccess",value:function onJoinRoomSuccess(e){var t=this.config,n=t.apiUrl,i=t.socketUrl;this.joinRoomData=this.serializeJoinRoomData(e),this.isConnected=!0,this.logInfo("Joined room",this.joinRoomData);var r=this.joinRoomData,o=r.token,a=r.isOnline,s=r.workHoursStartAt,l=r.unreadMessagesCount,c=r.unreadRepliesCount,u=r.lastReadMessageId;return this.graphQLClient.initialize({url:n,token:o}),this.graphQLClientSocket.initialize({url:i,token:o}),this.messageSubscription.subscribe(),this.updateMessageSubscription.subscribe(),this.onlineStatusSubscription.subscribe({isOnline:a,workHoursStartAt:s}),this.unreadMessagesCounter.subscribe({unreadMessagesCount:l,unreadRepliesCount:c,lastReadMessageId:u}),this.triggerEvent(m.JOIN_ROOM_SUCCESS,this.joinRoomData,{firedOnce:!0}),this.joinRoomData}},{key:"onJoinRoomError",value:function onJoinRoomError(e,t,n){var i=this;throw this.joinRoomData=this.serializeJoinRoomData(e),this.triggerEvent(m.JOIN_ROOM_ERROR,Object.assign(Object.assign({},this.joinRoomData),{error:e})),setTimeout(function(){i.triggerEvent(m.ERROR_ALERT_SHOW,{customMessage:"joinRoom: ".concat(u.extractErrorMessage(e)),retryCallback:function retryCallback(){return i.joinRoom(t,n)},error:e})},500),Object.assign(Object.assign({},this.joinRoomData),{error:e})}},{key:"serializeJoinRoomData",value:function serializeJoinRoomData(e){var t,i=this,r=e||{},o=r.token,a=r.room,s=void 0===a?{}:a,l=r.client,c=void 0===l?{}:l,h=r.company,m=void 0===h?{}:h;return{token:o||"",logoUrl:m.logoUrl||"",mainTitle:m.widgetTitle||"",chatSubtitle:m.widgetSubtitle||"",channels:this.serializeChannels(m.omnichannelChannels,c.omnichannelCode),employeesCount:(null===(t=m.employees)||void 0===t?void 0:t.count)||0,employees:u.simplifyGraphQLJSON(null==m?void 0:m.employees).map(function(e){return n.serializeUser(e,i)}),isOnline:m.isWorking||!1,isPopupOpen:s.mustOpenWidget||!1,workHoursStartAt:m.workHoursStartAt||null,elixirChatClientId:c.id||null,elixirChatRoomId:s.id||null,unreadMessagesCount:s.unreadMessagesCount||0,unreadRepliesCount:s.unreadRepliesCount||0,omnichannelCode:c.omnichannelCode||""}}},{key:"serializeChannels",value:function serializeChannels(e,n){var i=d.isMobileSizeScreen(),r="Чтобы продолжить, просто отправьте целиком это сообщение. Ваш код: ".concat(n),o={whatsapp:"https://web.whatsapp.com/send?phone={{ username }}&text={{ manualMessage }}",telegram:"http://t.me/{{ username }}?start={{ omnichannelCode }}",viber:"viber://pa?chatURI={{ username }}&context={{ omnichannelCode }}",facebook:"https://m.me/{{ username }}?ref={{ omnichannelCode }}",vkontakte:"https://vk.me/{{ username }}?ref={{ omnichannelCode }}"},a={whatsapp:"whatsapp://send?phone={{ username }}&text={{ manualMessage }}",telegram:"tg://resolve?domain={{ username }}&start={{ omnichannelCode }}",viber:"viber://pa?chatURI={{ username }}&context={{ omnichannelCode }}",facebook:"https://m.me/{{ username }}?ref={{ omnichannelCode }}",vkontakte:"https://vk.me/{{ username }}?ref={{ omnichannelCode }}"};return(e||[]).map(function(e){var s=e.username,l=e.type.toLowerCase(),c=i?a[l]:o[l],u=t.template(c,{username:s,omnichannelCode:n,manualMessage:r});return{type:l,username:s,omnichannelCode:n,url:u}})}},{key:"checkIfConnected",value:function checkIfConnected(){var e=this;if(this.isConnected)return Promise.resolve();var t="ElixirChat is not currently connected. Use reconnect({ room, client }) method to connect to a room.";return this.logError(t),this.triggerEvent(m.ERROR_ALERT_SHOW,{customMessage:t,retryCallback:function retryCallback(){return e.joinRoom(e.config.room,e.config.client)},error:{message:t}}),Promise.reject({message:t})}},{key:"getCallbackUniqueHash",value:function getCallbackUniqueHash(e){var n=t.hashCode(t.normalizeErrorStack((new Error).stack,3)),i=t.hashCode(e.toString());return Math.abs(i+n)}},{key:"onlineStatus",get:function get(){return this.onlineStatusSubscription.onlineStatus}},{key:"unreadMessagesCount",get:function get(){return this.unreadMessagesCounter.unreadMessagesCount}},{key:"unreadRepliesCount",get:function get(){return this.unreadMessagesCounter.unreadRepliesCount}},{key:"lastReadMessageId",get:function get(){return this.unreadMessagesCounter.lastReadMessageId}},{key:"messageHistory",get:function get(){return this.messageSubscription.messageHistory}}]),ElixirChat}();exports.ElixirChat=g,"undefined"!=typeof window&&(window.ElixirChat=g);
},{"unique-names-generator":"Qz33","../utilsCommon":"EjGt","./serializers/serializeUser":"lqyB","./Logger":"shls","./ScreenshotTaker":"CLsL","./TypingStatusSubscription":"QERd","./UpdateMessageSubscription":"AgKM","./OnlineStatusSubscription":"XLSb","./UnreadMessagesCounter":"xY1B","./MessageSubscription":"jRw6","./GraphQLClient":"fvSB","./GraphQLClientSocket":"P6qz","./ElixirChatEventTypes":"Cteb","../utilsWidget":"KO9y"}],"QCba":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("./ElixirChat");exports.default=e.ElixirChat;
},{"./ElixirChat":"Pqo8"}]},{},["QCba"], null)